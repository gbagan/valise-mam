// Generated by purs bundle 0.13.5
var PS = {};
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];                          
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l*k);
      var n = 0;
      for (var i = 0; i < l; i++) {
        var f = fs[i];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var apply = function (f) {
      return function (x) {
          return f(x);
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
  exports["apply"] = apply;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var $foreign = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];                
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  }; 
  var applyArray = new Apply(function () {
      return Data_Functor.functorArray;
  }, $foreign.arrayApply);
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
  exports["applyArray"] = applyArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Unit = $PS["Data.Unit"];                
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var unless = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (!v) {
                  return v1;
              };
              if (v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 62, column 1 - line 62, column 65): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 57, column 1 - line 57, column 63): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["unless"] = unless;
  exports["when"] = when;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var $foreign = $PS["Control.Bind"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];                
  var Discard = function (discard) {
      this.discard = discard;
  };
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var discard = function (dict) {
      return dict.discard;
  }; 
  var bindArray = new Bind(function () {
      return Control_Apply.applyArray;
  }, $foreign.arrayBind);
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisli = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bind(dictBind)(f(a))(g);
              };
          };
      };
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  var ifM = function (dictBind) {
      return function (cond) {
          return function (t) {
              return function (f) {
                  return bind(dictBind)(cond)(function (cond$prime) {
                      if (cond$prime) {
                          return t;
                      };
                      return f;
                  });
              };
          };
      };
  };
  var join = function (dictBind) {
      return function (m) {
          return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["discard"] = discard;
  exports["join"] = join;
  exports["composeKleisli"] = composeKleisli;
  exports["ifM"] = ifM;
  exports["bindArray"] = bindArray;
  exports["discardUnit"] = discardUnit;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var whenM = function (dictMonad) {
      return function (mb) {
          return function (m) {
              return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
                  return Control_Applicative.when(dictMonad.Applicative0())(v)(m);
              });
          };
      };
  };
  var unlessM = function (dictMonad) {
      return function (mb) {
          return function (m) {
              return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
                  return Control_Applicative.unless(dictMonad.Applicative0())(v)(m);
              });
          };
      };
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
  exports["whenM"] = whenM;
  exports["unlessM"] = unlessM;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];                          
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
})(PS);
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqBooleanImpl = refEq;
  exports.eqIntImpl = refEq;
  exports.eqNumberImpl = refEq;
  exports.eqCharImpl = refEq;
  exports.eqStringImpl = refEq;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqString = new Eq($foreign.eqStringImpl);
  var eqNumber = new Eq($foreign.eqNumberImpl);
  var eqInt = new Eq($foreign.eqIntImpl);
  var eqChar = new Eq($foreign.eqCharImpl);
  var eqBoolean = new Eq($foreign.eqBooleanImpl);
  var eq = function (dict) {
      return dict.eq;
  };
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqNumber"] = eqNumber;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
})(PS);
(function(exports) {
  "use strict";

  var unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };                                         
  exports.ordIntImpl = unsafeCompareImpl;
  exports.ordNumberImpl = unsafeCompareImpl;
  exports.ordStringImpl = unsafeCompareImpl;
  exports.ordCharImpl = unsafeCompareImpl;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];
  var Data_Eq = $PS["Data.Eq"];                    
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  var eqOrdering = new Data_Eq.Eq(function (v) {
      return function (v1) {
          if (v instanceof LT && v1 instanceof LT) {
              return true;
          };
          if (v instanceof GT && v1 instanceof GT) {
              return true;
          };
          if (v instanceof EQ && v1 instanceof EQ) {
              return true;
          };
          return false;
      };
  });
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["eqOrdering"] = eqOrdering;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  }; 
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordNumber = new Ord(function () {
      return Data_Eq.eqNumber;
  }, $foreign.ordNumberImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordChar = new Ord(function () {
      return Data_Eq.eqChar;
  }, $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var compare = function (dict) {
      return dict.compare;
  };
  var comparing = function (dictOrd) {
      return function (f) {
          return function (x) {
              return function (y) {
                  return compare(dictOrd)(f(x))(f(y));
              };
          };
      };
  };
  var greaterThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.GT) {
                  return true;
              };
              return false;
          };
      };
  };
  var lessThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.LT) {
                  return true;
              };
              return false;
          };
      };
  };
  var max = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return y;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return x;
              };
              throw new Error("Failed pattern match at Data.Ord (line 167, column 3 - line 170, column 12): " + [ v.constructor.name ]);
          };
      };
  };
  var min = function (dictOrd) {
      return function (x) {
          return function (y) {
              var v = compare(dictOrd)(x)(y);
              if (v instanceof Data_Ordering.LT) {
                  return x;
              };
              if (v instanceof Data_Ordering.EQ) {
                  return x;
              };
              if (v instanceof Data_Ordering.GT) {
                  return y;
              };
              throw new Error("Failed pattern match at Data.Ord (line 158, column 3 - line 161, column 12): " + [ v.constructor.name ]);
          };
      };
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["lessThan"] = lessThan;
  exports["greaterThan"] = greaterThan;
  exports["comparing"] = comparing;
  exports["min"] = min;
  exports["max"] = max;
  exports["ordInt"] = ordInt;
  exports["ordNumber"] = ordNumber;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];        
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [ v.constructor.name ]);
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  var ordMaybe = function (dictOrd) {
      return new Data_Ord.Ord(function () {
          return eqMaybe(dictOrd.Eq0());
      }, function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return Data_Ordering.EQ.value;
              };
              if (x instanceof Nothing) {
                  return Data_Ordering.LT.value;
              };
              if (y instanceof Nothing) {
                  return Data_Ordering.GT.value;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 194, column 1 - line 194, column 51): " + [ x.constructor.name, y.constructor.name ]);
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  var altMaybe = new Control_Alt.Alt(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nothing) {
              return v1;
          };
          return v;
      };
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["altMaybe"] = altMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["eqMaybe"] = eqMaybe;
  exports["ordMaybe"] = ordMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.List"] = $PS["Data.List"] || {};
  var exports = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var reverse = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var $$null = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };    
  var last = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return new Data_Maybe.Just(v.value0);
          };
          if (v instanceof Data_List_Types.Cons) {
              $copy_v = v.value1;
              return;
          };
          $tco_done = true;
          return Data_Maybe.Nothing.value;
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  exports["null"] = $$null;
  exports["last"] = last;
  exports["reverse"] = reverse;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];
  var Data_Functor = $PS["Data.Functor"];                  
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var snd = function (v) {
      return v.value1;
  };
  var functorTuple = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new Tuple(m.value0, f(m.value1));
      };
  });                                                                                                   
  var fst = function (v) {
      return v.value0;
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["uncurry"] = uncurry;
  exports["functorTuple"] = functorTuple;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.CatQueue"] = $PS["Data.CatQueue"] || {};
  var exports = $PS["Data.CatQueue"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                            
  var CatQueue = (function () {
      function CatQueue(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatQueue.create = function (value0) {
          return function (value1) {
              return new CatQueue(value0, value1);
          };
      };
      return CatQueue;
  })();
  var uncons = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
          };
          if (v.value0 instanceof Data_List_Types.Nil) {
              $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
              return;
          };
          if (v.value0 instanceof Data_List_Types.Cons) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
          };
          throw new Error("Failed pattern match at Data.CatQueue (line 83, column 1 - line 83, column 63): " + [ v.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var snoc = function (v) {
      return function (a) {
          return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
      };
  };
  var $$null = function (v) {
      if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };                                                                                                
  var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
  exports["empty"] = empty;
  exports["null"] = $$null;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
})(PS);
(function(exports) {
  "use strict";

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  var semigroupFn = function (dictSemigroup) {
      return new Semigroup(function (f) {
          return function (g) {
              return function (x) {
                  return append(dictSemigroup)(f(x))(g(x));
              };
          };
      });
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupFn"] = semigroupFn;
  exports["semigroupArray"] = semigroupArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.CatList"] = $PS["Data.CatList"] || {};
  var exports = $PS["Data.CatList"];
  var Data_CatQueue = $PS["Data.CatQueue"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];                            
  var CatNil = (function () {
      function CatNil() {

      };
      CatNil.value = new CatNil();
      return CatNil;
  })();
  var CatCons = (function () {
      function CatCons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatCons.create = function (value0) {
          return function (value1) {
              return new CatCons(value0, value1);
          };
      };
      return CatCons;
  })();
  var link = function (v) {
      return function (v1) {
          if (v instanceof CatNil) {
              return v1;
          };
          if (v1 instanceof CatNil) {
              return v;
          };
          if (v instanceof CatCons) {
              return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.CatList (line 109, column 1 - line 109, column 54): " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var foldr = function (k) {
      return function (b) {
          return function (q) {
              var foldl = function ($copy_v) {
                  return function ($copy_c) {
                      return function ($copy_v1) {
                          var $tco_var_v = $copy_v;
                          var $tco_var_c = $copy_c;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v, c, v1) {
                              if (v1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return c;
                              };
                              if (v1 instanceof Data_List_Types.Cons) {
                                  $tco_var_v = v;
                                  $tco_var_c = v(c)(v1.value0);
                                  $copy_v1 = v1.value1;
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.CatList (line 125, column 3 - line 125, column 59): " + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
                          };
                          return $tco_result;
                      };
                  };
              };
              var go = function ($copy_xs) {
                  return function ($copy_ys) {
                      var $tco_var_xs = $copy_xs;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(xs, ys) {
                          var v = Data_CatQueue.uncons(xs);
                          if (v instanceof Data_Maybe.Nothing) {
                              $tco_done = true;
                              return foldl(function (x) {
                                  return function (i) {
                                      return i(x);
                                  };
                              })(b)(ys);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              $tco_var_xs = v.value0.value1;
                              $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
                              return;
                          };
                          throw new Error("Failed pattern match at Data.CatList (line 121, column 14 - line 123, column 67): " + [ v.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_xs, $copy_ys);
                      };
                      return $tco_result;
                  };
              };
              return go(q)(Data_List_Types.Nil.value);
          };
      };
  };
  var uncons = function (v) {
      if (v instanceof CatNil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof CatCons) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {
              var $44 = Data_CatQueue["null"](v.value1);
              if ($44) {
                  return CatNil.value;
              };
              return foldr(link)(CatNil.value)(v.value1);
          })()));
      };
      throw new Error("Failed pattern match at Data.CatList (line 100, column 1 - line 100, column 61): " + [ v.constructor.name ]);
  };
  var empty = CatNil.value;
  var append = link;
  var semigroupCatList = new Data_Semigroup.Semigroup(append);
  var snoc = function (cat) {
      return function (a) {
          return append(cat)(new CatCons(a, Data_CatQueue.empty));
      };
  };
  exports["empty"] = empty;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
  exports["semigroupCatList"] = semigroupCatList;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Control.Monad.Free"] = $PS["Control.Monad.Free"] || {};
  var exports = $PS["Control.Monad.Free"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_CatList = $PS["Data.CatList"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Free = (function () {
      function Free(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Free.create = function (value0) {
          return function (value1) {
              return new Free(value0, value1);
          };
      };
      return Free;
  })();
  var Return = (function () {
      function Return(value0) {
          this.value0 = value0;
      };
      Return.create = function (value0) {
          return new Return(value0);
      };
      return Return;
  })();
  var Bind = (function () {
      function Bind(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bind.create = function (value0) {
          return function (value1) {
              return new Bind(value0, value1);
          };
      };
      return Bind;
  })();
  var toView = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          var runExpF = function (v2) {
              return v2;
          };
          var concatF = function (v2) {
              return function (r) {
                  return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
              };
          };
          if (v.value0 instanceof Return) {
              var v2 = Data_CatList.uncons(v.value1);
              if (v2 instanceof Data_Maybe.Nothing) {
                  $tco_done = true;
                  return new Return(v.value0.value0);
              };
              if (v2 instanceof Data_Maybe.Just) {
                  $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
                  return;
              };
              throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [ v2.constructor.name ]);
          };
          if (v.value0 instanceof Bind) {
              $tco_done = true;
              return new Bind(v.value0.value0, function (a) {
                  return concatF(v.value0.value1(a))(v.value1);
              });
          };
          throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [ v.value0.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var resume$prime = function (k) {
      return function (j) {
          return function (f) {
              var v = toView(f);
              if (v instanceof Return) {
                  return j(v.value0);
              };
              if (v instanceof Bind) {
                  return k(v.value0)(v.value1);
              };
              throw new Error("Failed pattern match at Control.Monad.Free (line 213, column 17 - line 215, column 20): " + [ v.constructor.name ]);
          };
      };
  };
  var fromView = function (f) {
      return new Free(f, Data_CatList.empty);
  };
  var freeMonad = new Control_Monad.Monad(function () {
      return freeApplicative;
  }, function () {
      return freeBind;
  });
  var freeFunctor = new Data_Functor.Functor(function (k) {
      return function (f) {
          return Control_Bind.bindFlipped(freeBind)((function () {
              var $120 = Control_Applicative.pure(freeApplicative);
              return function ($121) {
                  return $120(k($121));
              };
          })())(f);
      };
  });
  var freeBind = new Control_Bind.Bind(function () {
      return freeApply;
  }, function (v) {
      return function (k) {
          return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
      };
  });
  var freeApply = new Control_Apply.Apply(function () {
      return freeFunctor;
  }, Control_Monad.ap(freeMonad));
  var freeApplicative = new Control_Applicative.Applicative(function () {
      return freeApply;
  }, function ($122) {
      return fromView(Return.create($122));
  });
  var liftF = function (f) {
      return fromView(new Bind(f, (function () {
          var $123 = Control_Applicative.pure(freeApplicative);
          return function ($124) {
              return $123($124);
          };
      })()));
  };
  var substFree = function (k) {
      var go = function (f) {
          var v = toView(f);
          if (v instanceof Return) {
              return Control_Applicative.pure(freeApplicative)(v.value0);
          };
          if (v instanceof Bind) {
              return Control_Bind.bind(freeBind)(k(v.value0))(Data_Functor.map(Data_Functor.functorFn)(go)(v.value1));
          };
          throw new Error("Failed pattern match at Control.Monad.Free (line 168, column 10 - line 170, column 33): " + [ v.constructor.name ]);
      };
      return go;
  };
  var hoistFree = function (k) {
      return substFree(function ($125) {
          return liftF(k($125));
      });
  };
  exports["liftF"] = liftF;
  exports["hoistFree"] = hoistFree;
  exports["resume'"] = resume$prime;
  exports["freeFunctor"] = freeFunctor;
  exports["freeBind"] = freeBind;
  exports["freeApplicative"] = freeApplicative;
  exports["freeApply"] = freeApply;
  exports["freeMonad"] = freeMonad;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Control.Monad.Rec.Class"] = $PS["Control.Monad.Rec.Class"] || {};
  var exports = $PS["Control.Monad.Rec.Class"];      
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var MonadRec = function (Monad0, tailRecM) {
      this.Monad0 = Monad0;
      this.tailRecM = tailRecM;
  };
  var tailRecM = function (dict) {
      return dict.tailRecM;
  };
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["MonadRec"] = MonadRec;
  exports["tailRecM"] = tailRecM;
})(PS);
(function(exports) {
  "use strict";

  exports.map_ = function (f) {
    return function (a) {
      return function () {
        return f(a());
      };
    };
  };

  exports.pure_ = function (a) {
    return function () {
      return a;
    };
  };

  exports.bind_ = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.foreach = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Control.Monad.ST.Internal"] = $PS["Control.Monad.ST.Internal"] || {};
  var exports = $PS["Control.Monad.ST.Internal"];
  var $foreign = $PS["Control.Monad.ST.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var functorST = new Data_Functor.Functor($foreign.map_);
  var monadST = new Control_Monad.Monad(function () {
      return applicativeST;
  }, function () {
      return bindST;
  });
  var bindST = new Control_Bind.Bind(function () {
      return applyST;
  }, $foreign.bind_);
  var applyST = new Control_Apply.Apply(function () {
      return functorST;
  }, Control_Monad.ap(monadST));
  var applicativeST = new Control_Applicative.Applicative(function () {
      return applyST;
  }, $foreign.pure_);
  exports["functorST"] = functorST;
  exports["applicativeST"] = applicativeST;
  exports["foreach"] = $foreign.foreach;
})(PS);
(function(exports) {
  "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };

  var replicateFill = function (count) {
    return function (value) {
      if (count < 1) {
        return [];
      }
      var result = new Array(count);
      return result.fill(value);
    };
  };

  var replicatePolyfill = function (count) {
    return function (value) {
      var result = [];
      var n = 0;
      for (var i = 0; i < count; i++) {
        result[n++] = value;
      }
      return result;
    };
  };

  // In browsers that have Array.prototype.fill we use it, as it's faster.
  exports.replicate = typeof Array.prototype.fill === "function" ? replicateFill : replicatePolyfill;

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.snoc = function (l) {
    return function (e) {
      var l1 = l.slice();
      l1.push(e);
      return l1;
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports._insertAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (a) {
          return function (l) {
            if (i < 0 || i > l.length) return nothing;
            var l1 = l.slice();
            l1.splice(i, 0, a);
            return just(l1);
          };
        };
      };
    };
  };

  exports._updateAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (a) {
          return function (l) {
            if (i < 0 || i >= l.length) return nothing;
            var l1 = l.slice();
            l1[i] = a;
            return just(l1);
          };
        };
      };
    };
  };

  //------------------------------------------------------------------------------
  // Transformations -------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.reverse = function (l) {
    return l.slice().reverse();
  };

  exports.concat = function (xss) {
    if (xss.length <= 10000) {
      // This method is faster, but it crashes on big arrays.
      // So we use it when can and fallback to simple variant otherwise.
      return Array.prototype.concat.apply([], xss);
    }

    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortImpl = function (f) {
    return function (l) {
      return l.slice().sort(function (x, y) {
        return f(x)(y);
      });
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  exports.take = function (n) {
    return function (l) {
      return n < 1 ? [] : l.slice(0, n);
    };
  };

  exports.drop = function (n) {
    return function (l) {
      return n < 1 ? l : l.slice(n);
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };

  //------------------------------------------------------------------------------
  // Partial ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.unsafeIndexImpl = function (xs) {
    return function (n) {
      return xs[n];
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  "use strict";

  exports.poke = function (i) {
    return function (a) {
      return function (xs) {
        return function () {
          var ret = i >= 0 && i < xs.length;
          if (ret) xs[i] = a;
          return ret;
        };
      };
    };
  };

  exports.pushAll = function (as) {
    return function (xs) {
      return function () {
        return xs.push.apply(xs, as);
      };
    };
  };

  exports.copyImpl = function (xs) {
    return function () {
      return xs.slice();
    };
  };
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Array.ST"] = $PS["Data.Array.ST"] || {};
  var exports = $PS["Data.Array.ST"];
  var $foreign = $PS["Data.Array.ST"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var unsafeThaw = (function () {
      var $11 = Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST);
      return function ($12) {
          return $11($12);
      };
  })();
  var unsafeFreeze = (function () {
      var $13 = Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST);
      return function ($14) {
          return $13($14);
      };
  })();
  var thaw = $foreign.copyImpl;
  var withArray = function (f) {
      return function (xs) {
          return function __do() {
              var v = thaw(xs)();
              var v1 = f(v)();
              return unsafeFreeze(v)();
          };
      };
  };
  var push = function (a) {
      return $foreign.pushAll([ a ]);
  };
  exports["withArray"] = withArray;
  exports["push"] = push;
  exports["unsafeFreeze"] = unsafeFreeze;
  exports["unsafeThaw"] = unsafeThaw;
  exports["poke"] = $foreign.poke;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  var heytingAlgebraFunction = function (dictHeytingAlgebra) {
      return new HeytingAlgebra(function (f) {
          return function (g) {
              return function (a) {
                  return conj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (g) {
              return function (a) {
                  return disj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (v) {
          return ff(dictHeytingAlgebra);
      }, function (f) {
          return function (g) {
              return function (a) {
                  return implies(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (a) {
              return not(dictHeytingAlgebra)(f(a));
          };
      }, function (v) {
          return tt(dictHeytingAlgebra);
      });
  };
  exports["tt"] = tt;
  exports["ff"] = ff;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
  exports["heytingAlgebraFunction"] = heytingAlgebraFunction;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };                         
  var monoidArray = new Monoid(function () {
      return Data_Semigroup.semigroupArray;
  }, [  ]);
  var mempty = function (dict) {
      return dict.mempty;
  };
  var monoidFn = function (dictMonoid) {
      return new Monoid(function () {
          return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
      }, function (v) {
          return mempty(dictMonoid);
      });
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidFn"] = monoidFn;
  exports["monoidArray"] = monoidArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Monoid.Conj"] = $PS["Data.Monoid.Conj"] || {};
  var exports = $PS["Data.Monoid.Conj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Conj = function (x) {
      return x;
  };
  var semigroupConj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var monoidConj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupConj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
  };
  exports["Conj"] = Conj;
  exports["monoidConj"] = monoidConj;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Monoid.Disj"] = $PS["Data.Monoid.Disj"] || {};
  var exports = $PS["Data.Monoid.Disj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["monoidDisj"] = monoidDisj;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid_Conj = $PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];                      
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };                        
  var newtypeDisj = new Newtype(function (v) {
      return v;
  }, Data_Monoid_Disj.Disj);
  var newtypeConj = new Newtype(function (v) {
      return v;
  }, Data_Monoid_Conj.Conj);
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          var $96 = Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1));
                          var $97 = Data_Functor.map(dictFunctor)(wrap(dictNewtype));
                          return function ($98) {
                              return $96(f($97($98)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["unwrap"] = unwrap;
  exports["Newtype"] = Newtype;
  exports["alaF"] = alaF;
  exports["newtypeConj"] = newtypeConj;
  exports["newtypeDisj"] = newtypeDisj;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Conj = $PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];                
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)((function () {
                  var $197 = Control_Apply.applySecond(dictApplicative.Apply0());
                  return function ($198) {
                      return $197(f($198));
                  };
              })())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var find = function (dictFoldable) {
      return function (p) {
          var go = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Nothing && p(v1)) {
                      return new Data_Maybe.Just(v1);
                  };
                  return v;
              };
          };
          return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
      };
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeDisj)(Data_Newtype.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  var elem = function (dictFoldable) {
      return function (dictEq) {
          var $204 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);
          var $205 = Data_Eq.eq(dictEq);
          return function ($206) {
              return $204($205($206));
          };
      };
  };
  var all = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeConj)(Data_Newtype.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
      };
  };
  var and = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return all(dictFoldable)(dictHeytingAlgebra)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["traverse_"] = traverse_;
  exports["for_"] = for_;
  exports["and"] = and;
  exports["all"] = all;
  exports["elem"] = elem;
  exports["find"] = find;
  exports["foldableArray"] = foldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Array_ST = $PS["Data.Array.ST"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Tuple = $PS["Data.Tuple"];
  var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
  var updateAtIndices = function (dictFoldable) {
      return function (us) {
          return function (xs) {
              return Data_Array_ST.withArray(function (res) {
                  return Data_Foldable.traverse_(Control_Monad_ST_Internal.applicativeST)(dictFoldable)(function (v) {
                      return Data_Array_ST.poke(v.value0)(v.value1)(res);
                  })(us);
              })(xs)();
          };
      };
  };
  var updateAt = $foreign["_updateAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeIndex = function (dictPartial) {
      return $foreign.unsafeIndexImpl;
  };
  var takeEnd = function (n) {
      return function (xs) {
          return $foreign.drop($foreign.length(xs) - n | 0)(xs);
      };
  };
  var tail = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (v) {
      return function (xs) {
          return new Data_Maybe.Just(xs);
      };
  });
  var sortBy = function (comp) {
      return function (xs) {
          var comp$prime = function (x) {
              return function (y) {
                  var v = comp(x)(y);
                  if (v instanceof Data_Ordering.GT) {
                      return 1;
                  };
                  if (v instanceof Data_Ordering.EQ) {
                      return 0;
                  };
                  if (v instanceof Data_Ordering.LT) {
                      return -1 | 0;
                  };
                  throw new Error("Failed pattern match at Data.Array (line 702, column 15 - line 705, column 13): " + [ v.constructor.name ]);
              };
          };
          return $foreign.sortImpl(comp$prime)(xs);
      };
  };
  var sortWith = function (dictOrd) {
      return function (f) {
          return sortBy(Data_Ord.comparing(dictOrd)(f));
      };
  };
  var singleton = function (a) {
      return [ a ];
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  var mapWithIndex = function (f) {
      return function (xs) {
          return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
      };
  };
  var insertAt = $foreign["_insertAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var init = function (xs) {
      if ($$null(xs)) {
          return Data_Maybe.Nothing.value;
      };
      if (Data_Boolean.otherwise) {
          return new Data_Maybe.Just($foreign.slice(0)($foreign.length(xs) - 1 | 0)(xs));
      };
      throw new Error("Failed pattern match at Data.Array (line 323, column 1 - line 323, column 45): " + [ xs.constructor.name ]);
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1 | 0);
  };
  var modifyAt = function (i) {
      return function (f) {
          return function (xs) {
              var go = function (x) {
                  return updateAt(i)(f(x))(xs);
              };
              return Data_Maybe.maybe(Data_Maybe.Nothing.value)(go)(index(xs)(i));
          };
      };
  };
  var head = function (xs) {
      return index(xs)(0);
  };
  var nubBy = function (comp) {
      return function (xs) {
          var indexedAndSorted = sortBy(function (x) {
              return function (y) {
                  return comp(Data_Tuple.snd(x))(Data_Tuple.snd(y));
              };
          })(mapWithIndex(Data_Tuple.Tuple.create)(xs));
          var v = head(indexedAndSorted);
          if (v instanceof Data_Maybe.Nothing) {
              return [  ];
          };
          if (v instanceof Data_Maybe.Just) {
              return Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(sortWith(Data_Ord.ordInt)(Data_Tuple.fst)((function __do() {
                  var v1 = Data_Array_ST.unsafeThaw(singleton(v.value0))();
                  Control_Monad_ST_Internal.foreach(indexedAndSorted)(function (v2) {
                      return function __do() {
                          var v3 = Data_Functor.map(Control_Monad_ST_Internal.functorST)((function () {
                              var $116 = (function (dictPartial) {
                                  var $118 = Data_Maybe.fromJust();
                                  return function ($119) {
                                      return $118(last($119));
                                  };
                              })();
                              return function ($117) {
                                  return Data_Tuple.snd($116($117));
                              };
                          })())(Data_Array_ST.unsafeFreeze(v1))();
                          return Control_Applicative.when(Control_Monad_ST_Internal.applicativeST)(Data_Eq.notEq(Data_Ordering.eqOrdering)(comp(v3)(v2.value1))(Data_Ordering.EQ.value))(Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Data_Array_ST.push(v2)(v1)))();
                      };
                  })();
                  return Data_Array_ST.unsafeFreeze(v1)();
              })()));
          };
          throw new Error("Failed pattern match at Data.Array (line 903, column 17 - line 911, column 29): " + [ v.constructor.name ]);
      };
  };
  var nub = function (dictOrd) {
      return nubBy(Data_Ord.compare(dictOrd));
  };
  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
  var mapMaybe = function (f) {
      return concatMap((function () {
          var $123 = Data_Maybe.maybe([  ])(singleton);
          return function ($124) {
              return $123(f($124));
          };
      })());
  };
  var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
  exports["singleton"] = singleton;
  exports["null"] = $$null;
  exports["head"] = head;
  exports["last"] = last;
  exports["tail"] = tail;
  exports["init"] = init;
  exports["index"] = index;
  exports["insertAt"] = insertAt;
  exports["updateAt"] = updateAt;
  exports["updateAtIndices"] = updateAtIndices;
  exports["modifyAt"] = modifyAt;
  exports["concatMap"] = concatMap;
  exports["mapMaybe"] = mapMaybe;
  exports["catMaybes"] = catMaybes;
  exports["mapWithIndex"] = mapWithIndex;
  exports["sortWith"] = sortWith;
  exports["takeEnd"] = takeEnd;
  exports["nub"] = nub;
  exports["zip"] = zip;
  exports["unsafeIndex"] = unsafeIndex;
  exports["range"] = $foreign.range;
  exports["replicate"] = $foreign.replicate;
  exports["length"] = $foreign.length;
  exports["cons"] = $foreign.cons;
  exports["snoc"] = $foreign.snoc;
  exports["reverse"] = $foreign.reverse;
  exports["concat"] = $foreign.concat;
  exports["filter"] = $foreign.filter;
  exports["take"] = $foreign.take;
  exports["zipWith"] = $foreign.zipWith;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Array.NonEmpty"] = $PS["Data.Array.NonEmpty"] || {};
  var exports = $PS["Data.Array.NonEmpty"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];         
  var unsafeFromArray = Unsafe_Coerce.unsafeCoerce;
  var toArray = Unsafe_Coerce.unsafeCoerce;
  var singleton = function ($49) {
      return unsafeFromArray(Data_Array.singleton($49));
  };
  var fromArray = function (xs) {
      if (Data_Array.length(xs) > 0) {
          return new Data_Maybe.Just(unsafeFromArray(xs));
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Data.Array.NonEmpty (line 134, column 1 - line 134, column 58): " + [ xs.constructor.name ]);
  };
  var adaptMaybe = function (f) {
      var $64 = Data_Maybe.fromJust();
      return function ($65) {
          return $64(f(toArray($65)));
      };
  };
  var head = adaptMaybe(Data_Array.head);
  var init = adaptMaybe(Data_Array.init);
  var last = adaptMaybe(Data_Array.last);
  var tail = adaptMaybe(Data_Array.tail);    
  var adaptAny = function (f) {
      return function ($67) {
          return f(toArray($67));
      };
  };                                     
  var length = adaptAny(Data_Array.length);
  var unsafeAdapt = function (f) {
      var $68 = adaptAny(f);
      return function ($69) {
          return unsafeFromArray($68($69));
      };
  };
  var cons = function (x) {
      return unsafeAdapt(Data_Array.cons(x));
  };
  exports["fromArray"] = fromArray;
  exports["toArray"] = toArray;
  exports["singleton"] = singleton;
  exports["cons"] = cons;
  exports["head"] = head;
  exports["last"] = last;
  exports["tail"] = tail;
  exports["init"] = init;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Array.NonEmpty.Internal"] = $PS["Data.Array.NonEmpty.Internal"] || {};
  var exports = $PS["Data.Array.NonEmpty.Internal"];
  var Data_Foldable = $PS["Data.Foldable"];                                          
  var foldableNonEmptyArray = Data_Foldable.foldableArray;
  exports["foldableNonEmptyArray"] = foldableNonEmptyArray;
})(PS);
(function(exports) {
  "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;

  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Bounded"] = $PS["Data.Bounded"] || {};
  var exports = $PS["Data.Bounded"];
  var $foreign = $PS["Data.Bounded"];
  var Data_Ord = $PS["Data.Ord"];                  
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                            
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var boundedChar = new Bounded(function () {
      return Data_Ord.ordChar;
  }, $foreign.bottomChar, $foreign.topChar);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS);
(function(exports) {
  "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function(exports) {
  "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Semiring"] = $PS["Data.Semiring"] || {};
  var exports = $PS["Data.Semiring"];
  var $foreign = $PS["Data.Semiring"];
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };                                                                            
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var add = function (dict) {
      return dict.add;
  };
  exports["add"] = add;
  exports["semiringInt"] = semiringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Ring"] = $PS["Data.Ring"] || {};
  var exports = $PS["Data.Ring"];
  var $foreign = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Ring = function (Semiring0, sub) {
      this.Semiring0 = Semiring0;
      this.sub = sub;
  };                  
  var ringInt = new Ring(function () {
      return Data_Semiring.semiringInt;
  }, $foreign.intSub);
  exports["ringInt"] = ringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {};
  var exports = $PS["Data.CommutativeRing"];
  var Data_Ring = $PS["Data.Ring"];
  var CommutativeRing = function (Ring0) {
      this.Ring0 = Ring0;
  }; 
  var commutativeRingInt = new CommutativeRing(function () {
      return Data_Ring.ringInt;
  });
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Const"] = $PS["Data.Const"] || {};
  var exports = $PS["Data.Const"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];                                      
  var Const = function (x) {
      return x;
  };
  var newtypeConst = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Const);
  var functorConst = new Data_Functor.Functor(function (f) {
      return function (m) {
          return m;
      };
  });
  var applyConst = function (dictSemigroup) {
      return new Control_Apply.Apply(function () {
          return functorConst;
      }, function (v) {
          return function (v1) {
              return Data_Semigroup.append(dictSemigroup)(v)(v1);
          };
      });
  };
  var applicativeConst = function (dictMonoid) {
      return new Control_Applicative.Applicative(function () {
          return applyConst(dictMonoid.Semigroup0());
      }, function (v) {
          return Data_Monoid.mempty(dictMonoid);
      });
  };
  exports["Const"] = Const;
  exports["newtypeConst"] = newtypeConst;
  exports["applicativeConst"] = applicativeConst;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];          
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof Left) {
              return new Left(m.value0);
          };
          if (m instanceof Right) {
              return new Right(f(m.value0));
          };
          throw new Error("Failed pattern match at Data.Either (line 38, column 1 - line 38, column 52): " + [ m.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
})(PS);
(function(exports) {
  "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Enum"] = $PS["Data.Enum"] || {};
  var exports = $PS["Data.Enum"];
  var $foreign = $PS["Data.Enum"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Enum = function (Ord0, pred, succ) {
      this.Ord0 = Ord0;
      this.pred = pred;
      this.succ = succ;
  };
  var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
      this.Bounded0 = Bounded0;
      this.Enum1 = Enum1;
      this.cardinality = cardinality;
      this.fromEnum = fromEnum;
      this.toEnum = toEnum;
  };
  var toEnum = function (dict) {
      return dict.toEnum;
  };              
  var fromEnum = function (dict) {
      return dict.fromEnum;
  };
  var toEnumWithDefaults = function (dictBoundedEnum) {
      return function (low) {
          return function (high) {
              return function (x) {
                  var v = toEnum(dictBoundedEnum)(x);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                      if ($54) {
                          return low;
                      };
                      return high;
                  };
                  throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var defaultSucc = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) + 1 | 0);
          };
      };
  };
  var defaultPred = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) - 1 | 0);
          };
      };
  };
  var charToEnum = function (v) {
      if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
          return new Data_Maybe.Just($foreign.fromCharCode(v));
      };
      return Data_Maybe.Nothing.value;
  };
  var enumChar = new Enum(function () {
      return Data_Ord.ordChar;
  }, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));
  var boundedEnumChar = new BoundedEnum(function () {
      return Data_Bounded.boundedChar;
  }, function () {
      return enumChar;
  }, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS);
(function(exports) {
  "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {};
  var exports = $PS["Data.EuclideanRing"];
  var $foreign = $PS["Data.EuclideanRing"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];  
  var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
      this.CommutativeRing0 = CommutativeRing0;
      this.degree = degree;
      this.div = div;
      this.mod = mod;
  };
  var mod = function (dict) {
      return dict.mod;
  }; 
  var euclideanRingInt = new EuclideanRing(function () {
      return Data_CommutativeRing.commutativeRingInt;
  }, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
  var div = function (dict) {
      return dict.div;
  };
  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS);
(function(exports) {
  "use strict";

  exports.mapWithIndexArray = function (f) {
    return function (xs) {
      var l = xs.length;
      var result = Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(i)(xs[i]);
      }
      return result;
    };
  };
})(PS["Data.FunctorWithIndex"] = PS["Data.FunctorWithIndex"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.FunctorWithIndex"] = $PS["Data.FunctorWithIndex"] || {};
  var exports = $PS["Data.FunctorWithIndex"];
  var $foreign = $PS["Data.FunctorWithIndex"];
  var Data_Functor = $PS["Data.Functor"];          
  var FunctorWithIndex = function (Functor0, mapWithIndex) {
      this.Functor0 = Functor0;
      this.mapWithIndex = mapWithIndex;
  };
  var mapWithIndex = function (dict) {
      return dict.mapWithIndex;
  }; 
  var functorWithIndexArray = new FunctorWithIndex(function () {
      return Data_Functor.functorArray;
  }, $foreign.mapWithIndexArray);
  exports["mapWithIndex"] = mapWithIndex;
  exports["functorWithIndexArray"] = functorWithIndexArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.FoldableWithIndex"] = $PS["Data.FoldableWithIndex"] || {};
  var exports = $PS["Data.FoldableWithIndex"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FunctorWithIndex = $PS["Data.FunctorWithIndex"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Conj = $PS["Data.Monoid.Conj"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var FoldableWithIndex = function (Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
      this.Foldable0 = Foldable0;
      this.foldMapWithIndex = foldMapWithIndex;
      this.foldlWithIndex = foldlWithIndex;
      this.foldrWithIndex = foldrWithIndex;
  };
  var foldrWithIndex = function (dict) {
      return dict.foldrWithIndex;
  };
  var foldMapWithIndexDefaultR = function (dictFoldableWithIndex) {
      return function (dictMonoid) {
          return function (f) {
              return foldrWithIndex(dictFoldableWithIndex)(function (i) {
                  return function (x) {
                      return function (acc) {
                          return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
                      };
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableWithIndexArray = new FoldableWithIndex(function () {
      return Data_Foldable.foldableArray;
  }, function (dictMonoid) {
      return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
  }, function (f) {
      return function (z) {
          var $49 = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (y) {
              return function (v) {
                  return f(v.value0)(y)(v.value1);
              };
          })(z);
          var $50 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create);
          return function ($51) {
              return $49($50($51));
          };
      };
  }, function (f) {
      return function (z) {
          var $52 = Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
              return function (y) {
                  return f(v.value0)(v.value1)(y);
              };
          })(z);
          var $53 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Tuple.create);
          return function ($54) {
              return $52($53($54));
          };
      };
  });
  var foldMapWithIndex = function (dict) {
      return dict.foldMapWithIndex;
  };
  var allWithIndex = function (dictFoldableWithIndex) {
      return function (dictHeytingAlgebra) {
          return function (t) {
              var $64 = Data_Newtype.unwrap(Data_Newtype.newtypeConj);
              var $65 = foldMapWithIndex(dictFoldableWithIndex)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra))(function (i) {
                  var $67 = t(i);
                  return function ($68) {
                      return Data_Monoid_Conj.Conj($67($68));
                  };
              });
              return function ($66) {
                  return $64($65($66));
              };
          };
      };
  };
  exports["allWithIndex"] = allWithIndex;
  exports["foldableWithIndexArray"] = foldableWithIndexArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];      
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS);
(function(exports) {
  "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Partial"] = $PS["Partial"] || {};
  var exports = $PS["Partial"];
  var $foreign = $PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Partial.Unsafe"] = $PS["Partial.Unsafe"] || {};
  var exports = $PS["Partial.Unsafe"];
  var $foreign = $PS["Partial.Unsafe"];
  var Partial = $PS["Partial"];
  var unsafeCrashWith = function (msg) {
      return $foreign.unsafePartial(function (dictPartial) {
          return Partial.crashWith()(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeHas = function (label) {
    return function (rec) {
      return {}.hasOwnProperty.call(rec, label);
    };
  };

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeHas"] = $foreign.unsafeHas;
  exports["unsafeGet"] = $foreign.unsafeGet;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Functor.Variant"] = $PS["Data.Functor.Variant"] || {};
  var exports = $PS["Data.Functor.Variant"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var onMatch = function (dictRowToList) {
      return function (dictVariantFMatchCases) {
          return function (dictUnion) {
              return function (r) {
                  return function (k) {
                      return function (v) {
                          if (Record_Unsafe.unsafeHas(v.type)(r)) {
                              return Record_Unsafe.unsafeGet(v.type)(r)(v.value);
                          };
                          return k(v);
                      };
                  };
              };
          };
      };
  };
  var inj = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictFunctor) {
              return function (p) {
                  return function (value) {
                      return {
                          type: Data_Symbol.reflectSymbol(dictIsSymbol)(p),
                          value: value,
                          map: Data_Functor.map(dictFunctor)
                      };
                  };
              };
          };
      };
  };
  var functorVariantF = new Data_Functor.Functor(function (f) {
      return function (a) {
          return {
              type: a.type,
              value: a.map(f)(a.value),
              map: a.map
          };
      };
  });
  var case_ = function (r) {
      return Partial_Unsafe.unsafeCrashWith("Data.Functor.Variant: pattern match failure [" + (r.type + "]"));
  }; 
  var match = function (dictRowToList) {
      return function (dictVariantFMatchCases) {
          return function (dictUnion) {
              return function (r) {
                  return onMatch()()()(r)(case_);
              };
          };
      };
  };
  exports["inj"] = inj;
  exports["onMatch"] = onMatch;
  exports["match"] = match;
  exports["functorVariantF"] = functorVariantF;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (m) {
          return f(m);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
})(PS);
(function(exports) {
  "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* globals exports */
  "use strict";         

  exports.infinity = Infinity;
})(PS["Global"] = PS["Global"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Global"] = $PS["Global"] || {};
  var exports = $PS["Global"];
  var $foreign = $PS["Global"];
  exports["infinity"] = $foreign.infinity;
})(PS);
(function(exports) {
  "use strict";

  // module Math

  exports.abs = Math.abs;  

  exports.cos = Math.cos;

  exports.floor = Math.floor;

  exports.sin = Math.sin;

  exports.sqrt = Math.sqrt;    

  exports.pi = Math.PI;
})(PS["Math"] = PS["Math"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Math"] = $PS["Math"] || {};
  var exports = $PS["Math"];
  var $foreign = $PS["Math"];
  exports["abs"] = $foreign.abs;
  exports["cos"] = $foreign.cos;
  exports["floor"] = $foreign.floor;
  exports["sin"] = $foreign.sin;
  exports["sqrt"] = $foreign.sqrt;
  exports["pi"] = $foreign.pi;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Global = $PS["Global"];
  var $$Math = $PS["Math"];         
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x === Global.infinity) {
          return 0;
      };
      if (x === -Global.infinity) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [ x.constructor.name ]);
  };
  var floor = function ($24) {
      return unsafeClamp($$Math.floor($24));
  };
  var even = function (x) {
      return (x & 1) === 0;
  };
  exports["floor"] = floor;
  exports["even"] = even;
  exports["toNumber"] = $foreign.toNumber;
})(PS);
(function(exports) {
  "use strict";

  exports.xor = function (n1) {
    return function (n2) {
      /* jshint bitwise: false */
      return n1 ^ n2;
    };
  };
})(PS["Data.Int.Bits"] = PS["Data.Int.Bits"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Int.Bits"] = $PS["Data.Int.Bits"] || {};
  var exports = $PS["Data.Int.Bits"];
  var $foreign = $PS["Data.Int.Bits"];
  exports["xor"] = $foreign.xor;
})(PS);
(function(exports) {
  "use strict";

  exports.defer = function (thunk) {
    var v = null;
    return function() {
      if (thunk === undefined) return v;

      v = thunk();
      thunk = undefined; // eslint-disable-line no-param-reassign
      return v;
    };
  };

  exports.force = function (l) {
    return l();
  };
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Lazy"] = $PS["Data.Lazy"] || {};
  var exports = $PS["Data.Lazy"];
  var $foreign = $PS["Data.Lazy"];
  exports["defer"] = $foreign.defer;
  exports["force"] = $foreign.force;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Profunctor"] = $PS["Data.Profunctor"] || {};
  var exports = $PS["Data.Profunctor"];                  
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  };
  var profunctorFn = new Profunctor(function (a2b) {
      return function (c2d) {
          return function (b2c) {
              return function ($9) {
                  return c2d(b2c(a2b($9)));
              };
          };
      };
  });
  var dimap = function (dict) {
      return dict.dimap;
  };
  exports["dimap"] = dimap;
  exports["Profunctor"] = Profunctor;
  exports["profunctorFn"] = profunctorFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Profunctor.Choice"] = $PS["Data.Profunctor.Choice"] || {};
  var exports = $PS["Data.Profunctor.Choice"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Profunctor = $PS["Data.Profunctor"];                
  var Choice = function (Profunctor0, left, right) {
      this.Profunctor0 = Profunctor0;
      this.left = left;
      this.right = right;
  };
  var choiceFn = new Choice(function () {
      return Data_Profunctor.profunctorFn;
  }, function (v) {
      return function (v1) {
          if (v1 instanceof Data_Either.Left) {
              return Data_Either.Left.create(v(v1.value0));
          };
          if (v1 instanceof Data_Either.Right) {
              return new Data_Either.Right(v1.value0);
          };
          throw new Error("Failed pattern match at Data.Profunctor.Choice (line 32, column 1 - line 35, column 16): " + [ v.constructor.name, v1.constructor.name ]);
      };
  }, Data_Functor.map(Data_Either.functorEither));
  exports["Choice"] = Choice;
  exports["choiceFn"] = choiceFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Profunctor.Strong"] = $PS["Data.Profunctor.Strong"] || {};
  var exports = $PS["Data.Profunctor.Strong"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Strong = function (Profunctor0, first, second) {
      this.Profunctor0 = Profunctor0;
      this.first = first;
      this.second = second;
  };
  var strongFn = new Strong(function () {
      return Data_Profunctor.profunctorFn;
  }, function (a2b) {
      return function (v) {
          return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
      };
  }, Data_Functor.map(Data_Tuple.functorTuple));
  var first = function (dict) {
      return dict.first;
  };
  exports["first"] = first;
  exports["Strong"] = Strong;
  exports["strongFn"] = strongFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Lens.Internal.Wander"] = $PS["Data.Lens.Internal.Wander"] || {};
  var exports = $PS["Data.Lens.Internal.Wander"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Profunctor_Choice = $PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];                
  var Wander = function (Choice1, Strong0, wander) {
      this.Choice1 = Choice1;
      this.Strong0 = Strong0;
      this.wander = wander;
  };
  var wanderFunction = new Wander(function () {
      return Data_Profunctor_Choice.choiceFn;
  }, function () {
      return Data_Profunctor_Strong.strongFn;
  }, function (t) {
      return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Identity.newtypeIdentity)(Data_Identity.newtypeIdentity)(Data_Identity.Identity)(t(Data_Identity.applicativeIdentity));
  });
  var wander = function (dict) {
      return dict.wander;
  };
  exports["wander"] = wander;
  exports["Wander"] = Wander;
  exports["wanderFunction"] = wanderFunction;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Map.Internal"] = $PS["Data.Map.Internal"] || {};
  var exports = $PS["Data.Map.Internal"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Tuple = $PS["Data.Tuple"];                          
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var lookup = function (dictOrd) {
      return function (k) {
          var comp = Data_Ord.compare(dictOrd);
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Leaf) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Two) {
                      var v2 = comp(k)(v.value1);
                      if (v2 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      if (v2 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  if (v instanceof Three) {
                      var v3 = comp(k)(v.value1);
                      if (v3 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      var v4 = comp(k)(v.value4);
                      if (v4 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value5);
                      };
                      if (v3 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      if (v4 instanceof Data_Ordering.GT) {
                          $copy_v = v.value6;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 200, column 5 - line 200, column 22): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return go;
      };
  }; 
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 418, column 3 - line 423, column 88): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 415, column 1 - line 415, column 80): " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map.Internal (line 454, column 5 - line 459, column 108): " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 451, column 3 - line 451, column 56): " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 434, column 3 - line 434, column 55): " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var pop = function (dictOrd) {
      return function (k) {
          var up = function ($copy_ctxs) {
              return function ($copy_tree) {
                  var $tco_var_ctxs = $copy_ctxs;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctxs, tree) {
                      if (ctxs instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return tree;
                      };
                      if (ctxs instanceof Data_List_Types.Cons) {
                          if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 511, column 9 - line 528, column 136): " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 508, column 5 - line 528, column 136): " + [ ctxs.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
                  };
                  return $tco_result;
              };
          };
          var removeMaxNode = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                          $tco_done = true;
                          return up(ctx)(Leaf.value);
                      };
                      if (m instanceof Two) {
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                          $tco_done = true;
                          return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                      };
                      if (m instanceof Three) {
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 540, column 5 - line 544, column 107): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          var maxNode = function ($copy_m) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(m) {
                  if (m instanceof Two && m.value3 instanceof Leaf) {
                      $tco_done = true;
                      return {
                          key: m.value1,
                          value: m.value2
                      };
                  };
                  if (m instanceof Two) {
                      $copy_m = m.value3;
                      return;
                  };
                  if (m instanceof Three && m.value6 instanceof Leaf) {
                      $tco_done = true;
                      return {
                          key: m.value4,
                          value: m.value5
                      };
                  };
                  if (m instanceof Three) {
                      $copy_m = m.value6;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 531, column 33 - line 535, column 45): " + [ m.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_m);
              };
              return $tco_result;
          };
          var comp = Data_Ord.compare(dictOrd);
          var down = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Nothing.value;
                      };
                      if (m instanceof Two) {
                          var v = comp(k)(m.value1);
                          if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three) {
                          var leaves = (function () {
                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                  return true;
                              };
                              return false;
                          })();
                          var v = comp(k)(m.value4);
                          var v3 = comp(k)(m.value1);
                          if (leaves && v3 instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                          };
                          if (leaves && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                          };
                          if (v3 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value3);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                          };
                          if (v3 instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value3;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 481, column 34 - line 504, column 80): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          return down(Data_List_Types.Nil.value);
      };
  };
  var empty = Leaf.value;
  var fromFoldable = function (dictOrd) {
      return function (dictFoldable) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (v) {
                  return insert(dictOrd)(v.value0)(v.value1)(m);
              };
          })(empty);
      };
  };
  var $$delete = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
          };
      };
  };
  exports["empty"] = empty;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["fromFoldable"] = fromFoldable;
  exports["delete"] = $$delete;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Lens.Index"] = $PS["Data.Lens.Index"] || {};
  var exports = $PS["Data.Lens.Index"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Array = $PS["Data.Array"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Internal_Wander = $PS["Data.Lens.Internal.Wander"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];                        
  var Index = function (ix) {
      this.ix = ix;
  };
  var ix = function (dict) {
      return dict.ix;
  }; 
  var indexMap = function (dictOrd) {
      return new Index(function (k) {
          return function (dictWander) {
              return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
                  return function (coalg) {
                      return function (m) {
                          return Data_Maybe.maybe(Control_Applicative.pure(dictApplicative)(m))((function () {
                              var $27 = Data_Functor.map((dictApplicative.Apply0()).Functor0())(function (v) {
                                  return Data_Map_Internal.insert(dictOrd)(k)(v)(m);
                              });
                              return function ($28) {
                                  return $27(coalg($28));
                              };
                          })())(Data_Map_Internal.lookup(dictOrd)(k)(m));
                      };
                  };
              });
          };
      });
  }; 
  var indexArray = new Index(function (n) {
      return function (dictWander) {
          return Data_Lens_Internal_Wander.wander(dictWander)(function (dictApplicative) {
              return function (coalg) {
                  return function (xs) {
                      return Data_Maybe.maybe(Control_Applicative.pure(dictApplicative)(xs))((function () {
                          var $31 = Data_Functor.map((dictApplicative.Apply0()).Functor0())(function (x) {
                              return Data_Maybe.fromMaybe(xs)(Data_Array.updateAt(n)(x)(xs));
                          });
                          return function ($32) {
                              return $31(coalg($32));
                          };
                      })())(Data_Array.index(xs)(n));
                  };
              };
          });
      };
  });
  exports["ix"] = ix;
  exports["indexArray"] = indexArray;
  exports["indexMap"] = indexMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Lens.Lens"] = $PS["Data.Lens.Lens"] || {};
  var exports = $PS["Data.Lens.Lens"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];
  var lens$prime = function (to) {
      return function (dictStrong) {
          return function (pab) {
              return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (v) {
                  return v.value1(v.value0);
              })(Data_Profunctor_Strong.first(dictStrong)(pab));
          };
      };
  };
  var lens = function (get) {
      return function (set) {
          return function (dictStrong) {
              return lens$prime(function (s) {
                  return new Data_Tuple.Tuple(get(s), function (b) {
                      return set(s)(b);
                  });
              })(dictStrong);
          };
      };
  };
  exports["lens"] = lens;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Lens.At"] = $PS["Data.Lens.At"] || {};
  var exports = $PS["Data.Lens.At"];
  var Data_Lens_Index = $PS["Data.Lens.Index"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];                        
  var At = function (Index0, at) {
      this.Index0 = Index0;
      this.at = at;
  }; 
  var atMap = function (dictOrd) {
      return new At(function () {
          return Data_Lens_Index.indexMap(dictOrd);
      }, function (k) {
          return function (dictStrong) {
              return Data_Lens_Lens.lens(Data_Map_Internal.lookup(dictOrd)(k))(function (m) {
                  return Data_Maybe.maybe(Data_Map_Internal["delete"](dictOrd)(k)(m))(function (v) {
                      return Data_Map_Internal.insert(dictOrd)(k)(v)(m);
                  });
              })(dictStrong);
          };
      });
  }; 
  var at = function (dict) {
      return dict.at;
  };
  exports["at"] = at;
  exports["atMap"] = atMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Lens.Internal.Forget"] = $PS["Data.Lens.Internal.Forget"] || {};
  var exports = $PS["Data.Lens.Internal.Forget"];
  var Data_Const = $PS["Data.Const"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Internal_Wander = $PS["Data.Lens.Internal.Wander"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Choice = $PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Forget = function (x) {
      return x;
  };
  var profunctorForget = new Data_Profunctor.Profunctor(function (f) {
      return function (v) {
          return function (v1) {
              return function ($27) {
                  return v1(f($27));
              };
          };
      };
  });
  var strongForget = new Data_Profunctor_Strong.Strong(function () {
      return profunctorForget;
  }, function (v) {
      return function ($28) {
          return v(Data_Tuple.fst($28));
      };
  }, function (v) {
      return function ($29) {
          return v(Data_Tuple.snd($29));
      };
  });
  var newtypeForget = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Forget);
  var choiceForget = function (dictMonoid) {
      return new Data_Profunctor_Choice.Choice(function () {
          return profunctorForget;
      }, function (v) {
          return Data_Either.either(v)(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)));
      }, function (v) {
          return Data_Either.either(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)))(v);
      });
  };
  var wanderForget = function (dictMonoid) {
      return new Data_Lens_Internal_Wander.Wander(function () {
          return choiceForget(dictMonoid);
      }, function () {
          return strongForget;
      }, function (f) {
          return function (v) {
              return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Const.newtypeConst)(Data_Const.newtypeConst)(Data_Const.Const)(f(Data_Const.applicativeConst(dictMonoid)))(v);
          };
      });
  };
  exports["newtypeForget"] = newtypeForget;
  exports["profunctorForget"] = profunctorForget;
  exports["strongForget"] = strongForget;
  exports["wanderForget"] = wanderForget;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Lens.Getter"] = $PS["Data.Lens.Getter"] || {};
  var exports = $PS["Data.Lens.Getter"];
  var Control_Category = $PS["Control.Category"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Newtype = $PS["Data.Newtype"];                                    
  var view = function (l) {
      return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(l(Control_Category.identity(Control_Category.categoryFn)));
  };
  var viewOn = function (s) {
      return function (l) {
          return view(l)(s);
      };
  };
  exports["viewOn"] = viewOn;
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Lens.Iso"] = $PS["Data.Lens.Iso"] || {};
  var exports = $PS["Data.Lens.Iso"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var iso = function (f) {
      return function (g) {
          return function (dictProfunctor) {
              return function (pab) {
                  return Data_Profunctor.dimap(dictProfunctor)(f)(g)(pab);
              };
          };
      };
  };
  exports["iso"] = iso;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Lens.Setter"] = $PS["Data.Lens.Setter"] || {};
  var exports = $PS["Data.Lens.Setter"];
  var Data_Function = $PS["Data.Function"];
  var Data_Semiring = $PS["Data.Semiring"];          
  var over = function (l) {
      return l;
  };
  var set = function (l) {
      return function (b) {
          return over(l)(Data_Function["const"](b));
      };
  };
  var addOver = function (dictSemiring) {
      return function (p) {
          var $64 = over(p);
          var $65 = Data_Semiring.add(dictSemiring);
          return function ($66) {
              return $64($65($66));
          };
      };
  };
  exports["over"] = over;
  exports["set"] = set;
  exports["addOver"] = addOver;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var Show = function (show) {
      this.show = show;
  };
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
})(PS);
(function(exports) {
  "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator =
    typeof Symbol !== "undefined" &&
    Symbol != null &&
    typeof Symbol.iterator !== "undefined" &&
    typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt
      ? function (str) { return str.codePointAt(0); }
      : fallback;
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }
      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
  "use strict";

  exports.singleton = function (c) {
    return c;
  };

  exports.length = function (s) {
    return s.length;
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {};
  var exports = $PS["Data.String.CodeUnits"];
  var $foreign = $PS["Data.String.CodeUnits"];
  var Data_Maybe = $PS["Data.Maybe"];                                                         
  var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["indexOf"] = indexOf;
  exports["singleton"] = $foreign.singleton;
  exports["length"] = $foreign.length;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
})(PS);
(function(exports) {
  "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.String.Unsafe"] = $PS["Data.String.Unsafe"] || {};
  var exports = $PS["Data.String.Unsafe"];
  var $foreign = $PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS);
(function(exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Unfoldable1 = function (unfoldr1) {
      this.unfoldr1 = unfoldr1;
  };
  var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];  
  var Unfoldable = function (Unfoldable10, unfoldr) {
      this.Unfoldable10 = Unfoldable10;
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable(function () {
      return Data_Unfoldable1.unfoldable1Array;
  }, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.String.CodePoints"] = $PS["Data.String.CodePoints"] || {};
  var exports = $PS["Data.String.CodePoints"];
  var $foreign = $PS["Data.String.CodePoints"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var unsurrogate = function (lead) {
      return function (trail) {
          return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
  }; 
  var isTrail = function (cu) {
      return 56320 <= cu && cu <= 57343;
  };
  var isLead = function (cu) {
      return 55296 <= cu && cu <= 56319;
  };
  var uncons = function (s) {
      var v = Data_String_CodeUnits.length(s);
      if (v === 0) {
          return Data_Maybe.Nothing.value;
      };
      if (v === 1) {
          return new Data_Maybe.Just({
              head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
              tail: ""
          });
      };
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
          return new Data_Maybe.Just({
              head: unsurrogate(cu0)(cu1),
              tail: Data_String_CodeUnits.drop(2)(s)
          });
      };
      return new Data_Maybe.Just({
          head: cu0,
          tail: Data_String_CodeUnits.drop(1)(s)
      });
  };
  var unconsButWithTuple = function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return new Data_Tuple.Tuple(v.head, v.tail);
      })(uncons(s));
  };
  var toCodePointArrayFallback = function (s) {
      return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function (s) {
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;
      if ($25) {
          var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
          var $26 = isTrail(cu1);
          if ($26) {
              return unsurrogate(cu0)(cu1);
          };
          return cu0;
      };
      return cu0;
  };
  var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);
  var length = function ($52) {
      return Data_Array.length(toCodePointArray($52));
  };
  var indexOf = function (p) {
      return function (s) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
              return length(Data_String_CodeUnits.take(i)(s));
          })(Data_String_CodeUnits.indexOf(p)(s));
      };
  };
  var fromCharCode = (function () {
      var $53 = Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar));
      return function ($54) {
          return Data_String_CodeUnits.singleton($53($54));
      };
  })();
  var singletonFallback = function (v) {
      if (v <= 65535) {
          return fromCharCode(v);
      };
      var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode(lead) + fromCharCode(trail);
  };                                                                          
  var singleton = $foreign["_singleton"](singletonFallback);
  var takeFallback = function (n) {
      return function (v) {
          if (n < 1) {
              return "";
          };
          var v1 = uncons(v);
          if (v1 instanceof Data_Maybe.Just) {
              return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
          };
          return v;
      };
  };
  var take = $foreign["_take"](takeFallback);
  var drop = function (n) {
      return function (s) {
          return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
      };
  };
  exports["indexOf"] = indexOf;
  exports["drop"] = drop;
})(PS);
(function(exports) {
  "use strict";

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];
  var $foreign = $PS["Data.String.Common"];
  exports["joinWith"] = $foreign.joinWith;
})(PS);
(function(exports) {
  "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                case 0: return pure([]);
                case 1: return map(array1)(f(array[bot]));
                case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }
              return go(0, array.length);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var $foreign = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];                                                      
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["sequence"] = sequence;
  exports["traversableArray"] = traversableArray;
})(PS);
(function(exports) {
  "use strict";

  // Alias require to prevent webpack or browserify from actually requiring.
  var req = typeof module === "undefined" ? undefined : module.require;
  var util = req === undefined ? undefined : req("util");

  exports.trace = function () {
    return function (x) {
      return function (k) {
        // node only recurses two levels into an object before printing
        // "[object]" for further objects when using console.log()
        if (util !== undefined) {
          console.log(util.inspect(x, { depth: null, colors: true }));
        } else {
          console.log(x);
        }
        return k({});
      };
    };
  };
})(PS["Debug.Trace"] = PS["Debug.Trace"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Debug.Trace"] = $PS["Debug.Trace"] || {};
  var exports = $PS["Debug.Trace"];
  var $foreign = $PS["Debug.Trace"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Unit = $PS["Data.Unit"];
  var traceM = function (dictDebugWarning) {
      return function (dictMonad) {
          return function (s) {
              return Control_Bind.discard(Control_Bind.discardUnit)(dictMonad.Bind1())(Control_Applicative.pure(dictMonad.Applicative0())(Data_Unit.unit))(function () {
                  return $foreign.trace()(s)(function (v) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(Data_Unit.unit);
                  });
              });
          };
      };
  };
  exports["traceM"] = traceM;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];                    
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game"] = $PS["Game"] || {};
  var exports = $PS["Game"];
  var CGame = function (init, onKeyDown, view) {
      this.init = init;
      this.onKeyDown = onKeyDown;
      this.view = view;
  };
  var view = function (dict) {
      return dict.view;
  };
  var onKeyDown = function (dict) {
      return dict.onKeyDown;
  };
  var init = function (dict) {
      return dict.init;
  };
  exports["init"] = init;
  exports["onKeyDown"] = onKeyDown;
  exports["view"] = view;
  exports["CGame"] = CGame;
})(PS);
(function(exports) {
  exports.genSeed = Math.random;
})(PS["Lib.Random"] = PS["Lib.Random"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Lib.Random"] = $PS["Lib.Random"] || {};
  var exports = $PS["Lib.Random"];
  var $foreign = $PS["Lib.Random"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Debug_Trace = $PS["Debug.Trace"];
  var $$Math = $PS["Math"];                
  var Seed = function (x) {
      return x;
  };
  var Random = function (x) {
      return x;
  };
  var runRnd = function (seed) {
      return function (v) {
          return Data_Tuple.fst(v(seed));
      };
  };
  var nextSeed = function (v) {
      return Seed(($$Math.sin(v * 2819921.0) + 1.0) / 2.0);
  };
  var intFromSeed = function (v) {
      return function (max) {
          return Data_Int.floor(v * Data_Int.toNumber(max));
      };
  };
  var randomInt = function (n) {
      return function (seed) {
          return new Data_Tuple.Tuple(intFromSeed(seed)(n), nextSeed(seed));
      };
  };
  var functorRandom = new Data_Functor.Functor(function (f) {
      return function (v) {
          return function (seed) {
              var v1 = v(seed);
              return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
          };
      };
  });
  var randomBool = Data_Functor.mapFlipped(functorRandom)(randomInt(2))(Data_Eq.eq(Data_Eq.eqInt)(0));
  var randomPick = function (v) {
      if (v.length === 0) {
          return Data_Maybe.Nothing.value;
      };
      return Data_Maybe.Just.create(Data_Functor.map(functorRandom)(Data_Array.unsafeIndex()(v))(randomInt(Data_Array.length(v))));
  };
  var monadRandom = new Control_Monad.Monad(function () {
      return applicativeRandom;
  }, function () {
      return bindRandom;
  });
  var bindRandom = new Control_Bind.Bind(function () {
      return applyRandom;
  }, function (v) {
      return function (f) {
          return function (seed) {
              var v1 = v(seed);
              var v2 = f(v1.value0);
              return v2(v1.value1);
          };
      };
  });
  var applyRandom = new Control_Apply.Apply(function () {
      return functorRandom;
  }, Control_Monad.ap(monadRandom));
  var applicativeRandom = new Control_Applicative.Applicative(function () {
      return applyRandom;
  }, function (x) {
      return Random(Data_Tuple.Tuple.create(x));
  });
  var shuffle = function (array) {
      return Control_Bind.bind(bindRandom)(Data_Traversable.sequence(Data_Traversable.traversableArray)(applicativeRandom)(Data_Array.mapWithIndex(function (i) {
          return function (x) {
              return Data_Functor.map(functorRandom)(Data_Tuple.Tuple.create(x))(randomInt(i + 1 | 0));
          };
      })(array)))(function (v) {
          return Control_Bind.discard(Control_Bind.discardUnit)(bindRandom)(Debug_Trace.traceM()(monadRandom)(v))(function () {
              return Control_Applicative.pure(applicativeRandom)(Data_Foldable.foldl(Data_Foldable.foldableArray)(function (t) {
                  return function (v1) {
                      return Data_Maybe.fromMaybe([  ])(Data_Array.insertAt(v1.value1)(v1.value0)(t));
                  };
              })([  ])(v));
          });
      });
  };
  exports["randomInt"] = randomInt;
  exports["randomBool"] = randomBool;
  exports["shuffle"] = shuffle;
  exports["randomPick"] = randomPick;
  exports["runRnd"] = runRnd;
  exports["functorRandom"] = functorRandom;
  exports["applicativeRandom"] = applicativeRandom;
  exports["bindRandom"] = bindRandom;
  exports["genSeed"] = $foreign.genSeed;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Run"] = $PS["Run"] || {};
  var exports = $PS["Run"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Functor_Variant = $PS["Data.Functor.Variant"];
  var Data_Newtype = $PS["Data.Newtype"];                  
  var Run = function (x) {
      return x;
  };
  var newtypeRun = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Run);
  var resume = function (k1) {
      return function (k2) {
          var $45 = Control_Monad_Free["resume'"](function (x) {
              return function (f) {
                  return k1(Data_Functor.map(Data_Functor_Variant.functorVariantF)(function ($48) {
                      return Run(f($48));
                  })(x));
              };
          })(k2);
          var $46 = Data_Newtype.unwrap(newtypeRun);
          return function ($47) {
              return $45($46($47));
          };
      };
  };
  var runCont = function (k1) {
      return function (k2) {
          var loop = resume(function (b) {
              return k1(Data_Functor.map(Data_Functor_Variant.functorVariantF)(loop)(b));
          })(k2);
          return loop;
      };
  };  
  var monadRun = Control_Monad_Free.freeMonad;
  var lift = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictFunctor) {
              return function (p) {
                  var $54 = Data_Functor_Variant.inj()(dictIsSymbol)(dictFunctor)(p);
                  return function ($55) {
                      return Run(Control_Monad_Free.liftF($54($55)));
                  };
              };
          };
      };
  };
  var functorRun = Control_Monad_Free.freeFunctor;
  var bindRun = Control_Monad_Free.freeBind;
  var applyRun = Control_Monad_Free.freeApply;
  var applicativeRun = Control_Monad_Free.freeApplicative;
  var monadRecRun = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadRun;
  }, function (f) {
      var loop = function (a) {
          return Control_Bind.bind(bindRun)(f(a))(function (v) {
              if (v instanceof Control_Monad_Rec_Class.Done) {
                  return Control_Applicative.pure(applicativeRun)(v.value0);
              };
              if (v instanceof Control_Monad_Rec_Class.Loop) {
                  return loop(v.value0);
              };
              throw new Error("Failed pattern match at Run (line 108, column 7 - line 110, column 24): " + [ v.constructor.name ]);
          });
      };
      return loop;
  });
  exports["Run"] = Run;
  exports["lift"] = lift;
  exports["runCont"] = runCont;
  exports["functorRun"] = functorRun;
  exports["applyRun"] = applyRun;
  exports["applicativeRun"] = applicativeRun;
  exports["bindRun"] = bindRun;
  exports["monadRun"] = monadRun;
  exports["monadRecRun"] = monadRecRun;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Pha.Action"] = $PS["Pha.Action"] || {};
  var exports = $PS["Pha.Action"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Lib_Random = $PS["Lib.Random"];
  var Run = $PS["Run"];                
  var SetState = (function () {
      function SetState(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetState.create = function (value0) {
          return function (value1) {
              return new SetState(value0, value1);
          };
      };
      return SetState;
  })();
  var Rng = (function () {
      function Rng(value0) {
          this.value0 = value0;
      };
      Rng.create = function (value0) {
          return new Rng(value0);
      };
      return Rng;
  })();
  var GetState = (function () {
      function GetState(value0) {
          this.value0 = value0;
      };
      GetState.create = function (value0) {
          return new GetState(value0);
      };
      return GetState;
  })();
  var GetEvent = (function () {
      function GetEvent(value0) {
          this.value0 = value0;
      };
      GetEvent.create = function (value0) {
          return new GetEvent(value0);
      };
      return GetEvent;
  })();
  var Delay = (function () {
      function Delay(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Delay.create = function (value0) {
          return function (value1) {
              return new Delay(value0, value1);
          };
      };
      return Delay;
  })();
  var functorSetState = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new SetState(m.value0, f(m.value1));
      };
  });
  var setState = function (fn) {
      return Run.lift()(new Data_Symbol.IsSymbol(function () {
          return "setState";
      }))(functorSetState)(Data_Symbol.SProxy.value)(new SetState(fn, Data_Unit.unit));
  };
  var functorRng = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new Rng(Data_Functor.map(Data_Functor.functorFn)(f)(m.value0));
      };
  });
  var rng = Run.lift()(new Data_Symbol.IsSymbol(function () {
      return "rng";
  }))(functorRng)(Data_Symbol.SProxy.value)(new Rng(Control_Category.identity(Control_Category.categoryFn)));
  var runRng = function (a) {
      return Data_Functor.mapFlipped(Run.functorRun)(rng)(function (x) {
          return Lib_Random.runRnd(x)(a);
      });
  };
  var functorGetState = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new GetState(Data_Functor.map(Data_Functor.functorFn)(f)(m.value0));
      };
  });
  var getState = Run.lift()(new Data_Symbol.IsSymbol(function () {
      return "getState";
  }))(functorGetState)(Data_Symbol.SProxy.value)(new GetState(Control_Category.identity(Control_Category.categoryFn)));
  var randomAction = function (fn) {
      return Control_Bind.bind(Run.bindRun)(getState)(function (v) {
          return Control_Bind.bind(Run.bindRun)(runRng(fn(v)))(function (v1) {
              return setState(function (v2) {
                  return v1;
              });
          });
      });
  };
  var functorEvF = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new GetEvent(Data_Functor.map(Data_Functor.functorFn)(f)(m.value0));
      };
  });
  var getEvent = Run.lift()(new Data_Symbol.IsSymbol(function () {
      return "event";
  }))(functorEvF)(Data_Symbol.SProxy.value)(new GetEvent(Control_Category.identity(Control_Category.categoryFn)));
  var functorDelay = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new Delay(m.value0, f(m.value1));
      };
  });
  var delay = function (ms) {
      return Run.lift()(new Data_Symbol.IsSymbol(function () {
          return "delay";
      }))(functorDelay)(Data_Symbol.SProxy.value)(new Delay(ms, Data_Unit.unit));
  };
  exports["GetState"] = GetState;
  exports["getState"] = getState;
  exports["SetState"] = SetState;
  exports["setState"] = setState;
  exports["getEvent"] = getEvent;
  exports["delay"] = delay;
  exports["runRng"] = runRng;
  exports["randomAction"] = randomAction;
  exports["functorGetState"] = functorGetState;
  exports["functorSetState"] = functorSetState;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Core"] = $PS["Game.Core"] || {};
  var exports = $PS["Game.Core"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Lens_At = $PS["Data.Lens.At"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Lib_Random = $PS["Lib.Random"];
  var Pha_Action = $PS["Pha.Action"];
  var Run = $PS["Run"];                
  var Turn1 = (function () {
      function Turn1() {

      };
      Turn1.value = new Turn1();
      return Turn1;
  })();
  var Turn2 = (function () {
      function Turn2() {

      };
      Turn2.value = new Turn2();
      return Turn2;
  })();
  var SizeLimit = (function () {
      function SizeLimit(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      SizeLimit.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new SizeLimit(value0, value1, value2, value3);
                  };
              };
          };
      };
      return SizeLimit;
  })();
  var AlwaysShowWin = (function () {
      function AlwaysShowWin() {

      };
      AlwaysShowWin.value = new AlwaysShowWin();
      return AlwaysShowWin;
  })();
  var NeverShowWin = (function () {
      function NeverShowWin() {

      };
      NeverShowWin.value = new NeverShowWin();
      return NeverShowWin;
  })();
  var ShowWinOnNewRecord = (function () {
      function ShowWinOnNewRecord() {

      };
      ShowWinOnNewRecord.value = new ShowWinOnNewRecord();
      return ShowWinOnNewRecord;
  })();
  var Minimize = (function () {
      function Minimize() {

      };
      Minimize.value = new Minimize();
      return Minimize;
  })();
  var Maximize = (function () {
      function Maximize() {

      };
      Maximize.value = new Maximize();
      return Maximize;
  })();
  var SoloMode = (function () {
      function SoloMode() {

      };
      SoloMode.value = new SoloMode();
      return SoloMode;
  })();
  var RandomMode = (function () {
      function RandomMode() {

      };
      RandomMode.value = new RandomMode();
      return RandomMode;
  })();
  var ExpertMode = (function () {
      function ExpertMode() {

      };
      ExpertMode.value = new ExpertMode();
      return ExpertMode;
  })();
  var DuelMode = (function () {
      function DuelMode() {

      };
      DuelMode.value = new DuelMode();
      return DuelMode;
  })();
  var Rules = (function () {
      function Rules() {

      };
      Rules.value = new Rules();
      return Rules;
  })();
  var NoDialog = (function () {
      function NoDialog() {

      };
      NoDialog.value = new NoDialog();
      return NoDialog;
  })();
  var ConfirmNewGame = (function () {
      function ConfirmNewGame(value0) {
          this.value0 = value0;
      };
      ConfirmNewGame.create = function (value0) {
          return new ConfirmNewGame(value0);
      };
      return ConfirmNewGame;
  })();
  var ScoreDialog = (function () {
      function ScoreDialog() {

      };
      ScoreDialog.value = new ScoreDialog();
      return ScoreDialog;
  })();
  var CustomDialog = (function () {
      function CustomDialog() {

      };
      CustomDialog.value = new CustomDialog();
      return CustomDialog;
  })();
  var State = (function () {
      function State(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      State.create = function (value0) {
          return function (value1) {
              return new State(value0, value1);
          };
      };
      return State;
  })();
  var Game = function (computerMove, initialPosition, isLevelFinished, onNewGame, play, sizeLimit, updateScore) {
      this.computerMove = computerMove;
      this.initialPosition = initialPosition;
      this.isLevelFinished = isLevelFinished;
      this.onNewGame = onNewGame;
      this.play = play;
      this.sizeLimit = sizeLimit;
      this.updateScore = updateScore;
  };
  var ScoreGame = function (Game0, isCustomGame, objective, scoreFn, scoreHash) {
      this.Game0 = Game0;
      this.isCustomGame = isCustomGame;
      this.objective = objective;
      this.scoreFn = scoreFn;
      this.scoreHash = scoreHash;
  };
  var TwoPlayersGame = function (Game0, isLosingPosition, possibleMoves) {
      this.Game0 = Game0;
      this.isLosingPosition = isLosingPosition;
      this.possibleMoves = possibleMoves;
  };
  var updateScore = function (dict) {
      return dict.updateScore;
  };
  var sizeLimit = function (dict) {
      return dict.sizeLimit;
  };
  var scoreHash = function (dict) {
      return dict.scoreHash;
  };
  var scoreFn = function (dict) {
      return dict.scoreFn;
  };
  var possibleMoves = function (dict) {
      return dict.possibleMoves;
  };
  var play = function (dict) {
      return dict.play;
  };
  var oppositeTurn = function (v) {
      if (v instanceof Turn1) {
          return Turn2.value;
      };
      return Turn1.value;
  };
  var onNewGame = function (dict) {
      return dict.onNewGame;
  };
  var objective = function (dict) {
      return dict.objective;
  };
  var isLosingPosition = function (dict) {
      return dict.isLosingPosition;
  };
  var isLevelFinished = function (dict) {
      return dict.isLevelFinished;
  };
  var isCustomGame = function (dict) {
      return dict.isCustomGame;
  };
  var scoreHash$prime = function (dictScoreGame) {
      return function (state) {
          var $108 = isCustomGame(dictScoreGame)(state);
          if ($108) {
              return "custom";
          };
          return scoreHash(dictScoreGame)(state);
      };
  };
  var initialPosition = function (dict) {
      return dict.initialPosition;
  };
  var eqTurn = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Turn1 && y instanceof Turn1) {
              return true;
          };
          if (x instanceof Turn2 && y instanceof Turn2) {
              return true;
          };
          return false;
      };
  });
  var eqSws = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof AlwaysShowWin && y instanceof AlwaysShowWin) {
              return true;
          };
          if (x instanceof NeverShowWin && y instanceof NeverShowWin) {
              return true;
          };
          if (x instanceof ShowWinOnNewRecord && y instanceof ShowWinOnNewRecord) {
              return true;
          };
          return false;
      };
  });
  var eqObjective = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Minimize && y instanceof Minimize) {
              return true;
          };
          if (x instanceof Maximize && y instanceof Maximize) {
              return true;
          };
          return false;
      };
  });
  var eqMode = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof SoloMode && y instanceof SoloMode) {
              return true;
          };
          if (x instanceof RandomMode && y instanceof RandomMode) {
              return true;
          };
          if (x instanceof ExpertMode && y instanceof ExpertMode) {
              return true;
          };
          if (x instanceof DuelMode && y instanceof DuelMode) {
              return true;
          };
          return false;
      };
  });
  var defaultSizeLimit = function (v) {
      return new SizeLimit(0, 0, 0, 0);
  };
  var defaultOnNewGame = Control_Applicative.pure(Lib_Random.applicativeRandom);
  var defaultCoreState = function (p) {
      return {
          position: p,
          history: Data_List_Types.Nil.value,
          redoHistory: Data_List_Types.Nil.value,
          dialog: Rules.value,
          turn: Turn1.value,
          nbRows: 0,
          nbColumns: 0,
          customSize: false,
          help: false,
          mode: SoloMode.value,
          locked: false,
          showWin: false,
          scores: Data_Map_Internal.empty,
          pointer: Data_Maybe.Nothing.value
      };
  };
  var genState = function (p) {
      return function (f) {
          return function (ext) {
              return new State(f(defaultCoreState(p)), ext);
          };
      };
  };
  var confirmNewGameA = function (st) {
      return Pha_Action.setState(function (v) {
          return st;
      });
  };
  var computerMove = function (dict) {
      return dict.computerMove;
  };
  var canPlay = function (dictGame) {
      return function (st) {
          return function (mov) {
              return Data_Maybe.isJust(play(dictGame)(st)(mov));
          };
      };
  };
  var _ext = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.value1;
      })(function (v) {
          return function (e) {
              return new State(v.value0, e);
          };
      })(dictStrong);
  };
  var _core = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.value0;
      })(function (v) {
          return function (c) {
              return new State(c, v.value1);
          };
      })(dictStrong);
  };
  var _customSize = function (dictStrong) {
      var $168 = _core(dictStrong);
      var $169 = Data_Lens_Lens.lens(function (v) {
          return v.customSize;
      })(function (v) {
          return function (v1) {
              return {
                  customSize: v1,
                  dialog: v.dialog,
                  help: v.help,
                  history: v.history,
                  locked: v.locked,
                  mode: v.mode,
                  nbColumns: v.nbColumns,
                  nbRows: v.nbRows,
                  pointer: v.pointer,
                  position: v.position,
                  redoHistory: v.redoHistory,
                  scores: v.scores,
                  showWin: v.showWin,
                  turn: v.turn
              };
          };
      })(dictStrong);
      return function ($170) {
          return $168($169($170));
      };
  };
  var _dialog = function (dictStrong) {
      var $171 = _core(dictStrong);
      var $172 = Data_Lens_Lens.lens(function (v) {
          return v.dialog;
      })(function (v) {
          return function (v1) {
              return {
                  dialog: v1,
                  customSize: v.customSize,
                  help: v.help,
                  history: v.history,
                  locked: v.locked,
                  mode: v.mode,
                  nbColumns: v.nbColumns,
                  nbRows: v.nbRows,
                  pointer: v.pointer,
                  position: v.position,
                  redoHistory: v.redoHistory,
                  scores: v.scores,
                  showWin: v.showWin,
                  turn: v.turn
              };
          };
      })(dictStrong);
      return function ($173) {
          return $171($172($173));
      };
  };
  var _help = function (dictStrong) {
      var $174 = _core(dictStrong);
      var $175 = Data_Lens_Lens.lens(function (v) {
          return v.help;
      })(function (v) {
          return function (v1) {
              return {
                  help: v1,
                  customSize: v.customSize,
                  dialog: v.dialog,
                  history: v.history,
                  locked: v.locked,
                  mode: v.mode,
                  nbColumns: v.nbColumns,
                  nbRows: v.nbRows,
                  pointer: v.pointer,
                  position: v.position,
                  redoHistory: v.redoHistory,
                  scores: v.scores,
                  showWin: v.showWin,
                  turn: v.turn
              };
          };
      })(dictStrong);
      return function ($176) {
          return $174($175($176));
      };
  };
  var toggleHelpA = Pha_Action.setState(Data_Lens_Setter.over(_help(Data_Profunctor_Strong.strongFn))(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean)));
  var _history = function (dictStrong) {
      var $177 = _core(dictStrong);
      var $178 = Data_Lens_Lens.lens(function (v) {
          return v.history;
      })(function (v) {
          return function (v1) {
              return {
                  history: v1,
                  customSize: v.customSize,
                  dialog: v.dialog,
                  help: v.help,
                  locked: v.locked,
                  mode: v.mode,
                  nbColumns: v.nbColumns,
                  nbRows: v.nbRows,
                  pointer: v.pointer,
                  position: v.position,
                  redoHistory: v.redoHistory,
                  scores: v.scores,
                  showWin: v.showWin,
                  turn: v.turn
              };
          };
      })(dictStrong);
      return function ($179) {
          return $177($178($179));
      };
  };
  var _locked = function (dictStrong) {
      var $180 = _core(dictStrong);
      var $181 = Data_Lens_Lens.lens(function (v) {
          return v.locked;
      })(function (v) {
          return function (v1) {
              return {
                  locked: v1,
                  customSize: v.customSize,
                  dialog: v.dialog,
                  help: v.help,
                  history: v.history,
                  mode: v.mode,
                  nbColumns: v.nbColumns,
                  nbRows: v.nbRows,
                  pointer: v.pointer,
                  position: v.position,
                  redoHistory: v.redoHistory,
                  scores: v.scores,
                  showWin: v.showWin,
                  turn: v.turn
              };
          };
      })(dictStrong);
      return function ($182) {
          return $180($181($182));
      };
  };
  var lockAction = function (act) {
      return Control_Monad.unlessM(Run.monadRun)(Data_Functor.map(Run.functorRun)(Data_Lens_Getter.view(_locked(Data_Lens_Internal_Forget.strongForget)))(Pha_Action.getState))(Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.setState(Data_Lens_Setter.set(_locked(Data_Profunctor_Strong.strongFn))(true)))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(act)(function () {
              return Pha_Action.setState(Data_Lens_Setter.set(_locked(Data_Profunctor_Strong.strongFn))(false));
          });
      }));
  };
  var _mode = function (dictStrong) {
      var $183 = _core(dictStrong);
      var $184 = Data_Lens_Lens.lens(function (v) {
          return v.mode;
      })(function (v) {
          return function (v1) {
              return {
                  mode: v1,
                  customSize: v.customSize,
                  dialog: v.dialog,
                  help: v.help,
                  history: v.history,
                  locked: v.locked,
                  nbColumns: v.nbColumns,
                  nbRows: v.nbRows,
                  pointer: v.pointer,
                  position: v.position,
                  redoHistory: v.redoHistory,
                  scores: v.scores,
                  showWin: v.showWin,
                  turn: v.turn
              };
          };
      })(dictStrong);
      return function ($185) {
          return $183($184($185));
      };
  };
  var _nbColumns = function (dictStrong) {
      var $186 = _core(dictStrong);
      var $187 = Data_Lens_Lens.lens(function (v) {
          return v.nbColumns;
      })(function (v) {
          return function (v1) {
              return {
                  nbColumns: v1,
                  customSize: v.customSize,
                  dialog: v.dialog,
                  help: v.help,
                  history: v.history,
                  locked: v.locked,
                  mode: v.mode,
                  nbRows: v.nbRows,
                  pointer: v.pointer,
                  position: v.position,
                  redoHistory: v.redoHistory,
                  scores: v.scores,
                  showWin: v.showWin,
                  turn: v.turn
              };
          };
      })(dictStrong);
      return function ($188) {
          return $186($187($188));
      };
  };
  var _nbRows = function (dictStrong) {
      var $189 = _core(dictStrong);
      var $190 = Data_Lens_Lens.lens(function (v) {
          return v.nbRows;
      })(function (v) {
          return function (v1) {
              return {
                  nbRows: v1,
                  customSize: v.customSize,
                  dialog: v.dialog,
                  help: v.help,
                  history: v.history,
                  locked: v.locked,
                  mode: v.mode,
                  nbColumns: v.nbColumns,
                  pointer: v.pointer,
                  position: v.position,
                  redoHistory: v.redoHistory,
                  scores: v.scores,
                  showWin: v.showWin,
                  turn: v.turn
              };
          };
      })(dictStrong);
      return function ($191) {
          return $189($190($191));
      };
  };
  var _pointer = function (dictStrong) {
      var $192 = _core(dictStrong);
      var $193 = Data_Lens_Lens.lens(function (v) {
          return v.pointer;
      })(function (v) {
          return function (v1) {
              return {
                  pointer: v1,
                  customSize: v.customSize,
                  dialog: v.dialog,
                  help: v.help,
                  history: v.history,
                  locked: v.locked,
                  mode: v.mode,
                  nbColumns: v.nbColumns,
                  nbRows: v.nbRows,
                  position: v.position,
                  redoHistory: v.redoHistory,
                  scores: v.scores,
                  showWin: v.showWin,
                  turn: v.turn
              };
          };
      })(dictStrong);
      return function ($194) {
          return $192($193($194));
      };
  };
  var _position = function (dictStrong) {
      var $195 = _core(dictStrong);
      var $196 = Data_Lens_Lens.lens(function (v) {
          return v.position;
      })(function (v) {
          return function (v1) {
              return {
                  position: v1,
                  customSize: v.customSize,
                  dialog: v.dialog,
                  help: v.help,
                  history: v.history,
                  locked: v.locked,
                  mode: v.mode,
                  nbColumns: v.nbColumns,
                  nbRows: v.nbRows,
                  pointer: v.pointer,
                  redoHistory: v.redoHistory,
                  scores: v.scores,
                  showWin: v.showWin,
                  turn: v.turn
              };
          };
      })(dictStrong);
      return function ($197) {
          return $195($196($197));
      };
  };
  var _redoHistory = function (dictStrong) {
      var $198 = _core(dictStrong);
      var $199 = Data_Lens_Lens.lens(function (v) {
          return v.redoHistory;
      })(function (v) {
          return function (v1) {
              return {
                  redoHistory: v1,
                  customSize: v.customSize,
                  dialog: v.dialog,
                  help: v.help,
                  history: v.history,
                  locked: v.locked,
                  mode: v.mode,
                  nbColumns: v.nbColumns,
                  nbRows: v.nbRows,
                  pointer: v.pointer,
                  position: v.position,
                  scores: v.scores,
                  showWin: v.showWin,
                  turn: v.turn
              };
          };
      })(dictStrong);
      return function ($200) {
          return $198($199($200));
      };
  };
  var pushToHistory = function (state) {
      return Data_Lens_Setter.set(_redoHistory(Data_Profunctor_Strong.strongFn))(Data_List_Types.Nil.value)(Data_Lens_Setter.over(_history(Data_Profunctor_Strong.strongFn))(Data_List_Types.Cons.create(Data_Lens_Getter.viewOn(state)(_position(Data_Lens_Internal_Forget.strongForget))))(state));
  };
  var _scores = function (dictStrong) {
      var $201 = _core(dictStrong);
      var $202 = Data_Lens_Lens.lens(function (v) {
          return v.scores;
      })(function (v) {
          return function (v1) {
              return {
                  scores: v1,
                  customSize: v.customSize,
                  dialog: v.dialog,
                  help: v.help,
                  history: v.history,
                  locked: v.locked,
                  mode: v.mode,
                  nbColumns: v.nbColumns,
                  nbRows: v.nbRows,
                  pointer: v.pointer,
                  position: v.position,
                  redoHistory: v.redoHistory,
                  showWin: v.showWin,
                  turn: v.turn
              };
          };
      })(dictStrong);
      return function ($203) {
          return $201($202($203));
      };
  };
  var bestScore = function (dictScoreGame) {
      return function (state) {
          return Data_Lens_Getter.viewOn(state)((function () {
              var $204 = _scores(Data_Lens_Internal_Forget.strongForget);
              var $205 = Data_Lens_At.at(Data_Lens_At.atMap(Data_Ord.ordString))(scoreHash$prime(dictScoreGame)(state))(Data_Lens_Internal_Forget.strongForget);
              return function ($206) {
                  return $204($205($206));
              };
          })());
      };
  };
  var newGame = function (dictGame) {
      return function (f) {
          return Pha_Action.randomAction(function (state) {
              var state2 = f(state);
              return Control_Bind.bind(Lib_Random.bindRandom)(onNewGame(dictGame)(state2))(function (v) {
                  return Control_Bind.bind(Lib_Random.bindRandom)(initialPosition(dictGame)(v))(function (v1) {
                      var state4 = Data_Lens_Setter.set((function () {
                          var $207 = _scores(Data_Profunctor_Strong.strongFn);
                          var $208 = Data_Lens_At.at(Data_Lens_At.atMap(Data_Ord.ordString))("custom")(Data_Profunctor_Strong.strongFn);
                          return function ($209) {
                              return $207($208($209));
                          };
                      })())(Data_Maybe.Nothing.value)(Data_Lens_Setter.set(_help(Data_Profunctor_Strong.strongFn))(false)(Data_Lens_Setter.set(_redoHistory(Data_Profunctor_Strong.strongFn))(Data_List_Types.Nil.value)(Data_Lens_Setter.set(_history(Data_Profunctor_Strong.strongFn))(Data_List_Types.Nil.value)(Data_Lens_Setter.set(_position(Data_Profunctor_Strong.strongFn))(v1)(v)))));
                      var $131 = Data_List["null"](Data_Lens_Getter.viewOn(state2)(_history(Data_Lens_Internal_Forget.strongForget))) || isLevelFinished(dictGame)(state);
                      if ($131) {
                          return Control_Applicative.pure(Lib_Random.applicativeRandom)(state4);
                      };
                      return Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Lens_Setter.set(_dialog(Data_Profunctor_Strong.strongFn))(new ConfirmNewGame(state4))(state));
                  });
              });
          });
      };
  };
  var init = function (dictGame) {
      return newGame(dictGame)(Control_Category.identity(Control_Category.categoryFn));
  };
  var newGame$prime = function (dictGame) {
      return function (f) {
          return function (val) {
              return newGame(dictGame)(f(val));
          };
      };
  };
  var setModeA = function (dictGame) {
      return newGame$prime(dictGame)(Data_Lens_Setter.set(_mode(Data_Profunctor_Strong.strongFn)));
  };
  var setGridSizeA = function (dictGame) {
      return function (nbRows) {
          return function (nbColumns) {
              return function (customSize) {
                  var setSize$prime = function (state) {
                      var v = sizeLimit(dictGame)(state);
                      var $133 = nbRows >= v.value0 && (nbRows <= v.value2 && (nbColumns >= v.value1 && nbColumns <= v.value3));
                      if ($133) {
                          return Data_Lens_Setter.set(_nbColumns(Data_Profunctor_Strong.strongFn))(nbColumns)(Data_Lens_Setter.set(_nbRows(Data_Profunctor_Strong.strongFn))(nbRows)(state));
                      };
                      return state;
                  };
                  return newGame(dictGame)((function () {
                      var $210 = Data_Lens_Setter.set(_customSize(Data_Profunctor_Strong.strongFn))(customSize);
                      return function ($211) {
                          return setSize$prime($210($211));
                      };
                  })());
              };
          };
      };
  };
  var updateScore$prime = function (dictScoreGame) {
      return function (strat) {
          return function (state) {
              var score = scoreFn(dictScoreGame)(state);
              var oldScore = bestScore(dictScoreGame)(state);
              var hash = scoreHash$prime(dictScoreGame)(state);
              var cmp = (function () {
                  var $138 = Data_Eq.eq(eqObjective)(objective(dictScoreGame)(state))(Minimize.value);
                  if ($138) {
                      return Data_Ord.lessThan(Data_Ord.ordInt);
                  };
                  return Data_Ord.greaterThan(Data_Ord.ordInt);
              })();
              var isNewRecord = Data_Maybe.maybe(true)((function () {
                  var $212 = cmp(score);
                  return function ($213) {
                      return $212(Data_Tuple.fst($213));
                  };
              })())(oldScore);
              var isNewRecord$prime = isNewRecord && Data_Eq.eq(eqSws)(strat)(ShowWinOnNewRecord.value) || Data_Eq.eq(eqSws)(strat)(AlwaysShowWin.value);
              var st2 = Data_Lens_Setter.over((function () {
                  var $214 = _scores(Data_Profunctor_Strong.strongFn);
                  var $215 = Data_Lens_At.at(Data_Lens_At.atMap(Data_Ord.ordString))(hash)(Data_Profunctor_Strong.strongFn);
                  return function ($216) {
                      return $214($215($216));
                  };
              })())((function () {
                  if (isNewRecord) {
                      return function (v) {
                          return new Data_Maybe.Just(new Data_Tuple.Tuple(score, Data_Lens_Getter.viewOn(state)(_position(Data_Lens_Internal_Forget.strongForget))));
                      };
                  };
                  return Control_Category.identity(Control_Category.categoryFn);
              })())(state);
              return new Data_Tuple.Tuple(st2, isNewRecord$prime);
          };
      };
  };
  var _showWin = function (dictStrong) {
      var $217 = _core(dictStrong);
      var $218 = Data_Lens_Lens.lens(function (v) {
          return v.showWin;
      })(function (v) {
          return function (v1) {
              return {
                  showWin: v1,
                  customSize: v.customSize,
                  dialog: v.dialog,
                  help: v.help,
                  history: v.history,
                  locked: v.locked,
                  mode: v.mode,
                  nbColumns: v.nbColumns,
                  nbRows: v.nbRows,
                  pointer: v.pointer,
                  position: v.position,
                  redoHistory: v.redoHistory,
                  scores: v.scores,
                  turn: v.turn
              };
          };
      })(dictStrong);
      return function ($219) {
          return $217($218($219));
      };
  };
  var showVictory = Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.setState(Data_Lens_Setter.set(_showWin(Data_Profunctor_Strong.strongFn))(true)))(function () {
      return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.delay(1000))(function () {
          return Pha_Action.setState(Data_Lens_Setter.set(_showWin(Data_Profunctor_Strong.strongFn))(false));
      });
  });
  var _turn = function (dictStrong) {
      var $220 = _core(dictStrong);
      var $221 = Data_Lens_Lens.lens(function (v) {
          return v.turn;
      })(function (v) {
          return function (v1) {
              return {
                  turn: v1,
                  customSize: v.customSize,
                  dialog: v.dialog,
                  help: v.help,
                  history: v.history,
                  locked: v.locked,
                  mode: v.mode,
                  nbColumns: v.nbColumns,
                  nbRows: v.nbRows,
                  pointer: v.pointer,
                  position: v.position,
                  redoHistory: v.redoHistory,
                  scores: v.scores,
                  showWin: v.showWin
              };
          };
      })(dictStrong);
      return function ($222) {
          return $220($221($222));
      };
  };
  var changeTurn = function (state) {
      return Data_Lens_Setter.over(_turn(Data_Profunctor_Strong.strongFn))(function (x) {
          var $140 = Data_Eq.eq(eqMode)(Data_Lens_Getter.viewOn(state)(_mode(Data_Lens_Internal_Forget.strongForget)))(DuelMode.value);
          if ($140) {
              return oppositeTurn(x);
          };
          return Turn1.value;
      })(state);
  };
  var redoA = Pha_Action.setState(function (state) {
      var v = Data_Lens_Getter.viewOn(state)(_redoHistory(Data_Lens_Internal_Forget.strongForget));
      if (v instanceof Data_List_Types.Nil) {
          return state;
      };
      if (v instanceof Data_List_Types.Cons) {
          return Data_Lens_Setter.over(_history(Data_Profunctor_Strong.strongFn))(Data_List_Types.Cons.create(Data_Lens_Getter.viewOn(state)(_position(Data_Lens_Internal_Forget.strongForget))))(Data_Lens_Setter.set(_redoHistory(Data_Profunctor_Strong.strongFn))(v.value1)(Data_Lens_Setter.set(_position(Data_Profunctor_Strong.strongFn))(v.value0)(changeTurn(state))));
      };
      throw new Error("Failed pattern match at Game.Core (line 146, column 28 - line 152, column 52): " + [ v.constructor.name ]);
  });
  var undoA = Pha_Action.setState(function (state) {
      var v = Data_Lens_Getter.viewOn(state)(_history(Data_Lens_Internal_Forget.strongForget));
      if (v instanceof Data_List_Types.Nil) {
          return state;
      };
      if (v instanceof Data_List_Types.Cons) {
          return Data_Lens_Setter.over(_redoHistory(Data_Profunctor_Strong.strongFn))(Data_List_Types.Cons.create(Data_Lens_Getter.viewOn(state)(_position(Data_Lens_Internal_Forget.strongForget))))(Data_Lens_Setter.set(_history(Data_Profunctor_Strong.strongFn))(v.value1)(Data_Lens_Setter.set(_position(Data_Profunctor_Strong.strongFn))(v.value0)(changeTurn(state))));
      };
      throw new Error("Failed pattern match at Game.Core (line 137, column 28 - line 143, column 56): " + [ v.constructor.name ]);
  });
  var playAux = function (dictGame) {
      return function (move) {
          return function (state) {
              return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(play(dictGame)(state)(move))(function (pos) {
                  return Data_Lens_Setter.over(_turn(Data_Profunctor_Strong.strongFn))(oppositeTurn)(Data_Lens_Setter.set(_position(Data_Profunctor_Strong.strongFn))(pos)(state));
              });
          };
      };
  };
  var computerMove$prime = function (dictTwoPlayersGame) {
      return function (state) {
          var $147 = isLevelFinished(dictTwoPlayersGame.Game0())(state);
          if ($147) {
              return Data_Maybe.Nothing.value;
          };
          var moves = possibleMoves(dictTwoPlayersGame)(state);
          var bestMove = (function () {
              var $148 = Data_Eq.eq(eqMode)(Data_Lens_Getter.viewOn(state)(_mode(Data_Lens_Internal_Forget.strongForget)))(RandomMode.value);
              if ($148) {
                  return Data_Maybe.Nothing.value;
              };
              return Data_Foldable.find(Data_Foldable.foldableArray)((function () {
                  var $223 = Data_Maybe.maybe(false)(isLosingPosition(dictTwoPlayersGame));
                  var $224 = Data_Function.flip(playAux(dictTwoPlayersGame.Game0()))(state);
                  return function ($225) {
                      return $223($224($225));
                  };
              })())(moves);
          })();
          return Control_Alt.alt(Data_Maybe.altMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Control_Applicative.pure(Lib_Random.applicativeRandom))(bestMove))(Lib_Random.randomPick(moves));
      };
  };
  var computerPlay = function (dictGame) {
      return Control_Bind.bind(Run.bindRun)(Pha_Action.getState)(function (v) {
          var v1 = computerMove(dictGame)(v);
          if (v1 instanceof Data_Maybe.Nothing) {
              return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
          };
          if (v1 instanceof Data_Maybe.Just) {
              return Control_Bind.bind(Run.bindRun)(Pha_Action.runRng(Data_Functor.map(Lib_Random.functorRandom)(Data_Function.flip(playAux(dictGame))(v))(v1.value0)))(function (v2) {
                  if (v2 instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
                  };
                  if (v2 instanceof Data_Maybe.Just) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.setState(function (v3) {
                          return v2.value0;
                      }))(function () {
                          return Control_Applicative.when(Run.applicativeRun)(isLevelFinished(dictGame)(v2.value0))(showVictory);
                      });
                  };
                  throw new Error("Failed pattern match at Game.Core (line 187, column 57 - line 191, column 59): " + [ v2.constructor.name ]);
              });
          };
          throw new Error("Failed pattern match at Game.Core (line 184, column 5 - line 191, column 59): " + [ v1.constructor.name ]);
      });
  };
  var computerStartsA = function (dictGame) {
      return Control_Apply.applySecond(Run.applyRun)(Pha_Action.setState((function () {
          var $226 = Data_Lens_Setter.over(_turn(Data_Profunctor_Strong.strongFn))(oppositeTurn);
          return function ($227) {
              return pushToHistory($226($227));
          };
      })()))(computerPlay(dictGame));
  };
  var playA = function (dictGame) {
      return function (move) {
          return lockAction(Control_Bind.bind(Run.bindRun)(Pha_Action.getState)(function (v) {
              var v1 = playAux(dictGame)(move)(pushToHistory(v));
              if (v1 instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.setState(function (v2) {
                      return v1.value0;
                  }))(function () {
                      var $156 = isLevelFinished(dictGame)(v1.value0);
                      if ($156) {
                          var v2 = updateScore(dictGame)(v1.value0);
                          return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.setState(function (v3) {
                              return v2.value0;
                          }))(function () {
                              return Control_Applicative.when(Run.applicativeRun)(v2.value1)(showVictory);
                          });
                      };
                      var $160 = Data_Eq.eq(eqMode)(Data_Lens_Getter.viewOn(v1.value0)(_mode(Data_Lens_Internal_Forget.strongForget)))(ExpertMode.value) || Data_Eq.eq(eqMode)(Data_Lens_Getter.viewOn(v1.value0)(_mode(Data_Lens_Internal_Forget.strongForget)))(RandomMode.value);
                      if ($160) {
                          return Control_Apply.applySecond(Run.applyRun)(Pha_Action.delay(1000))(computerPlay(dictGame));
                      };
                      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
                  });
              };
              throw new Error("Failed pattern match at Game.Core (line 199, column 5 - line 210, column 26): " + [ v1.constructor.name ]);
          }));
      };
  };
  var dropA = function (dictEq) {
      return function (dictGame) {
          return function (dragLens) {
              return function (to) {
                  return Control_Bind.bind(Run.bindRun)(Pha_Action.getState)(function (v) {
                      var v1 = Data_Lens_Getter.viewOn(v)(dragLens(Data_Lens_Internal_Forget.strongForget));
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
                      };
                      if (v1 instanceof Data_Maybe.Just) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.setState(Data_Lens_Setter.set(dragLens(Data_Profunctor_Strong.strongFn))(Data_Maybe.Nothing.value)))(function () {
                              var $164 = Data_Eq.notEq(dictEq)(v1.value0)(to);
                              if ($164) {
                                  return playA(dictGame)({
                                      from: v1.value0,
                                      to: to
                                  });
                              };
                              return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
                          });
                      };
                      throw new Error("Failed pattern match at Game.Core (line 312, column 5 - line 316, column 71): " + [ v1.constructor.name ]);
                  });
              };
          };
      };
  };
  var resetA = Pha_Action.setState(function (state) {
      var v = Data_List.last(Data_Lens_Getter.viewOn(state)(_history(Data_Lens_Internal_Forget.strongForget)));
      if (v instanceof Data_Maybe.Nothing) {
          return state;
      };
      if (v instanceof Data_Maybe.Just) {
          return Data_Lens_Setter.set(_turn(Data_Profunctor_Strong.strongFn))(Turn1.value)(Data_Lens_Setter.set(_redoHistory(Data_Profunctor_Strong.strongFn))(Data_List_Types.Nil.value)(Data_Lens_Setter.set(_history(Data_Profunctor_Strong.strongFn))(Data_List_Types.Nil.value)(Data_Lens_Setter.set(_position(Data_Profunctor_Strong.strongFn))(v.value0)(state))));
      };
      throw new Error("Failed pattern match at Game.Core (line 155, column 29 - line 160, column 37): " + [ v.constructor.name ]);
  });
  exports["isLevelFinished"] = isLevelFinished;
  exports["possibleMoves"] = possibleMoves;
  exports["scoreFn"] = scoreFn;
  exports["sizeLimit"] = sizeLimit;
  exports["Rules"] = Rules;
  exports["NoDialog"] = NoDialog;
  exports["ConfirmNewGame"] = ConfirmNewGame;
  exports["ScoreDialog"] = ScoreDialog;
  exports["CustomDialog"] = CustomDialog;
  exports["RandomMode"] = RandomMode;
  exports["ExpertMode"] = ExpertMode;
  exports["DuelMode"] = DuelMode;
  exports["Turn1"] = Turn1;
  exports["Turn2"] = Turn2;
  exports["genState"] = genState;
  exports["_ext"] = _ext;
  exports["_position"] = _position;
  exports["_history"] = _history;
  exports["_redoHistory"] = _redoHistory;
  exports["_mode"] = _mode;
  exports["_help"] = _help;
  exports["_turn"] = _turn;
  exports["_dialog"] = _dialog;
  exports["_nbRows"] = _nbRows;
  exports["_nbColumns"] = _nbColumns;
  exports["_customSize"] = _customSize;
  exports["_locked"] = _locked;
  exports["_showWin"] = _showWin;
  exports["_pointer"] = _pointer;
  exports["SizeLimit"] = SizeLimit;
  exports["Game"] = Game;
  exports["canPlay"] = canPlay;
  exports["defaultSizeLimit"] = defaultSizeLimit;
  exports["defaultOnNewGame"] = defaultOnNewGame;
  exports["undoA"] = undoA;
  exports["redoA"] = redoA;
  exports["resetA"] = resetA;
  exports["toggleHelpA"] = toggleHelpA;
  exports["computerStartsA"] = computerStartsA;
  exports["playA"] = playA;
  exports["lockAction"] = lockAction;
  exports["newGame"] = newGame;
  exports["newGame'"] = newGame$prime;
  exports["init"] = init;
  exports["setModeA"] = setModeA;
  exports["setGridSizeA"] = setGridSizeA;
  exports["confirmNewGameA"] = confirmNewGameA;
  exports["TwoPlayersGame"] = TwoPlayersGame;
  exports["computerMove'"] = computerMove$prime;
  exports["Minimize"] = Minimize;
  exports["Maximize"] = Maximize;
  exports["AlwaysShowWin"] = AlwaysShowWin;
  exports["NeverShowWin"] = NeverShowWin;
  exports["ShowWinOnNewRecord"] = ShowWinOnNewRecord;
  exports["ScoreGame"] = ScoreGame;
  exports["updateScore'"] = updateScore$prime;
  exports["bestScore"] = bestScore;
  exports["dropA"] = dropA;
  exports["eqMode"] = eqMode;
  exports["eqTurn"] = eqTurn;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Lib.Util"] = $PS["Lib.Util"] || {};
  var exports = $PS["Lib.Util"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];                
  var swap = function (i) {
      return function (j) {
          return function (array) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(array)(i))(function (v) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(array)(j))(function (v1) {
                      return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.updateAt(i)(v1)(array))(Data_Array.updateAt(j)(v));
                  });
              });
          };
      };
  };
  var range$prime = function (n) {
      return function (m) {
          var $4 = n > m;
          if ($4) {
              return [  ];
          };
          return Data_Array.range(n)(m);
      };
  };
  var tabulate = function (n) {
      return function (f) {
          return Data_Functor.mapFlipped(Data_Functor.functorArray)(range$prime(0)(n - 1 | 0))(f);
      };
  };
  var rangeStep = function (begin) {
      return function (end) {
          return function (step) {
              return tabulate(Data_Ord.max(Data_Ord.ordInt)(0)(1 + Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(end - begin | 0)(step) | 0))(function (i) {
                  return begin + (i * step | 0) | 0;
              });
          };
      };
  };
  var tabulate2 = function (n) {
      return function (m) {
          return function (f) {
              return tabulate(n * m | 0)(function (i) {
                  return f(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(i)(m))(Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(i)(m));
              });
          };
      };
  };
  var pairwise = function (list) {
      return Data_Maybe.maybe([  ])(Data_Array.zip(list))(Data_Array.tail(list));
  };
  var map3 = function (t1) {
      return function (t2) {
          return function (t3) {
              return function (fn) {
                  return Data_Array.zipWith(Data_Function.apply)(Data_Array.zipWith(Data_Function.apply)(Data_Array.mapWithIndex(fn)(t1))(t2))(t3);
              };
          };
      };
  };
  var map2 = function (t1) {
      return function (t2) {
          return function (fn) {
              return Data_Array.zipWith(Data_Function.apply)(Data_Array.mapWithIndex(fn)(t1))(t2);
          };
      };
  };
  var floatRange = function (begin) {
      return function (end) {
          return function (step) {
              return tabulate(Data_Ord.max(Data_Ord.ordInt)(0)(Data_Int.floor(1.0 + (end - begin) / step)))(function (i) {
                  return begin + Data_Int.toNumber(i) * step;
              });
          };
      };
  };
  var coords = function (cols) {
      return function (i) {
          return {
              row: Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(i)(cols),
              col: Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(i)(cols)
          };
      };
  };
  var dCoords = function (cols) {
      return function (x) {
          return function (y) {
              var q = coords(cols)(y);
              var p = coords(cols)(x);
              return {
                  row: p.row - q.row | 0,
                  col: p.col - q.col | 0
              };
          };
      };
  };
  var abs = function (x) {
      var $5 = x < 0;
      if ($5) {
          return -x | 0;
      };
      return x;
  };
  exports["abs"] = abs;
  exports["range'"] = range$prime;
  exports["tabulate"] = tabulate;
  exports["tabulate2"] = tabulate2;
  exports["map2"] = map2;
  exports["map3"] = map3;
  exports["rangeStep"] = rangeStep;
  exports["floatRange"] = floatRange;
  exports["pairwise"] = pairwise;
  exports["swap"] = swap;
  exports["coords"] = coords;
  exports["dCoords"] = dCoords;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Baseball.Model"] = $PS["Game.Baseball.Model"] || {};
  var exports = $PS["Game.Baseball.Model"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Core = $PS["Game.Core"];
  var Lib_Random = $PS["Lib.Random"];
  var Lib_Util = $PS["Lib.Util"];                
  var Ext = function (x) {
      return x;
  };
  var istate = Game_Core.genState([  ])(Control_Category.identity(Control_Category.categoryFn))({
      nbBases: 5,
      missingPeg: 0
  });
  var _ext$prime = function (dictStrong) {
      var $16 = Game_Core["_ext"](dictStrong);
      var $17 = Data_Lens_Iso.iso(function (v) {
          return v;
      })(Ext)(dictStrong.Profunctor0());
      return function ($18) {
          return $16($17($18));
      };
  };
  var _missingPeg = function (dictStrong) {
      var $19 = _ext$prime(dictStrong);
      var $20 = Data_Lens_Lens.lens(function (v) {
          return v.missingPeg;
      })(function (v) {
          return function (v1) {
              return {
                  missingPeg: v1,
                  nbBases: v.nbBases
              };
          };
      })(dictStrong);
      return function ($21) {
          return $19($20($21));
      };
  };
  var _nbBases = function (dictStrong) {
      var $22 = _ext$prime(dictStrong);
      var $23 = Data_Lens_Lens.lens(function (v) {
          return v.nbBases;
      })(function (v) {
          return function (v1) {
              return {
                  nbBases: v1,
                  missingPeg: v.missingPeg
              };
          };
      })(dictStrong);
      return function ($24) {
          return $22($23($24));
      };
  };
  var baseballGame = new Game_Core.Game(Data_Function["const"](Data_Maybe.Nothing.value), function (state) {
      return Lib_Random.shuffle(Lib_Util["range'"](0)((2 * Data_Lens_Getter.viewOn(state)(_nbBases(Data_Lens_Internal_Forget.strongForget)) | 0) - 1 | 0));
  }, function (state) {
      return Data_FoldableWithIndex.allWithIndex(Data_FoldableWithIndex.foldableWithIndexArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (i) {
          return function (j) {
              return Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(i)(2) === Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(j)(2);
          };
      })(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)));
  }, function (state) {
      return Data_Functor.mapFlipped(Lib_Random.functorRandom)(Lib_Random.randomInt(2 * Data_Lens_Getter.viewOn(state)(_nbBases(Data_Lens_Internal_Forget.strongForget)) | 0))(function (i) {
          return Data_Lens_Setter.set(_missingPeg(Data_Profunctor_Strong.strongFn))(i)(state);
      });
  }, function (state) {
      return function (i) {
          var position = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
          var nbBases = Data_Lens_Getter.viewOn(state)(_nbBases(Data_Lens_Internal_Forget.strongForget));
          var j = Data_Lens_Getter.viewOn(state)(_missingPeg(Data_Lens_Internal_Forget.strongForget));
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(position)(i))(function (v) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(position)(j))(function (v1) {
                  var $15 = Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqInt)(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v)(2) - Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v1)(2) | 0)([ 1, nbBases - 1 | 0, -1 | 0, 1 - nbBases | 0 ]);
                  if ($15) {
                      return Data_Maybe.Just.create(Data_Array.updateAtIndices(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple(i, v1), new Data_Tuple.Tuple(j, v) ])(position));
                  };
                  return Data_Maybe.Nothing.value;
              });
          });
      };
  }, Game_Core.defaultSizeLimit, function (st) {
      return new Data_Tuple.Tuple(st, true);
  });
  var setNbBasesA = Game_Core["newGame'"](baseballGame)(Data_Lens_Setter.set(_nbBases(Data_Profunctor_Strong.strongFn)));
  exports["_nbBases"] = _nbBases;
  exports["_missingPeg"] = _missingPeg;
  exports["istate"] = istate;
  exports["setNbBasesA"] = setNbBasesA;
  exports["baseballGame"] = baseballGame;
})(PS);
(function(exports) {
  // code comes from hyperapp by Jorge Bucaran
  // https://github.com/jorgebucaran/hyperapp

  const RECYCLED_NODE = 1
  const LAZY_NODE = 2
  const TEXT_NODE = 3
  const EMPTY_OBJ = {}
  const EMPTY_ARR = []
  const map = EMPTY_ARR.map
  const defer = requestAnimationFrame || setTimeout

  const merge = function(a, b) {
    var out = {}

    for (var k in a) out[k] = a[k]
    for (var k in b) out[k] = b[k]

    return out
  }

  const patchProperty = function(node, key, oldValue, newValue, listener, isSvg) {
    if (key === "key") {
    } else if (key === "style") {
      for (var k in merge(oldValue, newValue)) {
        oldValue = newValue == null || newValue[k] == null ? "" : newValue[k]
        //if (oldValue === "")
        //  node[key].removeProperty(k);
        // else
        if (k[0] === "-") {
          node[key].setProperty(k, oldValue)
        } else {
          node[key][k] = oldValue
        }
      }
    } else if (key[0] === "o" && key[1] === "n") {
      if (
        !((node.actions || (node.actions = {}))[
          (key = key.slice(2).toLowerCase())
        ] = newValue)
      ) {
        node.removeEventListener(key, listener)
      } else if (!oldValue) {
        node.addEventListener(key, listener)
      }
    } else if (!isSvg && key !== "list" && key in node) {
      node[key] = newValue == null ? "" : newValue
    } else if (
      newValue == null ||
      newValue === false ||
      (key === "class" && !newValue)
    ) {
      node.removeAttribute(key)
    } else {
      node.setAttribute(key, newValue)
    }
  }

  const createNode = function(vnode, listener, isSvg) {
    var node =
      vnode.type === TEXT_NODE
        ? document.createTextNode(vnode.name)
        : (isSvg = isSvg || vnode.name === "svg")
        ? document.createElementNS("http://www.w3.org/2000/svg", vnode.name)
        : document.createElement(vnode.name)
    var props = vnode.props

    for (var k in props) {
      patchProperty(node, k, null, props[k], listener, isSvg)
    }

    for (var i = 0, len = vnode.children.length; i < len; i++) {
      node.appendChild(
        createNode(
          (vnode.children[i] = getVNode(vnode.children[i])),
          listener,
          isSvg
        )
      )
    }

    return (vnode.node = node)
  }

  const getKey = vnode => vnode == null ? null : vnode.key;

  const patch = function(parent, node, oldVNode, newVNode, listener, isSvg) {
    if (oldVNode === newVNode) {
    } else if (
      oldVNode != null &&
      oldVNode.type === TEXT_NODE &&
      newVNode.type === TEXT_NODE
    ) {
      if (oldVNode.name !== newVNode.name) node.nodeValue = newVNode.name
    } else if (oldVNode == null || oldVNode.name !== newVNode.name) {
      node = parent.insertBefore(
        createNode((newVNode = getVNode(newVNode)), listener, isSvg),
        node
      )
      if (oldVNode != null) {
        parent.removeChild(oldVNode.node)
      }
    } else {
      var tmpVKid
      var oldVKid

      var oldKey
      var newKey

      var oldVProps = oldVNode.props
      var newVProps = newVNode.props

      var oldVKids = oldVNode.children
      var newVKids = newVNode.children

      var oldHead = 0
      var newHead = 0
      var oldTail = oldVKids.length - 1
      var newTail = newVKids.length - 1

      isSvg = isSvg || newVNode.name === "svg"

      for (var i in merge(oldVProps, newVProps)) {
        if (
          (i === "value" || i === "selected" || i === "checked"
            ? node[i]
            : oldVProps[i]) !== newVProps[i]
        ) {
          patchProperty(node, i, oldVProps[i], newVProps[i], listener, isSvg)
        }
      }

      while (newHead <= newTail && oldHead <= oldTail) {
        if (
          (oldKey = getKey(oldVKids[oldHead])) == null ||
          oldKey !== getKey(newVKids[newHead])
        ) {
          break
        }

        patch(
          node,
          oldVKids[oldHead].node,
          oldVKids[oldHead],
          (newVKids[newHead] = getVNode(
            newVKids[newHead++],
            oldVKids[oldHead++]
          )),
          listener,
          isSvg
        )
      }

      while (newHead <= newTail && oldHead <= oldTail) {
        if (
          (oldKey = getKey(oldVKids[oldTail])) == null ||
          oldKey !== getKey(newVKids[newTail])
        ) {
          break
        }

        patch(
          node,
          oldVKids[oldTail].node,
          oldVKids[oldTail],
          (newVKids[newTail] = getVNode(
            newVKids[newTail--],
            oldVKids[oldTail--]
          )),
          listener,
          isSvg
        )
      }

      if (oldHead > oldTail) {
        while (newHead <= newTail) {
          node.insertBefore(
            createNode(
              (newVKids[newHead] = getVNode(newVKids[newHead++])),
              listener,
              isSvg
            ),
            (oldVKid = oldVKids[oldHead]) && oldVKid.node
          )
        }
      } else if (newHead > newTail) {
        while (oldHead <= oldTail) {
          node.removeChild(oldVKids[oldHead++].node)
        }
      } else {
        for (var i = oldHead, keyed = {}, newKeyed = {}; i <= oldTail; i++) {
          if ((oldKey = oldVKids[i].key) != null) {
            keyed[oldKey] = oldVKids[i]
          }
        }

        while (newHead <= newTail) {
          oldKey = getKey((oldVKid = oldVKids[oldHead]))
          newKey = getKey(
            (newVKids[newHead] = getVNode(newVKids[newHead], oldVKid))
          )

          if (
            newKeyed[oldKey] ||
            (newKey != null && newKey === getKey(oldVKids[oldHead + 1]))
          ) {
            if (oldKey == null) {
              node.removeChild(oldVKid.node)
            }
            oldHead++
            continue
          }

          if (newKey == null || oldVNode.type === RECYCLED_NODE) {
            if (oldKey == null) {
              patch(
                node,
                oldVKid && oldVKid.node,
                oldVKid,
                newVKids[newHead],
                listener,
                isSvg
              )
              newHead++
            }
            oldHead++
          } else {
            if (oldKey === newKey) {
              patch(
                node,
                oldVKid.node,
                oldVKid,
                newVKids[newHead],
                listener,
                isSvg
              )
              newKeyed[newKey] = true
              oldHead++
            } else {
              if ((tmpVKid = keyed[newKey]) != null) {
                patch(
                  node,
                  node.insertBefore(tmpVKid.node, oldVKid && oldVKid.node),
                  tmpVKid,
                  newVKids[newHead],
                  listener,
                  isSvg
                )
                newKeyed[newKey] = true
              } else {
                patch(
                  node,
                  oldVKid && oldVKid.node,
                  null,
                  newVKids[newHead],
                  listener,
                  isSvg
                )
              }
            }
            newHead++
          }
        }

        while (oldHead <= oldTail) {
          if (getKey((oldVKid = oldVKids[oldHead++])) == null) {
            node.removeChild(oldVKid.node)
          }
        }

        for (var i in keyed) {
          if (newKeyed[i] == null) {
            node.removeChild(keyed[i].node)
          }
        }
      }
    }

    return (newVNode.node = node)
  }

  const propsChanged = function(a, b) {
    for (var k in a) if (a[k] !== b[k]) return true
    for (var k in b) if (a[k] !== b[k]) return true
  }

  const getVNode = function(newVNode, oldVNode) {
    return newVNode.type === LAZY_NODE
      ? ((!oldVNode || propsChanged(oldVNode.lazy, newVNode.lazy)) &&
          ((oldVNode = newVNode.lazy.view(newVNode.lazy)).lazy = newVNode.lazy),
        oldVNode)
      : newVNode
  }

  const createVNode = function(name, props, children, node, key, type) {
    return {
      name: name,
      props: props,
      children: children,
      node: node,
      type: type,
      key: key
    }
  }

  const createTextVNode = (value, node) =>
      createVNode(value, EMPTY_OBJ, EMPTY_ARR, node, null, TEXT_NODE);

  const recycleNode = node =>
    node.nodeType === TEXT_NODE
      ? createTextVNode(node.nodeValue, node)
      : createVNode(
          node.nodeName.toLowerCase(),
          EMPTY_OBJ,
          map.call(node.childNodes, recycleNode),
          node,
          null,
          RECYCLED_NODE
        )

  const appAux = disp => props => () => {
    const {view, events, effects, init} = props
    let state = {};
    let lock = false
    let node = document.getElementById(props.node);
    let vdom = node && recycleNode(node);

    const listener = function(event) {
      dispatch(event, this.actions[event.type]);
    }
 
    const setState = newState => {
      if (state !== newState) {
        state = newState;
        if (!lock) defer(render, (lock = true))
      }
      return state
    }

    const dispatch = (event, action) => disp(() => state)(fn => () => setState(fn(state)))(effects(event))(action)();

    const rawEvent = (name, action) => {
       const listener = event => dispatch(event, action);
       addEventListener (name, listener);
     }


    const render = () => {
      lock = false
      node = patch(
        node.parentNode,
        node,
        vdom,
        vdom = view(state),
        listener
      )
    }
    setState(props.state);
    for (let i = 0; i < events.length; i++) {
       rawEvent(events[i].value0, events[i].value1);
    }
    dispatch(undefined, init);
  }

  const h = isStyle => name => ps => children => {
      const style = {};
      const props = {style};
      const vdom = { name, children: children.filter(x => x), props, node: null };
      const n = ps.length;
      for (let i = 0; i < n; i++) {
          const obj = ps[i];
          const value0 = obj.value0;
          const value1 = obj.value1;
          if (value1 === undefined)
              vdom.key = value0;
          else if (typeof value1 === 'object')
              vdom.props["on"+value0] = value1;
          else if (typeof value1 === 'boolean') {
              if(!value1)
                  {}
              else if (props.class)  
                  props.class += ' ' + value0;
              else
                  props.class = value0;
          }
          else if (isStyle(obj))
              style[value0] = value1;
          else
              props[value0] = value1;
      }
      return vdom;
  }

  exports.emptyNode = null;
  exports.appAux = appAux;
  exports.hAux = h;
  exports.text = createTextVNode;
})(PS["Pha"] = PS["Pha"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Pha"] = $PS["Pha"] || {};
  var exports = $PS["Pha"];
  var $foreign = $PS["Pha"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor_Variant = $PS["Data.Functor.Variant"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Run = $PS["Run"];                
  var Key = (function () {
      function Key(value0) {
          this.value0 = value0;
      };
      Key.create = function (value0) {
          return new Key(value0);
      };
      return Key;
  })();
  var Attr = (function () {
      function Attr(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Attr.create = function (value0) {
          return function (value1) {
              return new Attr(value0, value1);
          };
      };
      return Attr;
  })();
  var Class = (function () {
      function Class(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Class.create = function (value0) {
          return function (value1) {
              return new Class(value0, value1);
          };
      };
      return Class;
  })();
  var Style = (function () {
      function Style(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Style.create = function (value0) {
          return function (value1) {
              return new Style(value0, value1);
          };
      };
      return Style;
  })();
  var Event = (function () {
      function Event(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Event.create = function (value0) {
          return function (value1) {
              return new Event(value0, value1);
          };
      };
      return Event;
  })();
  var maybeN = Data_Maybe.fromMaybe($foreign.emptyNode);
  var isStyle = function (v) {
      if (v instanceof Style) {
          return true;
      };
      return false;
  };
  var ifN = function (cond) {
      return function (vdom) {
          if (cond) {
              return vdom(Data_Unit.unit);
          };
          return $foreign.emptyNode;
      };
  };
  var h = $foreign.hAux(isStyle);
  var dispatch = function (getS) {
      return function (setS) {
          return function (matching) {
              var go = Data_Functor_Variant.onMatch()()()({
                  getState: function (v) {
                      return Control_Bind.bind(Effect.bindEffect)(getS)(v.value0);
                  },
                  setState: function (v) {
                      return Control_Apply.applySecond(Effect.applyEffect)(setS(v.value0))(v.value1);
                  }
              })(matching);
              return Run.runCont(go)(function (v) {
                  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
              });
          };
      };
  };
  var app = $foreign.appAux(dispatch);
  exports["Key"] = Key;
  exports["Attr"] = Attr;
  exports["Class"] = Class;
  exports["Style"] = Style;
  exports["Event"] = Event;
  exports["h"] = h;
  exports["ifN"] = ifN;
  exports["maybeN"] = maybeN;
  exports["app"] = app;
  exports["text"] = $foreign.text;
  exports["emptyNode"] = $foreign.emptyNode;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Pha.Html"] = $PS["Pha.Html"] || {};
  var exports = $PS["Pha.Html"];
  var Control_Category = $PS["Control.Category"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Pha = $PS["Pha"];                
  var Px = function (x1) {
      return x1;
  };
  var Percent = function (x1) {
      return x1;
  };
  var EUnit = function (toStr) {
      this.toStr = toStr;
  };
  var unittoStr = new EUnit(Control_Category.identity(Control_Category.categoryFn));
  var unitPx2 = new EUnit(function (v) {
      return Data_Show.show(Data_Show.showInt)(v) + "px";
  });
  var unitPx = new EUnit(function (v) {
      return Data_Show.show(Data_Show.showNumber)(v) + "px";
  });
  var unitPc = new EUnit(function (v) {
      return Data_Show.show(Data_Show.showNumber)(100.0 * v) + "%";
  });
  var unitNumber = new EUnit(Data_Show.show(Data_Show.showNumber));
  var unitInt = new EUnit(Data_Show.show(Data_Show.showInt));
  var toStr = function (dict) {
      return dict.toStr;
  };
  var translate = function (dictEUnit) {
      return function (dictEUnit1) {
          return function (x1) {
              return function (y1) {
                  return "translate(" + (toStr(dictEUnit)(x1) + ("," + (toStr(dictEUnit1)(y1) + ")")));
              };
          };
      };
  };
  var svg = Pha.h("svg");
  var style = function (dictEUnit) {
      return function (n) {
          return function (x1) {
              return new Pha.Style(n, toStr(dictEUnit)(x1));
          };
      };
  };
  var span = Pha.h("span");
  var rgbColor = function (r) {
      return function (g$prime) {
          return function (b) {
              return "rgb(" + (Data_Show.show(Data_Show.showInt)(r) + ("," + (Data_Show.show(Data_Show.showInt)(g$prime) + ("," + (Data_Show.show(Data_Show.showInt)(b) + ")")))));
          };
      };
  };
  var px = Px;
  var pointerup = Pha.Event.create("pointerup");
  var pointermove = Pha.Event.create("pointermove");
  var pointerleave = Pha.Event.create("pointerleave");
  var pointerenter = Pha.Event.create("pointerenter");
  var pointerdown = Pha.Event.create("pointerdown");
  var pc = Percent;
  var p = Pha.h("p");                       
  var key = Pha.Key.create;
  var h2 = function (props) {
      return function (str) {
          return Pha.h("h2")(props)([ Pha.text(str) ]);
      };
  };
  var h1 = function (props) {
      return function (str) {
          return Pha.h("h1")(props)([ Pha.text(str) ]);
      };
  };
  var g = Pha.h("g");
  var div$prime = Pha.h("div");
  var contextmenu = Pha.Event.create("contextmenu");
  var click = Pha.Event.create("click");
  var class$prime = Pha.Class.create;
  var button = Pha.h("button");
  var br = Pha.h("br")([  ])([  ]);
  var attr = function (dictEUnit) {
      return function (n) {
          return function (x1) {
              return new Pha.Attr(n, toStr(dictEUnit)(x1));
          };
      };
  };
  var circle = function (cx) {
      return function (cy) {
          return function (r) {
              return function (props) {
                  return Pha.h("circle")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ attr(unittoStr)("cx")(Data_Show.show(Data_Show.showNumber)(cx)), attr(unittoStr)("cy")(Data_Show.show(Data_Show.showNumber)(cy)), attr(unittoStr)("r")(Data_Show.show(Data_Show.showNumber)(r)) ])(props))([  ]);
              };
          };
      };
  };
  var disabled = function (b) {
      return attr(unittoStr)("disabled")((function () {
          if (b) {
              return "true";
          };
          return "";
      })());
  };
  var fill = attr(unittoStr)("fill");
  var height = function (dictEUnit) {
      return attr(dictEUnit)("height");
  };
  var href = attr(unittoStr)("href");
  var line = function (dictEUnit) {
      return function (dictEUnit1) {
          return function (dictEUnit2) {
              return function (dictEUnit3) {
                  return function (x1) {
                      return function (y1) {
                          return function (x2) {
                              return function (y2) {
                                  return function (props) {
                                      return Pha.h("line")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ attr(dictEUnit)("x1")(x1), attr(dictEUnit1)("y1")(y1), attr(dictEUnit2)("x2")(x2), attr(dictEUnit3)("y2")(y2) ])(props))([  ]);
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var opacity = attr(unittoStr)("opacity");
  var path = function (d) {
      return function (props) {
          return Pha.h("path")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ attr(unittoStr)("d")(d) ])(props))([  ]);
      };
  };
  var rect = function (dictEUnit) {
      return function (dictEUnit1) {
          return function (dictEUnit2) {
              return function (dictEUnit3) {
                  return function (x$prime) {
                      return function (y$prime) {
                          return function (w) {
                              return function (h$prime) {
                                  return function (props) {
                                      return Pha.h("rect")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ attr(dictEUnit)("x")(x$prime), attr(dictEUnit1)("y")(y$prime), attr(dictEUnit2)("width")(w), attr(dictEUnit3)("height")(h$prime) ])(props))([  ]);
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var stroke = attr(unittoStr)("stroke");
  var strokeDasharray = attr(unittoStr)("stroke-dasharray");
  var strokeWidth = attr(unittoStr)("stroke-width");
  var text$prime = function (dictEUnit) {
      return function (x1) {
          return function (y1) {
              return function (t) {
                  return function (props) {
                      return Pha.h("text")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ attr(dictEUnit)("x")(x1), attr(dictEUnit)("y")(y1) ])(props))([ Pha.text(t) ]);
                  };
              };
          };
      };
  };
  var transform = attr(unittoStr)("transform");
  var use = function (dictEUnit) {
      return function (dictEUnit1) {
          return function (dictEUnit2) {
              return function (dictEUnit3) {
                  return function (x1) {
                      return function (y1) {
                          return function (w) {
                              return function (h$prime) {
                                  return function (href$prime) {
                                      return function (props) {
                                          return Pha.h("use")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ attr(dictEUnit)("x")(x1), attr(dictEUnit1)("y")(y1), attr(dictEUnit2)("width")(w), attr(dictEUnit3)("height")(h$prime), attr(unittoStr)("href")(href$prime) ])(props))([  ]);
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var viewBox = function (a1) {
      return function (b) {
          return function (c) {
              return function (d) {
                  return attr(unittoStr)("viewBox")(Data_Show.show(Data_Show.showInt)(a1) + (" " + (Data_Show.show(Data_Show.showInt)(b) + (" " + (Data_Show.show(Data_Show.showInt)(c) + (" " + Data_Show.show(Data_Show.showInt)(d)))))));
              };
          };
      };
  };
  var width = function (dictEUnit) {
      return attr(dictEUnit)("width");
  };
  var svguse = function (symbol) {
      return function (props) {
          return svg(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ width(unittoStr)("100%"), height(unittoStr)("100%") ])(props))([ Pha.h("use")([ attr(unittoStr)("href")(symbol) ])([  ]) ]);
      };
  };
  var x = function (dictEUnit) {
      return attr(dictEUnit)("x");
  };
  var y = function (dictEUnit) {
      return attr(dictEUnit)("y");
  };
  var a = Pha.h("a");
  exports["px"] = px;
  exports["pc"] = pc;
  exports["key"] = key;
  exports["attr"] = attr;
  exports["class'"] = class$prime;
  exports["style"] = style;
  exports["click"] = click;
  exports["contextmenu"] = contextmenu;
  exports["pointermove"] = pointermove;
  exports["pointerup"] = pointerup;
  exports["pointerdown"] = pointerdown;
  exports["pointerenter"] = pointerenter;
  exports["pointerleave"] = pointerleave;
  exports["br"] = br;
  exports["button"] = button;
  exports["div'"] = div$prime;
  exports["span"] = span;
  exports["h1"] = h1;
  exports["h2"] = h2;
  exports["p"] = p;
  exports["a"] = a;
  exports["disabled"] = disabled;
  exports["width"] = width;
  exports["height"] = height;
  exports["href"] = href;
  exports["x"] = x;
  exports["y"] = y;
  exports["stroke"] = stroke;
  exports["opacity"] = opacity;
  exports["fill"] = fill;
  exports["viewBox"] = viewBox;
  exports["transform"] = transform;
  exports["strokeWidth"] = strokeWidth;
  exports["strokeDasharray"] = strokeDasharray;
  exports["g"] = g;
  exports["svg"] = svg;
  exports["rect"] = rect;
  exports["path"] = path;
  exports["line"] = line;
  exports["circle"] = circle;
  exports["use"] = use;
  exports["text'"] = text$prime;
  exports["translate"] = translate;
  exports["svguse"] = svguse;
  exports["rgbColor"] = rgbColor;
  exports["unittoStr"] = unittoStr;
  exports["unitInt"] = unitInt;
  exports["unitNumber"] = unitNumber;
  exports["unitPx"] = unitPx;
  exports["unitPx2"] = unitPx2;
  exports["unitPc"] = unitPc;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["UI.Icon"] = $PS["UI.Icon"] || {};
  var exports = $PS["UI.Icon"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Pha = $PS["Pha"];
  var Pha_Html = $PS["Pha.Html"];                
  var IconText = (function () {
      function IconText(value0) {
          this.value0 = value0;
      };
      IconText.create = function (value0) {
          return new IconText(value0);
      };
      return IconText;
  })();
  var IconSymbol = (function () {
      function IconSymbol(value0) {
          this.value0 = value0;
      };
      IconSymbol.create = function (value0) {
          return new IconSymbol(value0);
      };
      return IconSymbol;
  })();
  var IconNone = (function () {
      function IconNone() {

      };
      IconNone.value = new IconNone();
      return IconNone;
  })();
  var defaultOptions = {
      icon: IconNone.value,
      selected: false,
      tooltip: Data_Maybe.Nothing.value,
      round: false,
      large: false,
      hidden: false,
      disabled: false,
      style: [  ]
  };
  var iconbutton = function (optionFn) {
      return function (props) {
          var v = optionFn(defaultOptions);
          return Pha_Html.button(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html["class'"]("ui-icon")(true), Pha_Html["class'"]("selected")(v.selected), Pha_Html["class'"]("round")(v.large), Pha_Html["class'"]("hidden")(v.hidden), Pha_Html.disabled(v.disabled) ])(props))([ (function () {
              if (v.icon instanceof IconSymbol) {
                  return Pha_Html.svguse(v.icon.value0)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html["class'"]("ui-icon-symbol")(true) ])(Data_Functor.mapFlipped(Data_Functor.functorArray)(v.style)(Data_Tuple.uncurry(Pha_Html.style(Pha_Html.unittoStr)))));
              };
              if (v.icon instanceof IconText) {
                  return Pha_Html.span([ Pha_Html["class'"]("ui-icon-text")(true) ])([ Pha.text(v.icon.value0) ]);
              };
              if (v.icon instanceof IconNone) {
                  return Pha.emptyNode;
              };
              throw new Error("Failed pattern match at UI.Icon (line 43, column 9 - line 46, column 34): " + [ v.icon.constructor.name ]);
          })(), Pha.maybeN(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(v.tooltip)(function (t) {
              return Pha_Html.span([ Pha_Html["class'"]("ui-icon-tooltip")(true) ])([ Pha.text(t) ]);
          })) ]);
      };
  };
  exports["IconText"] = IconText;
  exports["IconSymbol"] = IconSymbol;
  exports["IconNone"] = IconNone;
  exports["iconbutton"] = iconbutton;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["UI.Icons"] = $PS["UI.Icons"] || {};
  var exports = $PS["UI.Icons"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_List = $PS["Data.List"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Core = $PS["Game.Core"];
  var Pha_Action = $PS["Pha.Action"];
  var Pha_Html = $PS["Pha.Html"];
  var UI_Icon = $PS["UI.Icon"];                
  var icongroup = function (title) {
      return function (children) {
          return Pha_Html["div'"]([  ])([ Pha_Html.h2([  ])(title), Pha_Html["div'"]([ Pha_Html["class'"]("ui-icon-grid")(true) ])(children) ]);
      };
  };
  var iconbutton = function (state) {
      return function (optionFn) {
          return function (props) {
              return UI_Icon.iconbutton(function (opts) {
                  var opts2 = optionFn(opts);
                  return {
                      icon: opts2.icon,
                      selected: opts2.selected,
                      tooltip: opts2.tooltip,
                      round: opts2.round,
                      large: opts2.large,
                      hidden: opts2.hidden,
                      disabled: opts2.disabled || Data_Lens_Getter.viewOn(state)(Game_Core["_locked"](Data_Lens_Internal_Forget.strongForget)),
                      style: opts2.style
                  };
              })(props);
          };
      };
  };
  var icons2Players = function (dictGame) {
      return function (state) {
          return icongroup("Mode de jeu")([ iconbutton(state)(function (v) {
              return {
                  icon: new UI_Icon.IconSymbol("#school"),
                  selected: Data_Eq.eq(Game_Core.eqMode)(Data_Lens_Getter.viewOn(state)(Game_Core["_mode"](Data_Lens_Internal_Forget.strongForget)))(Game_Core.RandomMode.value),
                  tooltip: new Data_Maybe.Just("IA mode facile"),
                  round: v.round,
                  large: v.large,
                  hidden: v.hidden,
                  disabled: v.disabled,
                  style: v.style
              };
          })([ Pha_Html.click(Game_Core.setModeA(dictGame)(Game_Core.RandomMode.value)) ]), iconbutton(state)(function (v) {
              return {
                  icon: new UI_Icon.IconSymbol("#enstein"),
                  selected: Data_Eq.eq(Game_Core.eqMode)(Data_Lens_Getter.viewOn(state)(Game_Core["_mode"](Data_Lens_Internal_Forget.strongForget)))(Game_Core.ExpertMode.value),
                  tooltip: new Data_Maybe.Just("IA mode expert"),
                  round: v.round,
                  large: v.large,
                  hidden: v.hidden,
                  disabled: v.disabled,
                  style: v.style
              };
          })([ Pha_Html.click(Game_Core.setModeA(dictGame)(Game_Core.ExpertMode.value)) ]), iconbutton(state)(function (v) {
              return {
                  icon: new UI_Icon.IconSymbol("#duel"),
                  selected: Data_Eq.eq(Game_Core.eqMode)(Data_Lens_Getter.viewOn(state)(Game_Core["_mode"](Data_Lens_Internal_Forget.strongForget)))(Game_Core.DuelMode.value),
                  tooltip: new Data_Maybe.Just("Affronte un autre joueur"),
                  round: v.round,
                  large: v.large,
                  hidden: v.hidden,
                  disabled: v.disabled,
                  style: v.style
              };
          })([ Pha_Html.click(Game_Core.setModeA(dictGame)(Game_Core.DuelMode.value)) ]), iconbutton(state)(function (v) {
              return {
                  icon: new UI_Icon.IconText("2P\u21e8"),
                  selected: v.selected,
                  tooltip: new Data_Maybe.Just("L'IA commence"),
                  round: v.round,
                  large: v.large,
                  hidden: v.hidden,
                  disabled: !Data_List["null"](Data_Lens_Getter.viewOn(state)(Game_Core["_history"](Data_Lens_Internal_Forget.strongForget))) || Data_Eq.eq(Game_Core.eqMode)(Data_Lens_Getter.viewOn(state)(Game_Core["_mode"](Data_Lens_Internal_Forget.strongForget)))(Game_Core.DuelMode.value),
                  style: v.style
              };
          })([ Pha_Html.click(Game_Core.computerStartsA(dictGame)) ]) ]);
      };
  };
  var ihelp = function (state) {
      return iconbutton(state)(function (v) {
          return {
              icon: new UI_Icon.IconSymbol("#help"),
              selected: Data_Lens_Getter.viewOn(state)(Game_Core["_help"](Data_Lens_Internal_Forget.strongForget)),
              tooltip: new Data_Maybe.Just("Aide"),
              round: v.round,
              large: v.large,
              hidden: v.hidden,
              disabled: v.disabled,
              style: v.style
          };
      })([ Pha_Html.click(Game_Core.toggleHelpA) ]);
  };
  var iredo = function (state) {
      return iconbutton(state)(function (v) {
          return {
              icon: new UI_Icon.IconSymbol("#undo"),
              selected: v.selected,
              tooltip: new Data_Maybe.Just("Rejoue le coup annul\xe9"),
              round: v.round,
              large: v.large,
              hidden: v.hidden,
              disabled: Data_List["null"](Data_Lens_Getter.viewOn(state)(Game_Core["_redoHistory"](Data_Lens_Internal_Forget.strongForget))),
              style: [ new Data_Tuple.Tuple("transform", "scaleX(-1)") ]
          };
      })([ Pha_Html.click(Game_Core.redoA) ]);
  };
  var ireset = function (state) {
      return iconbutton(state)(function (v) {
          return {
              icon: new UI_Icon.IconSymbol("#reset"),
              selected: v.selected,
              tooltip: new Data_Maybe.Just("Recommence la partie"),
              round: v.round,
              large: v.large,
              hidden: v.hidden,
              disabled: Data_List["null"](Data_Lens_Getter.viewOn(state)(Game_Core["_history"](Data_Lens_Internal_Forget.strongForget))),
              style: v.style
          };
      })([ Pha_Html.click(Game_Core.resetA) ]);
  };
  var irules = function (state) {
      var selected = (function () {
          var v = Data_Lens_Getter.viewOn(state)(Game_Core["_dialog"](Data_Lens_Internal_Forget.strongForget));
          if (v instanceof Game_Core.Rules) {
              return true;
          };
          return false;
      })();
      return iconbutton(state)(function (v) {
          return {
              icon: new UI_Icon.IconSymbol("#rules"),
              selected: selected,
              tooltip: new Data_Maybe.Just("R\xe8gles"),
              round: v.round,
              large: v.large,
              hidden: v.hidden,
              disabled: v.disabled,
              style: v.style
          };
      })([ Pha_Html.click(Pha_Action.setState(Data_Lens_Setter.set(Game_Core["_dialog"](Data_Profunctor_Strong.strongFn))(Game_Core.Rules.value))) ]);
  };
  var iundo = function (state) {
      return iconbutton(state)(function (v) {
          return {
              icon: new UI_Icon.IconSymbol("#undo"),
              selected: v.selected,
              tooltip: new Data_Maybe.Just("Annule le dernier coup effectu\xe9"),
              round: v.round,
              large: v.large,
              hidden: v.hidden,
              disabled: Data_List["null"](Data_Lens_Getter.viewOn(state)(Game_Core["_history"](Data_Lens_Internal_Forget.strongForget))),
              style: v.style
          };
      })([ Pha_Html.click(Game_Core.undoA) ]);
  };
  var iconSizesGroup = function (dictGame) {
      return function (state) {
          return function (sizeList) {
              return function (customSize) {
                  var csize = Data_Lens_Getter.viewOn(state)(Game_Core["_customSize"](Data_Lens_Internal_Forget.strongForget));
                  var crows = Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget));
                  var ccols = Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget));
                  return icongroup("Dimensions de la grille")(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.mapFlipped(Data_Functor.functorArray)(sizeList)(function (v) {
                      return iconbutton(state)(function (v1) {
                          return {
                              icon: UI_Icon.IconText.create(Data_Show.show(Data_Show.showInt)(v.value0) + ("x" + Data_Show.show(Data_Show.showInt)(v.value1))),
                              selected: v.value0 === crows && (v.value1 === ccols && !csize),
                              tooltip: v1.tooltip,
                              round: v1.round,
                              large: v1.large,
                              hidden: v1.hidden,
                              disabled: v1.disabled,
                              style: v1.style
                          };
                      })([ Pha_Html.click(Game_Core.setGridSizeA(dictGame)(v.value0)(v.value1)(false)) ]);
                  }))((function () {
                      if (customSize) {
                          return [ iconbutton(state)(function (v) {
                              return {
                                  icon: new UI_Icon.IconText("NxM"),
                                  selected: csize,
                                  tooltip: new Data_Maybe.Just("Taille personnalis\xe9e"),
                                  round: v.round,
                                  large: v.large,
                                  hidden: v.hidden,
                                  disabled: v.disabled,
                                  style: v.style
                              };
                          })([ Pha_Html.click(Pha_Action.setState(Data_Lens_Setter.set(Game_Core["_customSize"](Data_Profunctor_Strong.strongFn))(true))) ]) ];
                      };
                      return [  ];
                  })()));
              };
          };
      };
  };
  var iconSelectGroupM = function (dictShow) {
      return function (dictEq) {
          return function (dictFoldable) {
              return function (state) {
                  return function (title) {
                      return function (values) {
                          return function (selected) {
                              return function (action) {
                                  return function (optionFn) {
                                      return icongroup(title)(Data_Functor.mapFlipped(Data_Functor.functorArray)(values)(function (val) {
                                          return iconbutton(state)((function () {
                                              var $30 = optionFn(val);
                                              return function ($31) {
                                                  return $30((function (v) {
                                                      return {
                                                          icon: UI_Icon.IconText.create(Data_Show.show(dictShow)(val)),
                                                          selected: Data_Foldable.elem(dictFoldable)(dictEq)(val)(selected),
                                                          tooltip: v.tooltip,
                                                          round: v.round,
                                                          large: v.large,
                                                          hidden: v.hidden,
                                                          disabled: v.disabled,
                                                          style: v.style
                                                      };
                                                  })($31));
                                              };
                                          })())([ Pha_Html.click(action(val)) ]);
                                      }));
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var iconSelectGroup = function (dictShow) {
      return function (dictEq) {
          return function (state) {
              return function (title) {
                  return function (values) {
                      return function (selected) {
                          return function (action) {
                              return function (optionFn) {
                                  return icongroup(title)(Data_Functor.mapFlipped(Data_Functor.functorArray)(values)(function (val) {
                                      return iconbutton(state)((function () {
                                          var $32 = optionFn(val);
                                          return function ($33) {
                                              return $32((function (v) {
                                                  return {
                                                      icon: UI_Icon.IconText.create(Data_Show.show(dictShow)(val)),
                                                      selected: Data_Eq.eq(dictEq)(val)(selected),
                                                      tooltip: v.tooltip,
                                                      round: v.round,
                                                      large: v.large,
                                                      hidden: v.hidden,
                                                      disabled: v.disabled,
                                                      style: v.style
                                                  };
                                              })($33));
                                          };
                                      })())([ Pha_Html.click(action(val)) ]);
                                  }));
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var iconBestScore = function (dictScoreGame) {
      return function (state) {
          return icongroup("Meilleur score (" + (Data_Maybe.maybe("\u2205")((function () {
              var $34 = Data_Show.show(Data_Show.showInt);
              return function ($35) {
                  return $34(Data_Tuple.fst($35));
              };
          })())(Game_Core.bestScore(dictScoreGame)(state)) + ")"))([ iconbutton(state)(function (v) {
              return {
                  icon: new UI_Icon.IconSymbol("#cup"),
                  selected: v.selected,
                  tooltip: new Data_Maybe.Just("Meilleur score"),
                  round: v.round,
                  large: v.large,
                  hidden: v.hidden,
                  disabled: Data_Maybe.isNothing(Game_Core.bestScore(dictScoreGame)(state)),
                  style: v.style
              };
          })([ Pha_Html.click(Pha_Action.setState(Data_Lens_Setter.set(Game_Core["_dialog"](Data_Profunctor_Strong.strongFn))(Game_Core.ScoreDialog.value))) ]) ]);
      };
  };
  exports["iconbutton"] = iconbutton;
  exports["icongroup"] = icongroup;
  exports["iundo"] = iundo;
  exports["iredo"] = iredo;
  exports["ireset"] = ireset;
  exports["ihelp"] = ihelp;
  exports["irules"] = irules;
  exports["iconSelectGroup"] = iconSelectGroup;
  exports["iconSelectGroupM"] = iconSelectGroupM;
  exports["iconSizesGroup"] = iconSizesGroup;
  exports["icons2Players"] = icons2Players;
  exports["iconBestScore"] = iconBestScore;
})(PS);
(function(exports) {
  exports.getLoc = () => Object.assign({}, window.location);
  exports.setTimeout = ms => fn => () => setTimeout (fn, ms);

  exports.relativePointerPositionAux = nothing => just => e => () => {
      const rect = e.currentTarget.getBoundingClientRect();
      if (!rect) return nothing;
      return e.clientX >= rect.left && e.clientX < rect.left + rect.width && e.clientY >= rect.top && e.clientY < rect.top + rect.height ?
      just ({
          x: (e.clientX - rect.left) / rect.width,
          y: (e.clientY - rect.top) / rect.height
      }) : nothing;
  };

  exports.releasePointerCaptureAux = ev => () => ev && ev.target && ev.pointerId != null &&
                          ev.target.releasePointerCapture && ev.target.releasePointerCapture(ev.pointerId);
})(PS["Game.Effs"] = PS["Game.Effs"] || {});
(function(exports) {
  exports.shiftKey = e => !!e.shiftKey;
  exports.unsafeToMaybeAux = nothing => just => x => x === null || x === undefined ? nothing :  just(x);
  exports.unsafeKey = e => e && e.key;
  exports.preventDefault = e => () => e && e.preventDefault && e.preventDefault();
})(PS["Pha.Event"] = PS["Pha.Event"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Pha.Event"] = $PS["Pha.Event"] || {};
  var exports = $PS["Pha.Event"];
  var $foreign = $PS["Pha.Event"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var unsafeToMaybe = $foreign.unsafeToMaybeAux(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var key = function ($0) {
      return unsafeToMaybe($foreign.unsafeKey($0));
  };
  exports["key"] = key;
  exports["shiftKey"] = $foreign.shiftKey;
  exports["preventDefault"] = $foreign.preventDefault;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Effs"] = $PS["Game.Effs"] || {};
  var exports = $PS["Game.Effs"];
  var $foreign = $PS["Game.Effs"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Functor_Variant = $PS["Data.Functor.Variant"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Lib_Random = $PS["Lib.Random"];
  var Pha_Event = $PS["Pha.Event"];
  var Run = $PS["Run"];                
  var GetPointer = (function () {
      function GetPointer(value0) {
          this.value0 = value0;
      };
      GetPointer.create = function (value0) {
          return new GetPointer(value0);
      };
      return GetPointer;
  })();
  var GetLocation = (function () {
      function GetLocation(value0) {
          this.value0 = value0;
      };
      GetLocation.create = function (value0) {
          return new GetLocation(value0);
      };
      return GetLocation;
  })();
  var PreventDefault = (function () {
      function PreventDefault() {

      };
      PreventDefault.value = new PreventDefault();
      return PreventDefault;
  })();
  var ReleasePointerCapture = (function () {
      function ReleasePointerCapture() {

      };
      ReleasePointerCapture.value = new ReleasePointerCapture();
      return ReleasePointerCapture;
  })();
  var EventEff = (function () {
      function EventEff(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      EventEff.create = function (value0) {
          return function (value1) {
              return new EventEff(value0, value1);
          };
      };
      return EventEff;
  })();
  var relativePointerPosition = $foreign.relativePointerPositionAux(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var interpretEffects = function (ev) {
      return Data_Functor_Variant.match()()()({
          delay: function (v) {
              return $foreign.setTimeout(v.value0)(v.value1);
          },
          rng: function (v) {
              return Control_Bind.bind(Effect.bindEffect)(Lib_Random.genSeed)(v.value0);
          },
          event: function (v) {
              return v.value0(ev);
          },
          location: function (v) {
              return Control_Bind.bind(Effect.bindEffect)($foreign.getLoc)(v.value0);
          },
          pointer: function (v) {
              return Control_Bind.bind(Effect.bindEffect)(relativePointerPosition(ev))(v.value0);
          },
          eventEff: function (v) {
              if (v.value0 instanceof PreventDefault) {
                  return Control_Apply.applySecond(Effect.applyEffect)(Pha_Event.preventDefault(ev))(v.value1);
              };
              if (v.value0 instanceof ReleasePointerCapture) {
                  return Control_Apply.applySecond(Effect.applyEffect)($foreign.releasePointerCaptureAux(ev))(v.value1);
              };
              throw new Error("Failed pattern match at Game.Effs (line 70, column 39 - line 72, column 69): " + [ v.value0.constructor.name ]);
          }
      });
  };
  var functorPointer = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new GetPointer(Data_Functor.map(Data_Functor.functorFn)(f)(m.value0));
      };
  });
  var getPointerPosition = Run.lift()(new Data_Symbol.IsSymbol(function () {
      return "pointer";
  }))(functorPointer)(Data_Symbol.SProxy.value)(new GetPointer(Control_Category.identity(Control_Category.categoryFn)));
  var functorLoc = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new GetLocation(Data_Functor.map(Data_Functor.functorFn)(f)(m.value0));
      };
  });
  var getLocation = Run.lift()(new Data_Symbol.IsSymbol(function () {
      return "location";
  }))(functorLoc)(Data_Symbol.SProxy.value)(new GetLocation(Control_Category.identity(Control_Category.categoryFn)));
  var functorEvEff = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new EventEff(m.value0, f(m.value1));
      };
  });
  var eventEff = function (e) {
      return Run.lift()(new Data_Symbol.IsSymbol(function () {
          return "eventEff";
      }))(functorEvEff)(Data_Symbol.SProxy.value)(new EventEff(e, Data_Unit.unit));
  };
  var preventDefault = eventEff(PreventDefault.value);
  var releasePointerCapture = eventEff(ReleasePointerCapture.value);
  exports["getLocation"] = getLocation;
  exports["getPointerPosition"] = getPointerPosition;
  exports["preventDefault"] = preventDefault;
  exports["releasePointerCapture"] = releasePointerCapture;
  exports["interpretEffects"] = interpretEffects;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["UI.Dialog"] = $PS["UI.Dialog"] || {};
  var exports = $PS["UI.Dialog"];
  var Data_Array = $PS["Data.Array"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Pha = $PS["Pha"];
  var Pha_Html = $PS["Pha.Html"];                
  var dialog = function (v) {
      return function (children) {
          return Pha_Html["div'"]([ Pha_Html["class'"]("ui-absolute ui-flex-center ui-dialog-container")(true) ])([ Pha_Html["div'"]([ Pha_Html["class'"]("ui-dialog")(true) ])([ Pha_Html["div'"]([ Pha_Html["class'"]("ui-dialog-head")(true) ])([ Pha_Html["div'"]([ Pha_Html["class'"]("ui-dialog-title")(true) ])([ Pha.text(v.title) ]) ]), Pha_Html["div'"]([ Pha_Html["class'"]("ui-dialog-body")(true) ])(children), Pha_Html["div'"]([ Pha_Html["class'"]("ui-dialog-buttons")(true) ])(Data_Array.catMaybes([ Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(v.onCancel)(function (action) {
              return Pha_Html.button([ Pha_Html["class'"]("ui-button ui-button-primary")(true), Pha_Html.click(action) ])([ Pha.text("Annuler") ]);
          }), Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(v.onOk)(function (action) {
              return Pha_Html.button([ Pha_Html["class'"]("ui-button ui-button-primary")(true), Pha_Html.click(action) ])([ Pha.text("Ok") ]);
          }) ])) ]) ]);
      };
  };
  exports["dialog"] = dialog;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["UI.IncDecGrid"] = $PS["UI.IncDecGrid"] || {};
  var exports = $PS["UI.IncDecGrid"];
  var Data_Show = $PS["Data.Show"];
  var Pha = $PS["Pha"];
  var Pha_Html = $PS["Pha.Html"];
  var UI_Icon = $PS["UI.Icon"];                
  var incDecGrid = function (v) {
      return function (children) {
          return Pha_Html["div'"]([ Pha_Html["class'"]("ui-incdecgrid")(true) ])([ Pha_Html["div'"]([ Pha_Html["class'"]("flex")(true) ])([ Pha_Html["div'"]([ Pha_Html["class'"]("ui-flex-center ui-incdecgrid-container")(true) ])(children), Pha.ifN(v.showRowButtons)(function (v1) {
              return Pha_Html["div'"]([ Pha_Html["class'"]("ui-flex-center ui-incdecgrid-rows")(true) ])([ UI_Icon.iconbutton(function (v2) {
                  return {
                      icon: new UI_Icon.IconSymbol("#plus"),
                      selected: v2.selected,
                      tooltip: v2.tooltip,
                      round: true,
                      large: v2.large,
                      hidden: !v.customSize,
                      disabled: v.locked,
                      style: v2.style
                  };
              })([ Pha_Html.click(v.onResize(v.nbRows + 1 | 0)(v.nbColumns)) ]), Pha_Html["div'"]([ Pha_Html["class'"]("ui-incdecgrid-text")(true) ])([ Pha_Html.span([  ])([ Pha.text(Data_Show.show(Data_Show.showInt)(v.nbRows)) ]) ]), UI_Icon.iconbutton(function (v2) {
                  return {
                      icon: new UI_Icon.IconSymbol("#minus"),
                      selected: v2.selected,
                      tooltip: v2.tooltip,
                      round: true,
                      large: v2.large,
                      hidden: !v.customSize,
                      disabled: v.locked,
                      style: v2.style
                  };
              })([ Pha_Html.click(v.onResize(v.nbRows - 1 | 0)(v.nbColumns)) ]) ]);
          }) ]), Pha.ifN(v.showColButtons)(function (v1) {
              return Pha_Html["div'"]([ Pha_Html["class'"]("ui-flex-center ui-incdecgrid-cols")(true) ])([ UI_Icon.iconbutton(function (v2) {
                  return {
                      icon: new UI_Icon.IconSymbol("#minus"),
                      selected: v2.selected,
                      tooltip: v2.tooltip,
                      round: true,
                      large: v2.large,
                      hidden: !v.customSize,
                      disabled: v.locked,
                      style: v2.style
                  };
              })([ Pha_Html.click(v.onResize(v.nbRows)(v.nbColumns - 1 | 0)) ]), Pha_Html["div'"]([ Pha_Html["class'"]("ui-incdecgrid-text")(true) ])([ Pha_Html.span([  ])([ Pha.text(Data_Show.show(Data_Show.showInt)(v.nbColumns)) ]) ]), UI_Icon.iconbutton(function (v2) {
                  return {
                      icon: new UI_Icon.IconSymbol("#plus"),
                      selected: v2.selected,
                      tooltip: v2.tooltip,
                      round: true,
                      large: v2.large,
                      hidden: !v.customSize,
                      disabled: v.locked,
                      style: v2.style
                  };
              })([ Pha_Html.click(v.onResize(v.nbRows)(v.nbColumns + 1 | 0)) ]) ]);
          }) ]);
      };
  };
  exports["incDecGrid"] = incDecGrid;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["UI.Template"] = $PS["UI.Template"] || {};
  var exports = $PS["UI.Template"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Game_Core = $PS["Game.Core"];
  var Game_Effs = $PS["Game.Effs"];
  var Pha = $PS["Pha"];
  var Pha_Action = $PS["Pha.Action"];
  var Pha_Html = $PS["Pha.Html"];
  var Run = $PS["Run"];
  var UI_Dialog = $PS["UI.Dialog"];
  var UI_IncDecGrid = $PS["UI.IncDecGrid"];                
  var winTitleFor2Players = function (state) {
      var $16 = Data_Eq.eq(Game_Core.eqMode)(Data_Lens_Getter.viewOn(state)(Game_Core["_mode"](Data_Lens_Internal_Forget.strongForget)))(Game_Core.DuelMode.value);
      if ($16) {
          return "Le " + ((function () {
              var $17 = Data_Eq.eq(Game_Core.eqTurn)(Data_Lens_Getter.viewOn(state)(Game_Core["_turn"](Data_Lens_Internal_Forget.strongForget)))(Game_Core.Turn2.value);
              if ($17) {
                  return "premier";
              };
              return "second";
          })() + " joueur gagne");
      };
      var $18 = Data_Eq.eq(Game_Core.eqTurn)(Data_Lens_Getter.viewOn(state)(Game_Core["_turn"](Data_Lens_Internal_Forget.strongForget)))(Game_Core.Turn2.value);
      if ($18) {
          return "Tu as gagn\xe9";
      };
      return "L'IA gagne";
  };
  var winPanel = function (title) {
      return function (visible) {
          return Pha_Html["div'"]([ Pha_Html["class'"]("ui-flex-center ui-absolute component-win-container")(true) ])([ Pha_Html["div'"]([ Pha_Html["class'"]("component-win")(true), Pha_Html["class'"]("visible")(visible) ])([ Pha.text(title) ]) ]);
      };
  };
  var turnMessage = function (dictGame) {
      return function (state) {
          var $19 = Game_Core.isLevelFinished(dictGame)(state);
          if ($19) {
              return "Partie finie";
          };
          var $20 = Data_Eq.eq(Game_Core.eqTurn)(Data_Lens_Getter.viewOn(state)(Game_Core["_turn"](Data_Lens_Internal_Forget.strongForget)))(Game_Core.Turn1.value);
          if ($20) {
              return "Tour du premier joueur";
          };
          var $21 = Data_Eq.eq(Game_Core.eqMode)(Data_Lens_Getter.viewOn(state)(Game_Core["_mode"](Data_Lens_Internal_Forget.strongForget)))(Game_Core.DuelMode.value);
          if ($21) {
              return "Tour du second joueur";
          };
          return "Tour de l'IA";
      };
  };
  var svgCursorStyle = function (v) {
      return [ Pha_Html.style(Pha_Html.unittoStr)("transform")(Pha_Html.translate(Pha_Html.unitPc)(Pha_Html.unitPc)(Pha_Html.pc(v.x))(Pha_Html.pc(v.y))) ];
  };
  var setPointerPositionA = function (a) {
      return Pha_Action.setState(Data_Lens_Setter.set(Game_Core["_pointer"](Data_Profunctor_Strong.strongFn))(a));
  };
  var trackPointer = (function () {
      var move = Control_Bind.bind(Run.bindRun)(Game_Effs.getPointerPosition)(setPointerPositionA);
      return [ Pha_Html.style(Pha_Html.unittoStr)("touch-action")("none"), Pha_Html.pointermove(move), Pha_Html.pointerleave(Pha_Action.setState(Data_Lens_Setter.set(Game_Core["_pointer"](Data_Profunctor_Strong.strongFn))(Data_Maybe.Nothing.value))), Pha_Html.pointerdown(move) ];
  })();
  var incDecGrid = function (dictGame) {
      return function (state) {
          var v = Game_Core.sizeLimit(dictGame)(state);
          return UI_IncDecGrid.incDecGrid({
              locked: Data_Lens_Getter.viewOn(state)(Game_Core["_locked"](Data_Lens_Internal_Forget.strongForget)),
              nbRows: Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)),
              nbColumns: Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)),
              showRowButtons: v.value0 < v.value2,
              showColButtons: v.value1 < v.value3,
              customSize: Data_Lens_Getter.viewOn(state)(Game_Core["_customSize"](Data_Lens_Internal_Forget.strongForget)),
              onResize: function (x) {
                  return function (y) {
                      return Game_Core.setGridSizeA(dictGame)(x)(y)(true);
                  };
              }
          });
      };
  };
  var gridStyle = function (rows) {
      return function (columns) {
          return function (limit) {
              var m = Data_Int.toNumber(Data_Ord.max(Data_Ord.ordInt)(limit)(Data_Ord.max(Data_Ord.ordInt)(rows)(columns)));
              return [ Pha_Html.style(Pha_Html.unitPc)("height")(Pha_Html.pc(Data_Int.toNumber(rows) / m)), Pha_Html.style(Pha_Html.unitPc)("width")(Pha_Html.pc(Data_Int.toNumber(columns) / m)) ];
          };
      };
  };
  var dndItemProps = function (dictEq) {
      return function (dictGame) {
          return function (dragLens) {
              return function (draggable) {
                  return function (droppable) {
                      return function (id) {
                          return function (state) {
                              var draggedItem = Data_Lens_Getter.viewOn(state)(dragLens(Data_Lens_Internal_Forget.strongForget));
                              var dragged = draggable && Data_Eq.eq(Data_Maybe.eqMaybe(dictEq))(draggedItem)(new Data_Maybe.Just(id));
                              var candrop = droppable && Data_Maybe.maybe(false)(function (x) {
                                  return Game_Core.canPlay(dictGame)(state)({
                                      from: x,
                                      to: id
                                  });
                              })(draggedItem);
                              return [ Pha_Html["class'"]("dragged")(dragged), Pha_Html["class'"]("candrop")(candrop), Pha_Html.pointerdown(Control_Applicative.when(Run.applicativeRun)(draggable)(Control_Apply.applySecond(Run.applyRun)(Game_Effs.releasePointerCapture)(Pha_Action.setState(Data_Lens_Setter.set(dragLens(Data_Profunctor_Strong.strongFn))(new Data_Maybe.Just(id)))))), Pha_Html.pointerup((function () {
                                  if (candrop) {
                                      return Game_Core.dropA(dictEq)(dictGame)(function (dictStrong) {
                                          return dragLens(dictStrong);
                                      })(id);
                                  };
                                  return Pha_Action.setState(Data_Lens_Setter.set(dragLens(Data_Profunctor_Strong.strongFn))(Data_Maybe.Nothing.value));
                              })()) ];
                          };
                      };
                  };
              };
          };
      };
  };
  var dndBoardProps = function (dictEq) {
      return function (dictGame) {
          return function (dragLens) {
              var move = Control_Bind.bind(Run.bindRun)(Game_Effs.getPointerPosition)(setPointerPositionA);
              var leave = Pha_Action.setState((function () {
                  var $46 = Data_Lens_Setter.set(Game_Core["_pointer"](Data_Profunctor_Strong.strongFn))(Data_Maybe.Nothing.value);
                  var $47 = Data_Lens_Setter.set(dragLens(Data_Profunctor_Strong.strongFn))(Data_Maybe.Nothing.value);
                  return function ($48) {
                      return $46($47($48));
                  };
              })());
              return [ Pha_Html.style(Pha_Html.unittoStr)("touch-action")("none"), Pha_Html.pointermove(move), Pha_Html.pointerup(Pha_Action.setState(Data_Lens_Setter.set(dragLens(Data_Profunctor_Strong.strongFn))(Data_Maybe.Nothing.value))), Pha_Html.pointerleave(leave), Pha_Html.pointerdown(move) ];
          };
      };
  };
  var dialog = function (title) {
      return UI_Dialog.dialog({
          title: title,
          onCancel: Data_Maybe.Nothing.value,
          onOk: Data_Maybe.Just.create(Pha_Action.setState(Data_Lens_Setter.set(Game_Core["_dialog"](Data_Profunctor_Strong.strongFn))(Game_Core.NoDialog.value)))
      });
  };
  var defaultElements = {
      board: Pha.emptyNode,
      config: Pha.emptyNode,
      rules: [ Pha.text("blah blah") ],
      winTitle: "GAGN\xc9",
      customDialog: function (v) {
          return Pha.emptyNode;
      },
      scoreDialog: function (v) {
          return Pha.emptyNode;
      }
  };
  var template = function (dictGame) {
      return function (elemFn) {
          return function (state) {
              var v = elemFn(defaultElements);
              var dialog$prime = function (v1) {
                  if (v1 instanceof Game_Core.Rules) {
                      return dialog("R\xe8gles du jeu")(v.rules);
                  };
                  if (v1 instanceof Game_Core.ConfirmNewGame) {
                      return UI_Dialog.dialog({
                          title: "Nouvelle partie",
                          onCancel: Data_Maybe.Just.create(Pha_Action.setState(Data_Lens_Setter.set(Game_Core["_dialog"](Data_Profunctor_Strong.strongFn))(Game_Core.NoDialog.value))),
                          onOk: Data_Maybe.Just.create(Game_Core.confirmNewGameA(v1.value0))
                      })([ Pha.text("Tu es sur le point de cr\xe9er une nouvelle partie. Ta partie en cours sera perdue. Es-tu s\xfbr(e)?") ]);
                  };
                  if (v1 instanceof Game_Core.CustomDialog) {
                      return v.customDialog(Data_Unit.unit);
                  };
                  if (v1 instanceof Game_Core.ScoreDialog) {
                      return v.scoreDialog(Data_Unit.unit);
                  };
                  return Pha.emptyNode;
              };
              return Pha_Html["div'"]([  ])([ Pha_Html["div'"]([ Pha_Html["class'"]("main-container")(true) ])([ Pha_Html["div'"]([  ])([ v.board, winPanel(v.winTitle)(Data_Lens_Getter.viewOn(state)(Game_Core["_showWin"](Data_Lens_Internal_Forget.strongForget))) ]), v.config ]), dialog$prime(Data_Lens_Getter.viewOn(state)(Game_Core["_dialog"](Data_Lens_Internal_Forget.strongForget))) ]);
          };
      };
  };
  var cursorStyle = function (v) {
      return function (rows) {
          return function (columns) {
              return function (size) {
                  return [ Pha_Html.style(Pha_Html.unitPc)("left")(Pha_Html.pc(v.x)), Pha_Html.style(Pha_Html.unitPc)("top")(Pha_Html.pc(v.y)), Pha_Html.style(Pha_Html.unitPc)("width")(Pha_Html.pc(size / Data_Int.toNumber(columns))), Pha_Html.style(Pha_Html.unitPc)("height")(Pha_Html.pc(size / Data_Int.toNumber(rows))) ];
              };
          };
      };
  };
  var card = function (title) {
      return function (children) {
          return Pha_Html["div'"]([ Pha_Html["class'"]("ui-card")(true) ])([ Pha_Html["div'"]([ Pha_Html["class'"]("ui-card-head ui-flex-center")(true) ])([ Pha_Html["div'"]([ Pha_Html["class'"]("ui-card-title")(true) ])([ Pha.text(title) ]) ]), Pha_Html["div'"]([ Pha_Html["class'"]("ui-card-body")(true) ])(children) ]);
      };
  };
  var bestScoreDialog = function (dictScoreGame) {
      return function (state) {
          return function (children) {
              return Pha.maybeN(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Game_Core.bestScore(dictScoreGame)(state))(Data_Tuple.snd))(function (pos) {
                  return dialog("Meilleur score")(children(pos));
              }));
          };
      };
  };
  exports["card"] = card;
  exports["incDecGrid"] = incDecGrid;
  exports["dialog"] = dialog;
  exports["bestScoreDialog"] = bestScoreDialog;
  exports["template"] = template;
  exports["gridStyle"] = gridStyle;
  exports["cursorStyle"] = cursorStyle;
  exports["svgCursorStyle"] = svgCursorStyle;
  exports["trackPointer"] = trackPointer;
  exports["dndBoardProps"] = dndBoardProps;
  exports["dndItemProps"] = dndItemProps;
  exports["turnMessage"] = turnMessage;
  exports["winTitleFor2Players"] = winTitleFor2Players;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Baseball.View"] = $PS["Game.Baseball.View"] || {};
  var exports = $PS["Game.Baseball.View"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Function = $PS["Data.Function"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Show = $PS["Data.Show"];
  var Game_Baseball_Model = $PS["Game.Baseball.Model"];
  var Game_Core = $PS["Game.Core"];
  var Lib_Util = $PS["Lib.Util"];
  var $$Math = $PS["Math"];
  var Pha = $PS["Pha"];
  var Pha_Html = $PS["Pha.Html"];
  var UI_Icons = $PS["UI.Icons"];
  var UI_Template = $PS["UI.Template"];                
  var translatePeg = function (position) {
      return function (nbBases) {
          var mid = Data_Int.toNumber(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(position)(2));
          var x = 0.42 + 0.35 * $$Math.cos((mid * 2.0 * $$Math.pi) / Data_Int.toNumber(nbBases)) + 0.1 * Data_Int.toNumber(Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(position)(2));
          var y = 0.46 + 0.35 * $$Math.sin((mid * 2.0 * $$Math.pi) / Data_Int.toNumber(nbBases));
          return Pha_Html.translate(Pha_Html.unitPc)(Pha_Html.unitPc)(Pha_Html.pc(x))(Pha_Html.pc(y));
      };
  };
  var transformBase = function (i) {
      return function (nbBases) {
          var y = 0.5 + 0.35 * $$Math.sin((Data_Int.toNumber(i) * 2.0 * $$Math.pi) / Data_Int.toNumber(nbBases));
          var x = 0.5 + 0.35 * $$Math.cos((Data_Int.toNumber(i) * 2.0 * $$Math.pi) / Data_Int.toNumber(nbBases));
          return Pha_Html.translate(Pha_Html.unitPc)(Pha_Html.unitPc)(Pha_Html.pc(x))(Pha_Html.pc(y)) + " rotate(45deg)";
      };
  };
  var colors = [ "blue", "red", "green", "magenta", "orange", "black", "cyan", "gray" ];
  var dupColors = Control_Bind.bind(Control_Bind.bindArray)(colors)(function (x) {
      return [ x, x ];
  });
  var view = function (state) {
      var rules = [ Pha.text("blah blah blah blah") ];
      var nbBases = Data_Lens_Getter.viewOn(state)(Game_Baseball_Model["_nbBases"](Data_Lens_Internal_Forget.strongForget));
      var levelFinished = Game_Core.isLevelFinished(Game_Baseball_Model.baseballGame)(state);
      var config = UI_Template.card("Baseball multicolore")([ UI_Icons.iconSelectGroup(Data_Show.showInt)(Data_Eq.eqInt)(state)("Nombres de bases")([ 4, 5, 6, 7, 8 ])(nbBases)(Game_Baseball_Model.setNbBasesA)(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn))), UI_Icons.icongroup("Options")([ UI_Icons.iundo(state), UI_Icons.iredo(state), UI_Icons.ireset(state), UI_Icons.irules(state) ]) ]);
      var board = Pha_Html["div'"]([ Pha_Html["class'"]("ui-board baseball-board")(true) ])([ Pha_Html.svg([ Pha_Html.viewBox(0)(0)(100)(100) ])(Data_Array.concat([ Data_Array.mapWithIndex(function (i) {
          return function (color) {
              return Pha_Html.rect(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(-10.0)(-10.0)(20.0)(20.0)([ Pha_Html.key("b" + Data_Show.show(Data_Show.showInt)(i)), Pha_Html["class'"]("baseball-base")(true), Pha_Html.stroke(color), Pha_Html.style(Pha_Html.unittoStr)("transform")(transformBase(i)(nbBases)) ]);
          };
      })(Data_Array.take(nbBases)(colors)), Lib_Util.map2(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)))(dupColors)(function (peg) {
          return function (pos) {
              return function (color) {
                  return Pha.ifN(peg !== Data_Lens_Getter.viewOn(state)(Game_Baseball_Model["_missingPeg"](Data_Lens_Internal_Forget.strongForget)))(function (v) {
                      return Pha_Html.g([ Pha_Html["class'"]("baseball-player")(true), Pha_Html.style(Pha_Html.unittoStr)("transform")(translatePeg(pos)(nbBases)), Pha_Html.key("p" + Data_Show.show(Data_Show.showInt)(peg)) ])([ Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(0.0)(0.0)(7.0)(7.0)("#meeple")([ Pha_Html.click(Game_Core.playA(Game_Baseball_Model.baseballGame)(peg)), Pha_Html.fill(color), Pha_Html.style(Pha_Html.unittoStr)("animation")((function () {
                          if (levelFinished) {
                              return "baseballHola 4s linear " + (Data_Show.show(Data_Show.showInt)(1000 + Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(2000 * peg | 0)(nbBases) | 0) + "ms infinite");
                          };
                          return "none";
                      })()), Pha_Html.style(Pha_Html.unittoStr)("cursor")((function () {
                          var $3 = Game_Core.canPlay(Game_Baseball_Model.baseballGame)(state)(peg);
                          if ($3) {
                              return "pointer";
                          };
                          return "not-allowed";
                      })()) ]) ]);
                  });
              };
          };
      }) ])) ]);
      return UI_Template.template(Game_Baseball_Model.baseballGame)(function (v) {
          return {
              board: board,
              config: config,
              rules: rules,
              winTitle: v.winTitle,
              customDialog: v.customDialog,
              scoreDialog: v.scoreDialog
          };
      })(state);
  };
  exports["view"] = view;
})(PS);
(function(exports) {
  const mapObj = (map, obj) =>
      Object.entries(obj)
          .map(([k, v]) => [k, k[0] === "o" && k[1] === "n" ? map(v) : v])
          .reduce((o, [k, v]) => ((o[k] = v), o), {})

  const mapVNode = (map, vnode) =>
      vnode.props
          ? Object.assign({}, vnode, {
                props: mapObj(map, vnode.props),
                children: vnode.children.map(child => mapVNode(map, child)),
            })
          : vnode

  exports.viewOverAux = map => vnode => mapVNode(map, vnode);
})(PS["Pha.Lens"] = PS["Pha.Lens"] || {});
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Pha.Lens"] = $PS["Pha.Lens"] || {};
  var exports = $PS["Pha.Lens"];
  var $foreign = $PS["Pha.Lens"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Data_Functor_Variant = $PS["Data.Functor.Variant"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Pha_Action = $PS["Pha.Action"];
  var Run = $PS["Run"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var lensVariant = function (lens) {
      return Data_Functor_Variant.onMatch()()()({
          getState: function (v) {
              return Data_Functor_Variant.inj()(new Data_Symbol.IsSymbol(function () {
                  return "getState";
              }))(Pha_Action.functorGetState)(Data_Symbol.SProxy.value)(new Pha_Action.GetState((function () {
                  var $12 = Data_Lens_Getter.view(lens(Data_Lens_Internal_Forget.strongForget));
                  return function ($13) {
                      return v.value0($12($13));
                  };
              })()));
          },
          setState: function (v) {
              return Data_Functor_Variant.inj()(new Data_Symbol.IsSymbol(function () {
                  return "setState";
              }))(Pha_Action.functorSetState)(Data_Symbol.SProxy.value)(new Pha_Action.SetState(Data_Lens_Setter.over(lens(Data_Profunctor_Strong.strongFn))(v.value0), v.value1));
          }
      })(Unsafe_Coerce.unsafeCoerce);
  };
  var actionOver = function (lens) {
      return function (v) {
          return Run.Run(Control_Monad_Free.hoistFree(lensVariant(function (dictStrong) {
              return lens(dictStrong);
          }))(v));
      };
  };
  var viewOver = function (lens) {
      return $foreign.viewOverAux(actionOver(function (dictStrong) {
          return lens(dictStrong);
      }));
  };
  exports["actionOver"] = actionOver;
  exports["viewOver"] = viewOver;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Baseball"] = $PS["Game.Baseball"] || {};
  var exports = $PS["Game.Baseball"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Unit = $PS["Data.Unit"];
  var Game = $PS["Game"];
  var Game_Baseball_Model = $PS["Game.Baseball.Model"];
  var Game_Baseball_View = $PS["Game.Baseball.View"];
  var Game_Core = $PS["Game.Core"];
  var Pha_Lens = $PS["Pha.Lens"];
  var Run = $PS["Run"];                
  var State = function (x) {
      return x;
  };
  var state = Game_Baseball_Model.istate;
  var _iso = function (dictProfunctor) {
      return Data_Lens_Iso.iso(function (v) {
          return v;
      })(State)(dictProfunctor);
  };
  var cgame = new Game.CGame(Pha_Lens.actionOver(function (dictStrong) {
      return _iso(dictStrong.Profunctor0());
  })(Game_Core.init(Game_Baseball_Model.baseballGame)), function (v) {
      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
  }, function (lens) {
      return function (v) {
          return Pha_Lens.viewOver(function (dictStrong) {
              var $9 = lens(dictStrong);
              var $10 = _iso(dictStrong.Profunctor0());
              return function ($11) {
                  return $9($10($11));
              };
          })(Game_Baseball_View.view(v));
      };
  });
  exports["state"] = state;
  exports["cgame"] = cgame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Chocolat.Model"] = $PS["Game.Chocolat.Model"] || {};
  var exports = $PS["Game.Chocolat.Model"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Core = $PS["Game.Core"];
  var Lib_Random = $PS["Lib.Random"];
  var Lib_Util = $PS["Lib.Util"];
  var Pha_Action = $PS["Pha.Action"];                
  var CornerMode = (function () {
      function CornerMode() {

      };
      CornerMode.value = new CornerMode();
      return CornerMode;
  })();
  var BorderMode = (function () {
      function BorderMode() {

      };
      BorderMode.value = new BorderMode();
      return BorderMode;
  })();
  var StandardMode = (function () {
      function StandardMode() {

      };
      StandardMode.value = new StandardMode();
      return StandardMode;
  })();
  var FromLeft = (function () {
      function FromLeft(value0) {
          this.value0 = value0;
      };
      FromLeft.create = function (value0) {
          return new FromLeft(value0);
      };
      return FromLeft;
  })();
  var FromRight = (function () {
      function FromRight(value0) {
          this.value0 = value0;
      };
      FromRight.create = function (value0) {
          return new FromRight(value0);
      };
      return FromRight;
  })();
  var FromTop = (function () {
      function FromTop(value0) {
          this.value0 = value0;
      };
      FromTop.create = function (value0) {
          return new FromTop(value0);
      };
      return FromTop;
  })();
  var FromBottom = (function () {
      function FromBottom(value0) {
          this.value0 = value0;
      };
      FromBottom.create = function (value0) {
          return new FromBottom(value0);
      };
      return FromBottom;
  })();
  var Ext = function (x) {
      return x;
  };
  var showSoapMode = new Data_Show.Show(function (v) {
      return "";
  });
  var istate = Game_Core.genState({
      left: 0,
      top: 0,
      right: 0,
      bottom: 0
  })(function (v) {
      return {
          position: v.position,
          history: v.history,
          redoHistory: v.redoHistory,
          dialog: v.dialog,
          turn: v.turn,
          nbRows: 6,
          nbColumns: 7,
          customSize: v.customSize,
          mode: Game_Core.RandomMode.value,
          help: v.help,
          locked: v.locked,
          showWin: v.showWin,
          scores: v.scores,
          pointer: v.pointer
      };
  })({
      soap: {
          row: 0,
          col: 0
      },
      soapMode: CornerMode.value,
      moveWhenHover: Data_Maybe.Nothing.value
  });
  var eqSoapMode = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof CornerMode && y instanceof CornerMode) {
              return true;
          };
          if (x instanceof BorderMode && y instanceof BorderMode) {
              return true;
          };
          if (x instanceof StandardMode && y instanceof StandardMode) {
              return true;
          };
          return false;
      };
  });
  var cutLine = function (state) {
      var v = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      return function (v1) {
          if (v1 instanceof FromLeft) {
              return {
                  x1: v1.value0,
                  y1: v.top,
                  x2: v1.value0,
                  y2: v.bottom
              };
          };
          if (v1 instanceof FromRight) {
              return {
                  x1: v1.value0,
                  y1: v.top,
                  x2: v1.value0,
                  y2: v.bottom
              };
          };
          if (v1 instanceof FromTop) {
              return {
                  x1: v.left,
                  y1: v1.value0,
                  x2: v.right,
                  y2: v1.value0
              };
          };
          if (v1 instanceof FromBottom) {
              return {
                  x1: v.left,
                  y1: v1.value0,
                  x2: v.right,
                  y2: v1.value0
              };
          };
          throw new Error("Failed pattern match at Game.Chocolat.Model (line 75, column 17 - line 79, column 56): " + [ v1.constructor.name ]);
      };
  };
  var _ext$prime = function (dictStrong) {
      var $79 = Game_Core["_ext"](dictStrong);
      var $80 = Data_Lens_Iso.iso(function (v) {
          return v;
      })(Ext)(dictStrong.Profunctor0());
      return function ($81) {
          return $79($80($81));
      };
  };
  var _moveWhenHover = function (dictStrong) {
      var $82 = _ext$prime(dictStrong);
      var $83 = Data_Lens_Lens.lens(function (v) {
          return v.moveWhenHover;
      })(function (v) {
          return function (v1) {
              return {
                  moveWhenHover: v1,
                  soap: v.soap,
                  soapMode: v.soapMode
              };
          };
      })(dictStrong);
      return function ($84) {
          return $82($83($84));
      };
  };
  var setHoverA = function (a) {
      return Pha_Action.setState(Data_Lens_Setter.set(_moveWhenHover(Data_Profunctor_Strong.strongFn))(a));
  };
  var _soap = function (dictStrong) {
      var $85 = _ext$prime(dictStrong);
      var $86 = Data_Lens_Lens.lens(function (v) {
          return v.soap;
      })(function (v) {
          return function (v1) {
              return {
                  soap: v1,
                  moveWhenHover: v.moveWhenHover,
                  soapMode: v.soapMode
              };
          };
      })(dictStrong);
      return function ($87) {
          return $85($86($87));
      };
  };
  var _soapMode = function (dictStrong) {
      var $88 = _ext$prime(dictStrong);
      var $89 = Data_Lens_Lens.lens(function (v) {
          return v.soapMode;
      })(function (v) {
          return function (v1) {
              return {
                  soapMode: v1,
                  moveWhenHover: v.moveWhenHover,
                  soap: v.soap
              };
          };
      })(dictStrong);
      return function ($90) {
          return $88($89($90));
      };
  };
  var chocolat2Game = new Game_Core.TwoPlayersGame(function () {
      return gameChocolat;
  }, function (st) {
      var v = Data_Lens_Getter.viewOn(st)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      var v1 = Data_Lens_Getter.viewOn(st)(_soap(Data_Lens_Internal_Forget.strongForget));
      return ((v1.col - v.left | 0) ^ ((v.right - v1.col | 0) - 1 | 0) ^ (v1.row - v.top | 0) ^ ((v.bottom - v1.row | 0) - 1 | 0)) === 0;
  }, function (st) {
      var v = Data_Lens_Getter.viewOn(st)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      var v1 = Data_Lens_Getter.viewOn(st)(_soap(Data_Lens_Internal_Forget.strongForget));
      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.mapFlipped(Data_Functor.functorArray)(Lib_Util["range'"](v.left + 1 | 0)(v1.col))(FromLeft.create))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.mapFlipped(Data_Functor.functorArray)(Lib_Util["range'"](v1.col + 1 | 0)(v.right - 1 | 0))(FromRight.create))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.mapFlipped(Data_Functor.functorArray)(Lib_Util["range'"](v.top + 1 | 0)(v1.row))(FromTop.create))(Data_Functor.mapFlipped(Data_Functor.functorArray)(Lib_Util["range'"](v1.row + 1 | 0)(v.bottom - 1 | 0))(FromBottom.create))));
  });
  var gameChocolat = new Game_Core.Game(Game_Core["computerMove'"](chocolat2Game), function (st) {
      return Control_Applicative.pure(Lib_Random.applicativeRandom)({
          left: 0,
          right: Data_Lens_Getter.viewOn(st)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)),
          top: 0,
          bottom: Data_Lens_Getter.viewOn(st)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget))
      });
  }, (function () {
      var $91 = Data_Lens_Getter.view(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      return function ($92) {
          return (function (v) {
              return v.left === (v.right - 1 | 0) && v.top === (v.bottom - 1 | 0);
          })($91($92));
      };
  })(), function (state) {
      return Control_Bind.bind(Lib_Random.bindRandom)((function () {
          var $70 = Data_Eq.eq(eqSoapMode)(Data_Lens_Getter.viewOn(state)(_soapMode(Data_Lens_Internal_Forget.strongForget)))(StandardMode.value);
          if ($70) {
              return Lib_Random.randomInt(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)));
          };
          return Control_Applicative.pure(Lib_Random.applicativeRandom)(0);
      })())(function (v) {
          return Control_Bind.bind(Lib_Random.bindRandom)((function () {
              var $72 = Data_Eq.notEq(eqSoapMode)(Data_Lens_Getter.viewOn(state)(_soapMode(Data_Lens_Internal_Forget.strongForget)))(CornerMode.value);
              if ($72) {
                  return Lib_Random.randomInt(Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)));
              };
              return Control_Applicative.pure(Lib_Random.applicativeRandom)(0);
          })())(function (v1) {
              return Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Lens_Setter.set(_soap(Data_Profunctor_Strong.strongFn))({
                  row: v,
                  col: v1
              })(state));
          });
      });
  }, function (st) {
      var p = Data_Lens_Getter.viewOn(st)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      return function (v) {
          if (v instanceof FromLeft) {
              return new Data_Maybe.Just({
                  left: v.value0,
                  bottom: p.bottom,
                  right: p.right,
                  top: p.top
              });
          };
          if (v instanceof FromTop) {
              return new Data_Maybe.Just({
                  top: v.value0,
                  bottom: p.bottom,
                  left: p.left,
                  right: p.right
              });
          };
          if (v instanceof FromRight) {
              return new Data_Maybe.Just({
                  right: v.value0,
                  bottom: p.bottom,
                  left: p.left,
                  top: p.top
              });
          };
          if (v instanceof FromBottom) {
              return new Data_Maybe.Just({
                  bottom: v.value0,
                  left: p.left,
                  right: p.right,
                  top: p.top
              });
          };
          throw new Error("Failed pattern match at Game.Chocolat.Model (line 42, column 15 - line 46, column 47): " + [ v.constructor.name ]);
      };
  }, Data_Function["const"](new Game_Core.SizeLimit(4, 4, 10, 10)), function (st) {
      return new Data_Tuple.Tuple(st, true);
  });
  var setSoapModeA = Game_Core["newGame'"](gameChocolat)(Data_Lens_Setter.set(_soapMode(Data_Profunctor_Strong.strongFn)));
  exports["FromLeft"] = FromLeft;
  exports["FromRight"] = FromRight;
  exports["FromTop"] = FromTop;
  exports["FromBottom"] = FromBottom;
  exports["CornerMode"] = CornerMode;
  exports["BorderMode"] = BorderMode;
  exports["StandardMode"] = StandardMode;
  exports["_soap"] = _soap;
  exports["_soapMode"] = _soapMode;
  exports["_moveWhenHover"] = _moveWhenHover;
  exports["istate"] = istate;
  exports["cutLine"] = cutLine;
  exports["setHoverA"] = setHoverA;
  exports["setSoapModeA"] = setSoapModeA;
  exports["eqSoapMode"] = eqSoapMode;
  exports["showSoapMode"] = showSoapMode;
  exports["gameChocolat"] = gameChocolat;
  exports["chocolat2Game"] = chocolat2Game;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Chocolat.View"] = $PS["Game.Chocolat.View"] || {};
  var exports = $PS["Game.Chocolat.View"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Chocolat_Model = $PS["Game.Chocolat.Model"];
  var Game_Core = $PS["Game.Core"];
  var Lib_Util = $PS["Lib.Util"];
  var Pha = $PS["Pha"];
  var Pha_Html = $PS["Pha.Html"];
  var Run = $PS["Run"];
  var UI_Icon = $PS["UI.Icon"];
  var UI_Icons = $PS["UI.Icons"];
  var UI_Template = $PS["UI.Template"];                
  var inside = function (state) {
      return function (row) {
          return function (col) {
              var v = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
              return col >= v.left && (col <= (v.right - 1 | 0) && (row >= v.top && row <= (v.bottom - 1 | 0)));
          };
      };
  };
  var view = function (state) {
      var rows = Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget));
      var pos = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      var columns = Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget));
      var v = Data_Lens_Getter.viewOn(state)(Game_Chocolat_Model["_soap"](Data_Lens_Internal_Forget.strongForget));
      var winTitle = UI_Template.winTitleFor2Players(state);
      var rules = [ Pha.text("A chaque tour de ce jeu, tu peux d\xe9placer une pile de jetons vers une case adjacente"), Pha_Html.br, Pha.text("qui contient au moins autant de jetons"), Pha_Html.br, Pha.text("Le but est de finir la partie avec le moins de cases contenant des piles de jetons.") ];
      var cutter = function (row) {
          return function (col) {
              return function (move) {
                  return Pha_Html.circle(50.0 * Data_Int.toNumber(col))(50.0 * Data_Int.toNumber(row))(7.0)([ Pha_Html.key("c" + Data_Show.show(Data_Show.showInt)((row * (columns + 1 | 0) | 0) + col | 0)), Pha_Html["class'"]("chocolat-cutter")(true), Pha_Html.pointerenter(Game_Chocolat_Model.setHoverA(new Data_Maybe.Just(move))), Pha_Html.pointerleave(Game_Chocolat_Model.setHoverA(Data_Maybe.Nothing.value)), Pha_Html.click(Control_Apply.applySecond(Run.applyRun)(Game_Chocolat_Model.setHoverA(Data_Maybe.Nothing.value))(Game_Core.playA(Game_Chocolat_Model.gameChocolat)(move))) ]);
              };
          };
      };
      var grid = Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)(UI_Template.gridStyle(rows)(columns)(3))([ Pha_Html["class'"]("ui-board")(true) ]))([ Pha_Html.svg([ Pha_Html.viewBox(-7 | 0)(-7 | 0)((50 * columns | 0) + 14 | 0)((50 * rows | 0) + 14 | 0) ])(Data_Array.concat([ Lib_Util.tabulate2(rows)(columns)(function (row) {
          return function (col) {
              return Pha_Html.rect(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(50.0 * Data_Int.toNumber(col) + 7.0)(50.0 * Data_Int.toNumber(row) + 7.0)(36.0)(36.0)([ Pha_Html.key("choc" + Data_Show.show(Data_Show.showInt)((row * columns | 0) + col | 0)), Pha_Html["class'"]("chocolat-square")(true), Pha_Html["class'"]("soap")(row === v.row && col === v.col), Pha_Html["class'"]("hidden")(!inside(state)(row)(col)) ]);
          };
      }), Control_Bind.bind(Control_Bind.bindArray)(Game_Core.possibleMoves(Game_Chocolat_Model.chocolat2Game)(state))(function (v1) {
          if (v1 instanceof Game_Chocolat_Model.FromLeft) {
              return [ cutter(pos.top)(v1.value0)(new Game_Chocolat_Model.FromLeft(v1.value0)), cutter(pos.bottom)(v1.value0)(new Game_Chocolat_Model.FromLeft(v1.value0)) ];
          };
          if (v1 instanceof Game_Chocolat_Model.FromRight) {
              return [ cutter(pos.top)(v1.value0)(new Game_Chocolat_Model.FromRight(v1.value0)), cutter(pos.bottom)(v1.value0)(new Game_Chocolat_Model.FromRight(v1.value0)) ];
          };
          if (v1 instanceof Game_Chocolat_Model.FromTop) {
              return [ cutter(v1.value0)(pos.left)(new Game_Chocolat_Model.FromTop(v1.value0)), cutter(v1.value0)(pos.right)(new Game_Chocolat_Model.FromTop(v1.value0)) ];
          };
          if (v1 instanceof Game_Chocolat_Model.FromBottom) {
              return [ cutter(v1.value0)(pos.left)(new Game_Chocolat_Model.FromBottom(v1.value0)), cutter(v1.value0)(pos.right)(new Game_Chocolat_Model.FromBottom(v1.value0)) ];
          };
          throw new Error("Failed pattern match at Game.Chocolat.View (line 54, column 41 - line 58, column 106): " + [ v1.constructor.name ]);
      }), [ Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(50.0 * Data_Int.toNumber(v.col) + 12.0)(50.0 * Data_Int.toNumber(v.row) + 12.0)(26.0)(26.0)("#skull")([ Pha_Html.key("skull"), Pha_Html.fill("#20AF20") ]), Pha.maybeN(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Data_Lens_Getter.viewOn(state)(Game_Chocolat_Model["_moveWhenHover"](Data_Lens_Internal_Forget.strongForget)))(function (m) {
          var v1 = Game_Chocolat_Model.cutLine(state)(m);
          return Pha_Html.line(Pha_Html.unitInt)(Pha_Html.unitInt)(Pha_Html.unitInt)(Pha_Html.unitInt)(50 * v1.x1 | 0)(50 * v1.y1 | 0)(50 * v1.x2 | 0)(50 * v1.y2 | 0)([ Pha_Html.key("line"), Pha_Html["class'"]("chocolat-line-to-pointer")(true) ]);
      })) ] ])) ]);
      var config = UI_Template.card("Barre de chocolat")([ UI_Icons.iconSizesGroup(Game_Chocolat_Model.gameChocolat)(state)([ new Data_Tuple.Tuple(6, 7) ])(true), UI_Icons.iconSelectGroup(Game_Chocolat_Model.showSoapMode)(Game_Chocolat_Model.eqSoapMode)(state)("Emplacement du savon")([ Game_Chocolat_Model.CornerMode.value, Game_Chocolat_Model.BorderMode.value, Game_Chocolat_Model.StandardMode.value ])(Data_Lens_Getter.viewOn(state)(Game_Chocolat_Model["_soapMode"](Data_Lens_Internal_Forget.strongForget)))(Game_Chocolat_Model.setSoapModeA)(function (mode) {
          return function (opt) {
              if (mode instanceof Game_Chocolat_Model.CornerMode) {
                  return {
                      icon: new UI_Icon.IconSymbol("#choc-mode0"),
                      selected: opt.selected,
                      tooltip: new Data_Maybe.Just("Dans le coin"),
                      round: opt.round,
                      large: opt.large,
                      hidden: opt.hidden,
                      disabled: opt.disabled,
                      style: opt.style
                  };
              };
              if (mode instanceof Game_Chocolat_Model.BorderMode) {
                  return {
                      icon: new UI_Icon.IconSymbol("#choc-mode1"),
                      selected: opt.selected,
                      tooltip: new Data_Maybe.Just("Sur un bord"),
                      round: opt.round,
                      large: opt.large,
                      hidden: opt.hidden,
                      disabled: opt.disabled,
                      style: opt.style
                  };
              };
              if (mode instanceof Game_Chocolat_Model.StandardMode) {
                  return {
                      icon: new UI_Icon.IconSymbol("#choc-mode2"),
                      selected: opt.selected,
                      tooltip: new Data_Maybe.Just("N'importe o\xf9"),
                      round: opt.round,
                      large: opt.large,
                      hidden: opt.hidden,
                      disabled: opt.disabled,
                      style: opt.style
                  };
              };
              throw new Error("Failed pattern match at Game.Chocolat.View (line 28, column 58 - line 31, column 100): " + [ mode.constructor.name ]);
          };
      }), UI_Icons.icons2Players(Game_Chocolat_Model.gameChocolat)(state), UI_Icons.icongroup("Options")(Data_Functor.mapFlipped(Data_Functor.functorArray)([ UI_Icons.iundo, UI_Icons.iredo, UI_Icons.ireset, UI_Icons.irules ])(function (x) {
          return x(state);
      })) ]);
      var board = UI_Template.incDecGrid(Game_Chocolat_Model.gameChocolat)(state)([ grid, Pha_Html.span([ Pha_Html["class'"]("frog-turn-message")(true) ])([ Pha.text(UI_Template.turnMessage(Game_Chocolat_Model.gameChocolat)(state)) ]) ]);
      return UI_Template.template(Game_Chocolat_Model.gameChocolat)(function (v1) {
          return {
              board: board,
              config: config,
              rules: rules,
              winTitle: winTitle,
              customDialog: v1.customDialog,
              scoreDialog: v1.scoreDialog
          };
      })(state);
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Chocolat"] = $PS["Game.Chocolat"] || {};
  var exports = $PS["Game.Chocolat"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Unit = $PS["Data.Unit"];
  var Game = $PS["Game"];
  var Game_Chocolat_Model = $PS["Game.Chocolat.Model"];
  var Game_Chocolat_View = $PS["Game.Chocolat.View"];
  var Game_Core = $PS["Game.Core"];
  var Pha_Lens = $PS["Pha.Lens"];
  var Run = $PS["Run"];                
  var State = function (x) {
      return x;
  };
  var state = Game_Chocolat_Model.istate;
  var _iso = function (dictProfunctor) {
      return Data_Lens_Iso.iso(function (v) {
          return v;
      })(State)(dictProfunctor);
  };
  var cgame = new Game.CGame(Pha_Lens.actionOver(function (dictStrong) {
      return _iso(dictStrong.Profunctor0());
  })(Game_Core.init(Game_Chocolat_Model.gameChocolat)), function (v) {
      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
  }, function (lens) {
      return function (v) {
          return Pha_Lens.viewOver(function (dictStrong) {
              var $9 = lens(dictStrong);
              var $10 = _iso(dictStrong.Profunctor0());
              return function ($11) {
                  return $9($10($11));
              };
          })(Game_Chocolat_View.view(v));
      };
  });
  exports["state"] = state;
  exports["cgame"] = cgame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Common"] = $PS["Game.Common"] || {};
  var exports = $PS["Game.Common"];
  var Data_Array = $PS["Data.Array"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var _isoCustom = function (dictProfunctor) {
      var to = (function () {
          var $7 = Data_Array.mapWithIndex(function (i) {
              return function (v) {
                  if (v) {
                      return new Data_Maybe.Just({
                          row: Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(i)(5) - 2 | 0,
                          col: Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(i)(5) - 2 | 0
                      });
                  };
                  return Data_Maybe.Nothing.value;
              };
          });
          return function ($8) {
              return Data_Array.catMaybes($7($8));
          };
      })();
      var from = (function () {
          var $9 = Data_Function.flip(Data_Array.updateAtIndices(Data_Foldable.foldableArray))(Data_Array.replicate(25)(false));
          var $10 = Data_Functor.map(Data_Functor.functorArray)(function (v) {
              return new Data_Tuple.Tuple(((v.row * 5 | 0) + v.col | 0) + 12 | 0, true);
          });
          return function ($11) {
              return $9($10($11));
          };
      })();
      return Data_Lens_Iso.iso(from)(to)(dictProfunctor);
  };
  exports["_isoCustom"] = _isoCustom;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Dessin.Model"] = $PS["Game.Dessin.Model"] || {};
  var exports = $PS["Game.Dessin.Model"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Core = $PS["Game.Core"];
  var Lib_Random = $PS["Lib.Random"];
  var Lib_Util = $PS["Lib.Util"];                
  var Edge = (function () {
      function Edge(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Edge.create = function (value0) {
          return function (value1) {
              return new Edge(value0, value1);
          };
      };
      return Edge;
  })();
  var Ext = function (x) {
      return x;
  };
  var nbRaises = (function () {
      var $58 = Data_Array.filter(Data_Maybe.isNothing);
      var $59 = Data_Lens_Getter.view(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      return function ($60) {
          return Data_Array.length($58($59($60)));
      };
  })();
  var house = {
      vertices: [ {
          x: 1.0,
          y: 4.0
      }, {
          x: 3.0,
          y: 4.0
      }, {
          x: 1.0,
          y: 2.0
      }, {
          x: 3.0,
          y: 2.0
      }, {
          x: 2.0,
          y: 1.0
      } ],
      edges: [ new Edge(0, 1), new Edge(0, 2), new Edge(0, 3), new Edge(1, 2), new Edge(1, 3), new Edge(2, 3), new Edge(2, 4), new Edge(3, 4) ]
  };
  var istate = Game_Core.genState([  ])(Control_Category.identity(Control_Category.categoryFn))({
      graphIndex: 0,
      graph: house
  });
  var ex3 = {
      vertices: Data_Functor.mapFlipped(Data_Functor.functorArray)([ {
          x: 1.0,
          y: 2.0
      }, {
          x: 2.0,
          y: 1.0
      }, {
          x: 3.0,
          y: 2.0
      }, {
          x: 2.0,
          y: 3.0
      }, {
          x: 1.0,
          y: 1.0
      }, {
          x: 1.0,
          y: 3.0
      }, {
          x: 3.0,
          y: 3.0
      }, {
          x: 3.0,
          y: 1.0
      }, {
          x: 2.0,
          y: 2.0
      } ])(function (v) {
          return {
              x: v.x * 1.3,
              y: v.y * 1.3 - 0.3
          };
      }),
      edges: [ new Edge(0, 1), new Edge(1, 2), new Edge(2, 3), new Edge(3, 0), new Edge(0, 8), new Edge(1, 8), new Edge(2, 8), new Edge(3, 8), new Edge(0, 4), new Edge(1, 4), new Edge(0, 5), new Edge(3, 5), new Edge(2, 6), new Edge(3, 6), new Edge(1, 7), new Edge(2, 7) ]
  };
  var ex2 = {
      vertices: Data_Functor.mapFlipped(Data_Functor.functorArray)([ {
          x: 1.0,
          y: 2.0
      }, {
          x: 2.0,
          y: 1.0
      }, {
          x: 3.0,
          y: 2.0
      }, {
          x: 2.0,
          y: 3.0
      }, {
          x: 1.0,
          y: 1.0
      }, {
          x: 1.0,
          y: 3.0
      }, {
          x: 3.0,
          y: 3.0
      }, {
          x: 3.0,
          y: 1.0
      } ])(function (v) {
          return {
              x: v.x * 1.3,
              y: v.y * 1.3 - 0.3
          };
      }),
      edges: [ new Edge(0, 1), new Edge(1, 2), new Edge(2, 3), new Edge(3, 0), new Edge(0, 2), new Edge(0, 4), new Edge(1, 4), new Edge(0, 5), new Edge(3, 5), new Edge(2, 6), new Edge(3, 6), new Edge(1, 7), new Edge(2, 7) ]
  };
  var ex1 = {
      vertices: Data_Functor.mapFlipped(Data_Functor.functorArray)([ {
          x: 1.0,
          y: 0.0
      }, {
          x: 0.0,
          y: 1.0
      }, {
          x: 2.0,
          y: 1.0
      }, {
          x: 1.0,
          y: 2.0
      }, {
          x: 0.0,
          y: 3.0
      }, {
          x: 2.0,
          y: 3.0
      }, {
          x: 1.0,
          y: 4.0
      }, {
          x: 0.0,
          y: 5.0
      }, {
          x: 2.0,
          y: 5.0
      } ])(function (v) {
          return {
              x: v.x * 0.9 + 1.0,
              y: v.y * 0.9 + 0.2
          };
      }),
      edges: [ new Edge(0, 1), new Edge(0, 2), new Edge(1, 2), new Edge(1, 3), new Edge(2, 3), new Edge(3, 4), new Edge(3, 5), new Edge(4, 5), new Edge(1, 4), new Edge(2, 5), new Edge(4, 6), new Edge(5, 6), new Edge(6, 7), new Edge(6, 8), new Edge(4, 7), new Edge(5, 8) ]
  };
  var eqEdge = new Data_Eq.Eq(function (v) {
      return function (v1) {
          return v.value0 === v1.value0 && v.value1 === v1.value1 || v.value0 === v1.value1 && v1.value0 === v.value1;
      };
  });
  var edgesOf = (function () {
      var toEdge = function (v) {
          if (v.value0 instanceof Data_Maybe.Just && v.value1 instanceof Data_Maybe.Just) {
              return new Data_Maybe.Just(new Edge(v.value0.value0, v.value1.value0));
          };
          return Data_Maybe.Nothing.value;
      };
      var $61 = Data_Array.mapMaybe(toEdge);
      return function ($62) {
          return $61(Lib_Util.pairwise($62));
      };
  })();
  var cross = {
      vertices: Data_Functor.mapFlipped(Data_Functor.functorArray)([ {
          x: 0.0,
          y: 1.0
      }, {
          x: 0.0,
          y: 2.0
      }, {
          x: 0.5,
          y: 1.5
      }, {
          x: 1.0,
          y: 0.0
      }, {
          x: 1.0,
          y: 1.0
      }, {
          x: 1.0,
          y: 2.0
      }, {
          x: 1.0,
          y: 3.0
      }, {
          x: 1.5,
          y: 0.5
      }, {
          x: 1.5,
          y: 1.5
      }, {
          x: 1.5,
          y: 2.5
      }, {
          x: 2.0,
          y: 0.0
      }, {
          x: 2.0,
          y: 1.0
      }, {
          x: 2.0,
          y: 2.0
      }, {
          x: 2.0,
          y: 3.0
      }, {
          x: 2.5,
          y: 1.5
      }, {
          x: 3.0,
          y: 1.0
      }, {
          x: 3.0,
          y: 2.0
      } ])(function (v) {
          return {
              x: v.x * 1.3 + 0.5,
              y: v.y * 1.3 + 0.5
          };
      }),
      edges: [ new Edge(0, 1), new Edge(0, 2), new Edge(1, 2), new Edge(0, 4), new Edge(1, 5), new Edge(2, 4), new Edge(2, 5), new Edge(3, 4), new Edge(4, 5), new Edge(5, 6), new Edge(3, 7), new Edge(4, 7), new Edge(4, 8), new Edge(5, 8), new Edge(5, 9), new Edge(6, 9), new Edge(3, 10), new Edge(4, 11), new Edge(5, 12), new Edge(6, 13), new Edge(7, 10), new Edge(7, 11), new Edge(8, 11), new Edge(8, 12), new Edge(9, 12), new Edge(9, 13), new Edge(10, 11), new Edge(11, 12), new Edge(12, 13), new Edge(11, 14), new Edge(12, 14), new Edge(11, 15), new Edge(12, 16), new Edge(14, 15), new Edge(14, 16), new Edge(15, 16) ]
  };
  var graphs = [ house, ex1, ex2, ex3, cross ];
  var _ext$prime = function (dictStrong) {
      var $63 = Game_Core["_ext"](dictStrong);
      var $64 = Data_Lens_Iso.iso(function (v) {
          return v;
      })(Ext)(dictStrong.Profunctor0());
      return function ($65) {
          return $63($64($65));
      };
  };
  var _graph = function (dictStrong) {
      var $66 = _ext$prime(dictStrong);
      var $67 = Data_Lens_Lens.lens(function (v) {
          return v.graph;
      })(function (v) {
          return function (v1) {
              return {
                  graph: v1,
                  graphIndex: v.graphIndex
              };
          };
      })(dictStrong);
      return function ($68) {
          return $66($67($68));
      };
  };
  var _graphIndex = function (dictStrong) {
      var $69 = _ext$prime(dictStrong);
      var $70 = Data_Lens_Lens.lens(function (v) {
          return v.graphIndex;
      })(function (v) {
          return function (v1) {
              return {
                  graphIndex: v1,
                  graph: v.graph
              };
          };
      })(dictStrong);
      return function ($71) {
          return $69($70($71));
      };
  };
  var gameDessin = new Game_Core.Game(function (v) {
      return Data_Maybe.Nothing.value;
  }, function (v) {
      return Control_Applicative.pure(Lib_Random.applicativeRandom)([  ]);
  }, function (state) {
      return Data_Array.length(edgesOf(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)))) === Data_Array.length((Data_Lens_Getter.viewOn(state)(_graph(Data_Lens_Internal_Forget.strongForget))).edges);
  }, function (state) {
      return Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Lens_Setter.set(_graph(Data_Profunctor_Strong.strongFn))(Data_Maybe.fromMaybe(house)(Data_Array.index(graphs)(Data_Lens_Getter.viewOn(state)(_graphIndex(Data_Lens_Internal_Forget.strongForget)))))(state));
  }, function (state) {
      return function (x) {
          var position = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
          var v = new Data_Tuple.Tuple(x, Data_Array.last(position));
          if (v.value0 instanceof Data_Maybe.Nothing && (v.value1 instanceof Data_Maybe.Just && v.value1.value0 instanceof Data_Maybe.Just)) {
              return new Data_Maybe.Just(Data_Array.snoc(position)(x));
          };
          if (v.value0 instanceof Data_Maybe.Nothing) {
              return Data_Maybe.Nothing.value;
          };
          if (v.value0 instanceof Data_Maybe.Just && (v.value1 instanceof Data_Maybe.Just && v.value1.value0 instanceof Data_Maybe.Just)) {
              var $52 = !Data_Foldable.elem(Data_Foldable.foldableArray)(eqEdge)(new Edge(v.value0.value0, v.value1.value0.value0))(edgesOf(position)) && Data_Foldable.elem(Data_Foldable.foldableArray)(eqEdge)(new Edge(v.value0.value0, v.value1.value0.value0))((Data_Lens_Getter.viewOn(state)(_graph(Data_Lens_Internal_Forget.strongForget))).edges);
              if ($52) {
                  return new Data_Maybe.Just(Data_Array.snoc(position)(x));
              };
              return Data_Maybe.Nothing.value;
          };
          return new Data_Maybe.Just(Data_Array.snoc(position)(x));
      };
  }, Game_Core.defaultSizeLimit, function (st) {
      return new Data_Tuple.Tuple(st, true);
  });
  var setGraphIndexA = Game_Core["newGame'"](gameDessin)(Data_Lens_Setter.set(_graphIndex(Data_Profunctor_Strong.strongFn)));
  exports["_graphIndex"] = _graphIndex;
  exports["_graph"] = _graph;
  exports["istate"] = istate;
  exports["edgesOf"] = edgesOf;
  exports["nbRaises"] = nbRaises;
  exports["setGraphIndexA"] = setGraphIndexA;
  exports["gameDessin"] = gameDessin;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Dessin.View"] = $PS["Game.Dessin.View"] || {};
  var exports = $PS["Game.Dessin.View"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Game_Core = $PS["Game.Core"];
  var Game_Dessin_Model = $PS["Game.Dessin.Model"];
  var Game_Effs = $PS["Game.Effs"];
  var Pha = $PS["Pha"];
  var Pha_Html = $PS["Pha.Html"];
  var Run = $PS["Run"];
  var UI_Icon = $PS["UI.Icon"];
  var UI_Icons = $PS["UI.Icons"];
  var UI_Template = $PS["UI.Template"];                
  var getCoords = function (graph) {
      return function (u) {
          return Data_Maybe.fromMaybe({
              x: 0.0,
              y: 0.0
          })(Data_Array.index(graph.vertices)(u));
      };
  };
  var getCoordsOfEdge = function (graph) {
      return function (v) {
          var v2 = getCoords(graph)(v.value0);
          var v3 = getCoords(graph)(v.value1);
          return {
              x1: v2.x,
              x2: v3.x,
              y1: v2.y,
              y2: v3.y
          };
      };
  };
  var currentLine = function (p1) {
      return function (p2) {
          return Pha_Html.line(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(100.0 * p1.x)(100.0 * p1.y)(20.0 * p2.x)(20.0 * p2.y)([ Pha_Html["class'"]("dessin-line-to-pointer")(true) ]);
      };
  };
  var view = function (state) {
      var rules = [ Pha.text("blah blah blah blah blah blah blah blah"), Pha_Html.br, Pha.text("blah blah blah blah blah blah blah blah") ];
      var raises = Game_Dessin_Model.nbRaises(state);
      var s = (function () {
          var $18 = raises > 1;
          if ($18) {
              return "s";
          };
          return "";
      })();
      var winTitle = "Tu as r\xe9ussi en " + (Data_Show.show(Data_Show.showInt)(raises) + (" lev\xe9" + s));
      var position = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      var graph = Data_Lens_Getter.viewOn(state)(Game_Dessin_Model["_graph"](Data_Lens_Internal_Forget.strongForget));
      var config = UI_Template.card("Dessin")([ UI_Icons.iconSelectGroup(Data_Show.showInt)(Data_Eq.eqInt)(state)("Dessin")([ 0, 1, 2, 3, 4 ])(Data_Lens_Getter.viewOn(state)(Game_Dessin_Model["_graphIndex"](Data_Lens_Internal_Forget.strongForget)))(Game_Dessin_Model.setGraphIndexA)(function (i) {
          return function (v) {
              return {
                  icon: new UI_Icon.IconText(Data_Show.show(Data_Show.showInt)(i + 1 | 0)),
                  selected: v.selected,
                  tooltip: v.tooltip,
                  round: v.round,
                  large: v.large,
                  hidden: v.hidden,
                  disabled: v.disabled,
                  style: v.style
              };
          };
      }), UI_Icons.icongroup("Options")(Data_Functor.mapFlipped(Data_Functor.functorArray)([ UI_Icons.iundo, UI_Icons.iredo, UI_Icons.ireset, UI_Icons.irules ])(function (x) {
          return x(state);
      })) ]);
      var board = Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)(UI_Template.trackPointer)([ Pha_Html["class'"]("ui-board dessin-board")(true), Pha_Html.contextmenu(Control_Apply.applySecond(Run.applyRun)(Game_Effs.preventDefault)(Game_Core.playA(Game_Dessin_Model.gameDessin)(Data_Maybe.Nothing.value))) ]))([ Pha_Html.svg([ Pha_Html["class'"]("dessin-svg")(true), Pha_Html.viewBox(0)(0)(100)(100) ])(Data_Array.concat([ Data_Functor.mapFlipped(Data_Functor.functorArray)(graph.edges)(function (edge) {
          var v = getCoordsOfEdge(graph)(edge);
          return Pha_Html.line(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(20.0 * v.x1)(20.0 * v.y1)(20.0 * v.x2)(20.0 * v.y2)([ Pha_Html.stroke("grey"), Pha_Html.strokeDasharray("3,1") ]);
      }), Data_Functor.mapFlipped(Data_Functor.functorArray)(Game_Dessin_Model.edgesOf(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget))))(function (edge) {
          var v = getCoordsOfEdge(graph)(edge);
          return Pha_Html.line(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(20.0 * v.x1)(20.0 * v.y1)(20.0 * v.x2)(20.0 * v.y2)([ Pha_Html.stroke("red"), Pha_Html.strokeWidth("1.5") ]);
      }), Data_Array.mapWithIndex(function (i) {
          return function (v) {
              return Pha_Html.circle(20.0 * v.x)(20.0 * v.y)(3.0)([ Pha_Html.stroke((function () {
                  var $30 = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Maybe.eqMaybe(Data_Eq.eqInt)))(new Data_Maybe.Just(new Data_Maybe.Just(i)))(Data_Array.last(position));
                  if ($30) {
                      return "red";
                  };
                  return "blue";
              })()), Pha_Html.fill("blue"), Pha_Html.click(Game_Core.playA(Game_Dessin_Model.gameDessin)(new Data_Maybe.Just(i))) ]);
          };
      })(graph.vertices), [ Pha.maybeN(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(currentLine)(Data_Lens_Getter.viewOn(state)(Game_Core["_pointer"](Data_Lens_Internal_Forget.strongForget))))(Data_Functor.map(Data_Maybe.functorMaybe)(getCoords(graph))(Control_Bind.join(Data_Maybe.bindMaybe)(Data_Array.last(position))))) ] ])), Pha_Html.span([ Pha_Html["class'"]("dessin-raise-info dessin-raise-info")(true) ])([ Pha.text(Data_Show.show(Data_Show.showInt)(raises) + (" lev\xe9" + (s + " de crayon"))) ]), Pha_Html.button([ Pha_Html["class'"]("ui-button ui-button-primary dessin-raise")(true), Pha_Html.disabled(!Game_Core.canPlay(Game_Dessin_Model.gameDessin)(state)(Data_Maybe.Nothing.value)), Pha_Html.click(Game_Core.playA(Game_Dessin_Model.gameDessin)(Data_Maybe.Nothing.value)) ])([ Pha.text("Lever le crayon") ]) ]);
      return UI_Template.template(Game_Dessin_Model.gameDessin)(function (v) {
          return {
              board: board,
              config: config,
              rules: rules,
              winTitle: winTitle,
              customDialog: v.customDialog,
              scoreDialog: v.scoreDialog
          };
      })(state);
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Dessin"] = $PS["Game.Dessin"] || {};
  var exports = $PS["Game.Dessin"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Unit = $PS["Data.Unit"];
  var Game = $PS["Game"];
  var Game_Core = $PS["Game.Core"];
  var Game_Dessin_Model = $PS["Game.Dessin.Model"];
  var Game_Dessin_View = $PS["Game.Dessin.View"];
  var Pha_Lens = $PS["Pha.Lens"];
  var Run = $PS["Run"];                
  var State = function (x) {
      return x;
  };
  var state = Game_Dessin_Model.istate;
  var _iso = function (dictProfunctor) {
      return Data_Lens_Iso.iso(function (v) {
          return v;
      })(State)(dictProfunctor);
  };
  var cgame = new Game.CGame(Pha_Lens.actionOver(function (dictStrong) {
      return _iso(dictStrong.Profunctor0());
  })(Game_Core.init(Game_Dessin_Model.gameDessin)), function (v) {
      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
  }, function (lens) {
      return function (v) {
          return Pha_Lens.viewOver(function (dictStrong) {
              var $9 = lens(dictStrong);
              var $10 = _iso(dictStrong.Profunctor0());
              return function ($11) {
                  return $9($10($11));
              };
          })(Game_Dessin_View.view(v));
      };
  });
  exports["state"] = state;
  exports["cgame"] = cgame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Lib.KonamiCode"] = $PS["Lib.KonamiCode"] || {};
  var exports = $PS["Lib.KonamiCode"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Function = $PS["Data.Function"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Pha_Action = $PS["Pha.Action"];
  var Run = $PS["Run"];                
  var codeSequence = "ArrowUp ArrowUp ArrowDown ArrowDown ArrowLeft ArrowRight ArrowLeft ArrowRight b a";
  var konamiCode = function (lens) {
      return function (onActivation) {
          return function (key) {
              return Control_Bind.bind(Run.bindRun)(Pha_Action.getState)(function (v) {
                  var seq = Data_Array.takeEnd(10)(Data_Function.flip(Data_Array.snoc)(key)(Data_Lens_Getter.viewOn(v)(lens(Data_Lens_Internal_Forget.strongForget))));
                  return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.setState(Data_Lens_Setter.set(lens(Data_Profunctor_Strong.strongFn))(seq)))(function () {
                      return Control_Applicative.when(Run.applicativeRun)(Data_String_Common.joinWith(" ")(seq) === codeSequence)(onActivation);
                  });
              });
          };
      };
  };
  exports["konamiCode"] = konamiCode;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Frog.Model"] = $PS["Game.Frog.Model"] || {};
  var exports = $PS["Game.Frog.Model"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Array_NonEmpty_Internal = $PS["Data.Array.NonEmpty.Internal"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Lazy = $PS["Data.Lazy"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Index = $PS["Data.Lens.Index"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Wander = $PS["Data.Lens.Internal.Wander"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Core = $PS["Game.Core"];
  var Lib_KonamiCode = $PS["Lib.KonamiCode"];
  var Lib_Random = $PS["Lib.Random"];
  var Lib_Util = $PS["Lib.Util"];
  var Pha_Action = $PS["Pha.Action"];                
  var Ext = function (x) {
      return x;
  };
  var winningPositions = function (dictFoldable) {
      return function (size) {
          return function (moves) {
              var t = Lib_Util.tabulate(size)(function (i) {
                  return Data_Lazy.defer(function (v) {
                      return i === 0 || Data_Foldable.all(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (m) {
                          return Data_Maybe.maybe(false)((function () {
                              var $25 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);
                              return function ($26) {
                                  return $25(Data_Lazy.force($26));
                              };
                          })())(Data_Array.index(t)(i - m | 0));
                      })(moves);
                  });
              });
              return Data_Functor.mapFlipped(Data_Functor.functorArray)(t)(Data_Lazy.force);
          };
      };
  };
  var istate = Game_Core.genState(20)(function (v) {
      return {
          position: v.position,
          history: v.history,
          redoHistory: v.redoHistory,
          dialog: v.dialog,
          turn: v.turn,
          nbRows: 20,
          nbColumns: v.nbColumns,
          customSize: true,
          mode: Game_Core.ExpertMode.value,
          help: v.help,
          locked: v.locked,
          showWin: v.showWin,
          scores: v.scores,
          pointer: v.pointer
      };
  })({
      moves: Data_Array_NonEmpty.cons(1)(Data_Array_NonEmpty.cons(2)(Data_Array_NonEmpty.singleton(3))),
      winning: [  ],
      marked: [  ],
      keySequence: [  ]
  });
  var _ext$prime = function (dictStrong) {
      var $27 = Game_Core["_ext"](dictStrong);
      var $28 = Data_Lens_Iso.iso(function (v) {
          return v;
      })(Ext)(dictStrong.Profunctor0());
      return function ($29) {
          return $27($28($29));
      };
  };
  var _keySequence = function (dictStrong) {
      var $30 = _ext$prime(dictStrong);
      var $31 = Data_Lens_Lens.lens(function (v) {
          return v.keySequence;
      })(function (v) {
          return function (v1) {
              return {
                  keySequence: v1,
                  marked: v.marked,
                  moves: v.moves,
                  winning: v.winning
              };
          };
      })(dictStrong);
      return function ($32) {
          return $30($31($32));
      };
  };
  var _marked = function (dictStrong) {
      var $33 = _ext$prime(dictStrong);
      var $34 = Data_Lens_Lens.lens(function (v) {
          return v.marked;
      })(function (v) {
          return function (v1) {
              return {
                  marked: v1,
                  keySequence: v.keySequence,
                  moves: v.moves,
                  winning: v.winning
              };
          };
      })(dictStrong);
      return function ($35) {
          return $33($34($35));
      };
  };
  var markA = function (i) {
      return Pha_Action.setState(Data_Lens_Setter.over((function () {
          var $36 = _marked(Data_Profunctor_Strong.strongFn);
          var $37 = Data_Lens_Index.ix(Data_Lens_Index.indexArray)(i)(Data_Lens_Internal_Wander.wanderFunction);
          return function ($38) {
              return $36($37($38));
          };
      })())(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean)));
  };
  var _moves = function (dictStrong) {
      var $39 = _ext$prime(dictStrong);
      var $40 = Data_Lens_Lens.lens(function (v) {
          return v.moves;
      })(function (v) {
          return function (v1) {
              return {
                  moves: v1,
                  keySequence: v.keySequence,
                  marked: v.marked,
                  winning: v.winning
              };
          };
      })(dictStrong);
      return function ($41) {
          return $39($40($41));
      };
  };
  var canPlay = function (state) {
      return function (v) {
          var position = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
          var moves = Data_Lens_Getter.viewOn(state)(_moves(Data_Lens_Internal_Forget.strongForget));
          var maximum = Data_Foldable.foldr(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Data_Ord.max(Data_Ord.ordInt))(0)(moves);
          return Data_Foldable.elem(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Data_Eq.eqInt)(position - v | 0)(moves) || position > 0 && (v === 0 && position <= maximum);
      };
  };
  var reachableArray = function (state) {
      return Lib_Util.tabulate(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) + 1 | 0)(canPlay(state));
  };
  var _winning = function (dictStrong) {
      var $42 = _ext$prime(dictStrong);
      var $43 = Data_Lens_Lens.lens(function (v) {
          return v.winning;
      })(function (v) {
          return function (v1) {
              return {
                  winning: v1,
                  keySequence: v.keySequence,
                  marked: v.marked,
                  moves: v.moves
              };
          };
      })(dictStrong);
      return function ($44) {
          return $42($43($44));
      };
  };
  var frogGame2 = new Game_Core.TwoPlayersGame(function () {
      return frogGame;
  }, function (state) {
      return Data_Maybe.fromMaybe(true)(Data_Array.index(Data_Lens_Getter.viewOn(state)(_winning(Data_Lens_Internal_Forget.strongForget)))(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget))));
  }, function (state) {
      return Data_Array.filter(canPlay(state))(Lib_Util["range'"](0)(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget))));
  });
  var frogGame = new Game_Core.Game(Game_Core["computerMove'"](frogGame2), function (state) {
      return Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)));
  }, function (state) {
      return Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)) === 0;
  }, function (state) {
      return Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Lens_Setter.set(_marked(Data_Profunctor_Strong.strongFn))(Data_Array.replicate(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) + 1 | 0)(false))(Data_Lens_Setter.set(_winning(Data_Profunctor_Strong.strongFn))(winningPositions(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) + 1 | 0)(Data_Lens_Getter.viewOn(state)(_moves(Data_Lens_Internal_Forget.strongForget))))(state)));
  }, function (state) {
      return function (v) {
          var $24 = canPlay(state)(v);
          if ($24) {
              return new Data_Maybe.Just(v);
          };
          return Data_Maybe.Nothing.value;
      };
  }, function (v) {
      return new Game_Core.SizeLimit(5, 0, 30, 0);
  }, function (st) {
      return new Data_Tuple.Tuple(st, true);
  });
  var selectMoveA = (function () {
      var selectMove = function (move) {
          return function (moves) {
              return Data_Maybe.fromMaybe(moves)(Data_Array_NonEmpty.fromArray(Data_Array.filter(function (m) {
                  return (m === move) !== Data_Foldable.elem(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(Data_Eq.eqInt)(m)(moves);
              })(Lib_Util["range'"](1)(5))));
          };
      };
      return Game_Core["newGame'"](frogGame)((function () {
          var $45 = Data_Lens_Setter.over(_moves(Data_Profunctor_Strong.strongFn));
          return function ($46) {
              return $45(selectMove($46));
          };
      })());
  })();
  var onKeyDown = Lib_KonamiCode.konamiCode(function (dictStrong) {
      return _keySequence(dictStrong);
  })(Pha_Action.setState(function (st) {
      return Data_Lens_Setter.set(_marked(Data_Profunctor_Strong.strongFn))(Data_Lens_Getter.viewOn(st)(_winning(Data_Lens_Internal_Forget.strongForget)))(st);
  }));
  exports["_moves"] = _moves;
  exports["_marked"] = _marked;
  exports["istate"] = istate;
  exports["reachableArray"] = reachableArray;
  exports["selectMoveA"] = selectMoveA;
  exports["markA"] = markA;
  exports["onKeyDown"] = onKeyDown;
  exports["frogGame"] = frogGame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Frog.View"] = $PS["Game.Frog.View"] || {};
  var exports = $PS["Game.Frog.View"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty_Internal = $PS["Data.Array.NonEmpty.Internal"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Game_Core = $PS["Game.Core"];
  var Game_Frog_Model = $PS["Game.Frog.Model"];
  var Lib_Util = $PS["Lib.Util"];
  var $$Math = $PS["Math"];
  var Pha = $PS["Pha"];
  var Pha_Action = $PS["Pha.Action"];
  var Pha_Event = $PS["Pha.Event"];
  var Pha_Html = $PS["Pha.Html"];
  var Run = $PS["Run"];
  var UI_Icons = $PS["UI.Icons"];
  var UI_Template = $PS["UI.Template"];                
  var spiralPointsPolar = function (n) {
      return Data_Array.reverse(Lib_Util.tabulate(n + 1 | 0)(function (i) {
          var theta = $$Math.sqrt((function () {
              var $8 = i === n;
              if ($8) {
                  return 21.0;
              };
              return (Data_Int.toNumber(i) * 20.0) / Data_Int.toNumber(n);
          })()) * 1.36 * $$Math.pi;
          var radius = (61.0 * theta) / (2.0 * $$Math.pi);
          return {
              theta: theta,
              radius: radius
          };
      }));
  };
  var polarToCartesian = function (v) {
      return {
          x: v.radius * $$Math.cos(v.theta),
          y: v.radius * $$Math.sin(v.theta)
      };
  };
  var spiralPoints = function (n) {
      return Data_Functor.mapFlipped(Data_Functor.functorArray)(spiralPointsPolar(n))(polarToCartesian);
  };
  var lineIntersection = function (m1) {
      return function (b1) {
          return function (m2) {
              return function (b2) {
                  var x = (b2 - b1) / (m1 - m2);
                  return {
                      x: x,
                      y: m1 * x + b1
                  };
              };
          };
      };
  };
  var spiral = function (center) {
      return function (startRadius) {
          return function (radiusStep) {
              return function (startTheta) {
                  return function (endTheta) {
                      return function (thetaStep) {
                          return Data_String_Common.joinWith(" ")(Data_Array.concat(Data_Array.mapWithIndex(function (i) {
                              return function (v) {
                                  var v1 = lineIntersection(v.value0.slope)(v.value0.intercept)(v.value1.slope)(v.value1.intercept);
                                  var p = [ "Q", Data_Show.show(Data_Show.showNumber)(v1.x + center.x), Data_Show.show(Data_Show.showNumber)(v1.y + center.y), Data_Show.show(Data_Show.showNumber)(v.value1.point.x), Data_Show.show(Data_Show.showNumber)(v.value1.point.y) ];
                                  var $14 = i === 0;
                                  if ($14) {
                                      return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ "M", Data_Show.show(Data_Show.showNumber)(v.value0.point.x), Data_Show.show(Data_Show.showNumber)(v.value0.point.y) ])(p);
                                  };
                                  return p;
                              };
                          })(Lib_Util.pairwise(Data_Functor.mapFlipped(Data_Functor.functorArray)(Lib_Util.floatRange(startTheta)(endTheta)(thetaStep))(function (theta) {
                              var b = radiusStep / (2.0 * $$Math.pi);
                              var r = startRadius + b * theta;
                              var point = {
                                  x: center.x + r * $$Math.cos(theta),
                                  y: center.y + r * $$Math.sin(theta)
                              };
                              var slope = (b * $$Math.sin(theta) + r * $$Math.cos(theta)) / (b * $$Math.cos(theta) - r * $$Math.sin(theta));
                              var intercept = -(slope * r * $$Math.cos(theta) - r * $$Math.sin(theta));
                              return {
                                  point: point,
                                  slope: slope,
                                  intercept: intercept
                              };
                          })))));
                      };
                  };
              };
          };
      };
  };
  var spiralPath = spiral({
      x: 0.0,
      y: 0.0
  })(0.0)(61.0)(0.0)((37.0 / 6.0) * $$Math.pi)($$Math.pi / 6.0);
  var lily = function (i) {
      return function (x) {
          return function (y) {
              return function (reachable) {
                  return function (hidden) {
                      return (function () {
                          var $19 = i === 0;
                          if ($19) {
                              return Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(x - 30.0)(y - 45.0)(80.0)(80.0);
                          };
                          return Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(x - 24.0)(y - 24.0)(48.0)(48.0);
                      })()("#lily")([ Pha_Html["class'"]("frog-lily")(true), Pha_Html["class'"]("reachable")(reachable), Pha_Html["class'"]("hidden")(hidden) ]);
                  };
              };
          };
      };
  };
  var view = function (state) {
      var winTitle = UI_Template.winTitleFor2Players(state);
      var spoints = spiralPoints(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)));
      var rules = [ Pha.text("Jeu de la grenouille"), Pha_Html.br, Pha.text("R\xe8gles pas encore d\xe9finies") ];
      var reachable = Game_Frog_Model.reachableArray(state);
      var position = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      var pointsPolar = spiralPointsPolar(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)));
      var grid = Pha_Html["div'"]([ Pha_Html["class'"]("ui-board frog-board")(true) ])([ Pha_Html.svg([ Pha_Html.viewBox(-190 | 0)(-200 | 0)(400)(400) ])(Data_Array.concat([ [ Pha_Html.path(spiralPath)([ Pha_Html.fill("none"), Pha_Html.stroke("black"), Pha_Html.strokeWidth("3") ]), Pha_Html.line(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(153.0)(9.0)(207.0)(20.0)([ Pha_Html.stroke("black"), Pha_Html.strokeDasharray("5"), Pha_Html.strokeWidth("6") ]), Pha_Html.line(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(153.0)(7.0)(153.0)(39.0)([ Pha_Html.stroke("black"), Pha_Html.strokeWidth("3") ]), Pha_Html.line(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(207.0)(18.0)(207.0)(50.0)([ Pha_Html.stroke("black"), Pha_Html.strokeWidth("3") ]) ], Lib_Util.map2(spoints)(reachable)(function (i) {
          return function (v) {
              return function (reach) {
                  return Pha_Html.g([ Pha_Html.key("lily" + Data_Show.show(Data_Show.showInt)(i)), Pha_Html.click(Control_Bind.ifM(Run.bindRun)(Data_Functor.map(Run.functorRun)(Pha_Event.shiftKey)(Pha_Action.getEvent))(Game_Frog_Model.markA(i))(Game_Core.playA(Game_Frog_Model.frogGame)(i))) ])([ lily(i)(v.x)(v.y)(false)(false), lily(i)(v.x)(v.y)(true)(!reach || Data_Lens_Getter.viewOn(state)(Game_Core["_locked"](Data_Lens_Internal_Forget.strongForget))), Pha_Html["text'"](Pha_Html.unitNumber)(v.x)(v.y)((function () {
                      var $21 = Data_Lens_Getter.viewOn(state)(Game_Core["_help"](Data_Lens_Internal_Forget.strongForget));
                      if ($21) {
                          return Data_Show.show(Data_Show.showInt)(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) - i | 0);
                      };
                      return "";
                  })())([ Pha_Html["class'"]("frog-index")(true) ]) ]);
              };
          };
      }), Lib_Util.map2(Data_Lens_Getter.viewOn(state)(Game_Frog_Model["_marked"](Data_Lens_Internal_Forget.strongForget)))(spoints)(function (i) {
          return function (mark) {
              return function (v) {
                  return Pha.ifN(mark && i !== position)(function (v1) {
                      return Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(v.x - 20.0)(v.y - 20.0)(32.0)(32.0)("#frog2")([ Pha_Html.key("reach" + Data_Show.show(Data_Show.showInt)(i)), Pha_Html["class'"]("frog-frog marked")(true) ]);
                  });
              };
          };
      }), [ Pha.maybeN(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Data_Array.index(pointsPolar)(position))(function (v) {
          return Pha_Html.g([ Pha_Html.key("frog"), Pha_Html["class'"]("frog-frog-container")(true), Pha_Html.style(Pha_Html.unittoStr)("transform")(Pha_Html.translate(Pha_Html.unitPx)(Pha_Html.unitInt)(Pha_Html.px(v.radius))(0) + (" rotate(" + (Data_Show.show(Data_Show.showNumber)((v.theta * 180.0) / $$Math.pi) + "deg)"))), Pha_Html.style(Pha_Html.unittoStr)("transform-origin")(Data_Show.show(Data_Show.showNumber)(-v.radius) + "px 0") ])([ Pha_Html.g([ Pha_Html["class'"]("frog-frog-container")(true), Pha_Html.style(Pha_Html.unittoStr)("transform")("rotate(" + (Data_Show.show(Data_Show.showNumber)((-v.theta * 180.0) / $$Math.pi) + "deg)")) ])([ Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(-20.0)(-20.0)(40.0)(40.0)("#frog2")([ Pha_Html["class'"]("frog-frog")(true), Pha_Html["class'"]("goal")(position === 0) ]) ]) ]);
      })) ] ])), Pha_Html.span([  ])([ Pha.text(UI_Template.turnMessage(Game_Frog_Model.frogGame)(state)) ]) ]);
      var config = UI_Template.card("La grenouille")([ UI_Icons.iconSelectGroupM(Data_Show.showInt)(Data_Eq.eqInt)(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(state)("D\xe9placements autoris\xe9s")([ 1, 2, 3, 4, 5 ])(Data_Lens_Getter.viewOn(state)(Game_Frog_Model["_moves"](Data_Lens_Internal_Forget.strongForget)))(Game_Frog_Model.selectMoveA)(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn))), UI_Icons.icons2Players(Game_Frog_Model.frogGame)(state), UI_Icons.icongroup("Options")(Data_Functor.mapFlipped(Data_Functor.functorArray)([ UI_Icons.ihelp, UI_Icons.iundo, UI_Icons.iredo, UI_Icons.ireset, UI_Icons.irules ])(function (x) {
          return x(state);
      })) ]);
      var board = UI_Template.incDecGrid(Game_Frog_Model.frogGame)(state)([ grid ]);
      return UI_Template.template(Game_Frog_Model.frogGame)(function (v) {
          return {
              board: board,
              config: config,
              rules: rules,
              winTitle: winTitle,
              customDialog: v.customDialog,
              scoreDialog: v.scoreDialog
          };
      })(state);
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Frog"] = $PS["Game.Frog"] || {};
  var exports = $PS["Game.Frog"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Game = $PS["Game"];
  var Game_Core = $PS["Game.Core"];
  var Game_Frog_Model = $PS["Game.Frog.Model"];
  var Game_Frog_View = $PS["Game.Frog.View"];
  var Pha_Lens = $PS["Pha.Lens"];                
  var State = function (x) {
      return x;
  };
  var state = Game_Frog_Model.istate;
  var _iso = function (dictProfunctor) {
      return Data_Lens_Iso.iso(function (v) {
          return v;
      })(State)(dictProfunctor);
  };
  var cgame = new Game.CGame(Pha_Lens.actionOver(function (dictStrong) {
      return _iso(dictStrong.Profunctor0());
  })(Game_Core.init(Game_Frog_Model.frogGame)), function (a) {
      return Pha_Lens.actionOver(function (dictStrong) {
          return _iso(dictStrong.Profunctor0());
      })(Game_Frog_Model.onKeyDown(a));
  }, function (lens) {
      return function (v) {
          return Pha_Lens.viewOver(function (dictStrong) {
              var $9 = lens(dictStrong);
              var $10 = _iso(dictStrong.Profunctor0());
              return function ($11) {
                  return $9($10($11));
              };
          })(Game_Frog_View.view(v));
      };
  });
  exports["state"] = state;
  exports["cgame"] = cgame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Jetons.Model"] = $PS["Game.Jetons.Model"] || {};
  var exports = $PS["Game.Jetons.Model"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Index = $PS["Data.Lens.Index"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Wander = $PS["Data.Lens.Internal.Wander"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Game_Core = $PS["Game.Core"];
  var Lib_Random = $PS["Lib.Random"];
  var Lib_Util = $PS["Lib.Util"];                
  var Ext = function (x) {
      return x;
  };
  var scoregame = new Game_Core.ScoreGame(function () {
      return jetonsGame;
  }, function (v) {
      return false;
  }, function (state) {
      return Game_Core.Minimize.value;
  }, (function () {
      var $29 = Data_Array.filter(function (v) {
          return v > 0;
      });
      var $30 = Data_Lens_Getter.view(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      return function ($31) {
          return Data_Array.length($29($30($31)));
      };
  })(), function (state) {
      return Data_Show.show(Data_Show.showInt)(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget))) + ("-" + Data_Show.show(Data_Show.showInt)(Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget))));
  });
  var jetonsGame = new Game_Core.Game(function (v) {
      return Data_Maybe.Nothing.value;
  }, function (state) {
      return Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Array.replicate(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) * Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) | 0)(1));
  }, function (state) {
      var position = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      var columns = Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget));
      return Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (i) {
          var z = Data_Maybe.fromMaybe(0)(Data_Array.index(position)(i + columns | 0));
          var y = (function () {
              var $17 = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(i + 1 | 0)(columns) === 0;
              if ($17) {
                  return 0;
              };
              return Data_Maybe.fromMaybe(0)(Data_Array.index(position)(i + 1 | 0));
          })();
          var x = Data_Maybe.fromMaybe(0)(Data_Array.index(position)(i));
          return (x * (y + z | 0) | 0) === 0;
      })(Lib_Util["range'"](0)(Data_Array.length(position) - 1 | 0));
  }, Game_Core.defaultOnNewGame, function (state) {
      return function (v) {
          var position = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
          var v1 = Lib_Util.dCoords(Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)))(v.from)(v.to);
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(position)(v.from))(function (v2) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(position)(v.to))(function (v3) {
                  var $23 = v2 > 0 && (v2 <= v3 && ((v1.row * v1.row | 0) + (v1.col * v1.col | 0) | 0) === 1);
                  if ($23) {
                      return Data_Maybe.Just.create(Data_Lens_Setter.over(Data_Lens_Index.ix(Data_Lens_Index.indexArray)(v.to)(Data_Lens_Internal_Wander.wanderFunction))(function (v4) {
                          return v4 + v2 | 0;
                      })(Data_Lens_Setter.set(Data_Lens_Index.ix(Data_Lens_Index.indexArray)(v.from)(Data_Lens_Internal_Wander.wanderFunction))(0)(position)));
                  };
                  return Data_Maybe.Nothing.value;
              });
          });
      };
  }, function (v) {
      return new Game_Core.SizeLimit(1, 2, 6, 12);
  }, Game_Core["updateScore'"](scoregame)(Game_Core.AlwaysShowWin.value));
  var istate = Game_Core.genState([  ])(function (v) {
      return {
          position: v.position,
          history: v.history,
          redoHistory: v.redoHistory,
          dialog: v.dialog,
          turn: v.turn,
          nbRows: 4,
          nbColumns: 4,
          customSize: v.customSize,
          mode: v.mode,
          help: v.help,
          locked: v.locked,
          showWin: v.showWin,
          scores: v.scores,
          pointer: v.pointer
      };
  })({
      dragged: Data_Maybe.Nothing.value
  });
  var _ext$prime = function (dictStrong) {
      var $32 = Game_Core["_ext"](dictStrong);
      var $33 = Data_Lens_Iso.iso(function (v) {
          return v;
      })(Ext)(dictStrong.Profunctor0());
      return function ($34) {
          return $32($33($34));
      };
  };
  var _dragged = function (dictStrong) {
      var $35 = _ext$prime(dictStrong);
      var $36 = Data_Lens_Lens.lens(function (v) {
          return v.dragged;
      })(function (v) {
          return function (v1) {
              return {
                  dragged: v1
              };
          };
      })(dictStrong);
      return function ($37) {
          return $35($36($37));
      };
  };
  exports["_dragged"] = _dragged;
  exports["istate"] = istate;
  exports["jetonsGame"] = jetonsGame;
  exports["scoregame"] = scoregame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Jetons.View"] = $PS["Game.Jetons.View"] || {};
  var exports = $PS["Game.Jetons.View"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Core = $PS["Game.Core"];
  var Game_Jetons_Model = $PS["Game.Jetons.Model"];
  var Lib_Util = $PS["Lib.Util"];
  var $$Math = $PS["Math"];
  var Pha = $PS["Pha"];
  var Pha_Html = $PS["Pha.Html"];
  var UI_Icons = $PS["UI.Icons"];
  var UI_Template = $PS["UI.Template"];                
  var view = function (state) {
      var score = Game_Core.scoreFn(Game_Jetons_Model.scoregame)(state);
      var s = (function () {
          var $8 = score > 1;
          if ($8) {
              return "s";
          };
          return "";
      })();
      var winTitle = Data_Show.show(Data_Show.showInt)(score) + (" case" + (s + (" restante" + s)));
      var rules = [ Pha.text("A chaque tour de ce jeu, tu peux d\xe9placer une pile de jetons vers une case adjacente"), Pha_Html.br, Pha.text("qui contient au moins autant de jetons"), Pha_Html.br, Pha.text("Le but est de finir la partie avec le moins de cases contenant des piles de jetons.") ];
      var rows = Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget));
      var position = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      var config = UI_Template.card("Jeu des jetons")([ UI_Icons.iconSizesGroup(Game_Jetons_Model.jetonsGame)(state)([ new Data_Tuple.Tuple(2, 2), new Data_Tuple.Tuple(4, 4), new Data_Tuple.Tuple(5, 5), new Data_Tuple.Tuple(6, 6) ])(true), UI_Icons.icongroup("Options")([ UI_Icons.iundo(state), UI_Icons.iredo(state), UI_Icons.ireset(state), UI_Icons.irules(state) ]), UI_Icons.iconBestScore(Game_Jetons_Model.scoregame)(state) ]);
      var columns = Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget));
      var cursor = function (pp) {
          return function (v) {
              return Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html["class'"]("ui-cursor jetons-cursor")(true) ])(UI_Template.cursorStyle(pp)(rows)(columns)(0.6)))([  ]);
          };
      };
      var piece = function (i) {
          return function (val) {
              return function (props) {
                  var v = Lib_Util.coords(columns)(i);
                  return Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html["class'"]("jetons-peg")(true), Pha_Html["class'"]("small")(columns >= 8), Pha_Html.style(Pha_Html.unittoStr)("background-color")(Pha_Html.rgbColor(255)(Data_Int.floor(255.0 * (1.0 - $$Math.sqrt(Data_Int.toNumber(val) / Data_Int.toNumber(rows * columns | 0)))))(0)), Pha_Html.style(Pha_Html.unitPc)("left")(Pha_Html.pc((0.15 + Data_Int.toNumber(v.col)) / Data_Int.toNumber(columns))), Pha_Html.style(Pha_Html.unitPc)("top")(Pha_Html.pc((0.15 + Data_Int.toNumber(v.row)) / Data_Int.toNumber(rows))), Pha_Html.style(Pha_Html.unitPc)("width")(Pha_Html.pc(0.7 / Data_Int.toNumber(columns))), Pha_Html.style(Pha_Html.unitPc)("height")(Pha_Html.pc(0.7 / Data_Int.toNumber(rows))), Pha_Html.style(Pha_Html.unittoStr)("box-shadow")(Data_Show.show(Data_Show.showInt)(val * 2 | 0) + ("px " + (Data_Show.show(Data_Show.showInt)(val * 2 | 0) + "px 5px 0px #656565"))) ])(props))([ Pha_Html.span([  ])([ Pha.text(Data_Show.show(Data_Show.showInt)(val)) ]) ]);
              };
          };
      };
      var scoreDialog = function (v) {
          return UI_Template.bestScoreDialog(Game_Jetons_Model.scoregame)(state)(function (pos) {
              return [ Pha_Html["div'"]([ Pha_Html["class'"]("ui-flex-center jetons-bestscore-grid-container")(true) ])([ Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)(UI_Template.gridStyle(rows)(columns)(3))([ Pha_Html["class'"]("ui-board")(true) ]))(Data_Array.mapWithIndex(function (i) {
                  return function (val) {
                      return Pha.ifN(val !== 0)(function (v1) {
                          return piece(i)(val)([ Pha_Html.key(Data_Show.show(Data_Show.showInt)(i)) ]);
                      });
                  };
              })(pos)) ]) ];
          });
      };
      var board = UI_Template.incDecGrid(Game_Jetons_Model.jetonsGame)(state)([ Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html["class'"]("ui-board")(true) ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(UI_Template.dndBoardProps(Data_Eq.eqInt)(Game_Jetons_Model.jetonsGame)(function (dictStrong) {
          return Game_Jetons_Model["_dragged"](dictStrong);
      }))(UI_Template.gridStyle(rows)(columns)(3))))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Array.mapWithIndex(function (i) {
          return function (val) {
              return Pha.ifN(val !== 0)(function (v) {
                  return piece(i)(val)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.key(Data_Show.show(Data_Show.showInt)(i)) ])(UI_Template.dndItemProps(Data_Eq.eqInt)(Game_Jetons_Model.jetonsGame)(function (dictStrong) {
                      return Game_Jetons_Model["_dragged"](dictStrong);
                  })(true)(true)(i)(state)));
              });
          };
      })(position))([ Pha.maybeN(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(cursor)(Data_Lens_Getter.viewOn(state)(Game_Core["_pointer"](Data_Lens_Internal_Forget.strongForget))))(Data_Lens_Getter.viewOn(state)(Game_Jetons_Model["_dragged"](Data_Lens_Internal_Forget.strongForget)))) ])) ]);
      return UI_Template.template(Game_Jetons_Model.jetonsGame)(function (v) {
          return {
              board: board,
              config: config,
              rules: rules,
              winTitle: winTitle,
              customDialog: v.customDialog,
              scoreDialog: scoreDialog
          };
      })(state);
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Jetons"] = $PS["Game.Jetons"] || {};
  var exports = $PS["Game.Jetons"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Unit = $PS["Data.Unit"];
  var Game = $PS["Game"];
  var Game_Core = $PS["Game.Core"];
  var Game_Jetons_Model = $PS["Game.Jetons.Model"];
  var Game_Jetons_View = $PS["Game.Jetons.View"];
  var Pha_Lens = $PS["Pha.Lens"];
  var Run = $PS["Run"];                
  var State = function (x) {
      return x;
  };
  var state = Game_Jetons_Model.istate;
  var _iso = function (dictProfunctor) {
      return Data_Lens_Iso.iso(function (v) {
          return v;
      })(State)(dictProfunctor);
  };
  var cgame = new Game.CGame(Pha_Lens.actionOver(function (dictStrong) {
      return _iso(dictStrong.Profunctor0());
  })(Game_Core.init(Game_Jetons_Model.jetonsGame)), function (v) {
      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
  }, function (lens) {
      return function (v) {
          return Pha_Lens.viewOver(function (dictStrong) {
              var $9 = lens(dictStrong);
              var $10 = _iso(dictStrong.Profunctor0());
              return function ($11) {
                  return $9($10($11));
              };
          })(Game_Jetons_View.view(v));
      };
  });
  exports["state"] = state;
  exports["cgame"] = cgame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Labete.Model"] = $PS["Game.Labete.Model"] || {};
  var exports = $PS["Game.Labete.Model"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Index = $PS["Data.Lens.Index"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Wander = $PS["Data.Lens.Internal.Wander"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Game_Common = $PS["Game.Common"];
  var Game_Core = $PS["Game.Core"];
  var Game_Effs = $PS["Game.Effs"];
  var Lib_Random = $PS["Lib.Random"];
  var Lib_Util = $PS["Lib.Util"];
  var Pha_Action = $PS["Pha.Action"];
  var Run = $PS["Run"];                
  var StandardMode = (function () {
      function StandardMode() {

      };
      StandardMode.value = new StandardMode();
      return StandardMode;
  })();
  var CylinderMode = (function () {
      function CylinderMode() {

      };
      CylinderMode.value = new CylinderMode();
      return CylinderMode;
  })();
  var TorusMode = (function () {
      function TorusMode() {

      };
      TorusMode.value = new TorusMode();
      return TorusMode;
  })();
  var Type1 = (function () {
      function Type1() {

      };
      Type1.value = new Type1();
      return Type1;
  })();
  var Type2 = (function () {
      function Type2() {

      };
      Type2.value = new Type2();
      return Type2;
  })();
  var Type3 = (function () {
      function Type3() {

      };
      Type3.value = new Type3();
      return Type3;
  })();
  var Type4 = (function () {
      function Type4() {

      };
      Type4.value = new Type4();
      return Type4;
  })();
  var CustomBeast = (function () {
      function CustomBeast() {

      };
      CustomBeast.value = new CustomBeast();
      return CustomBeast;
  })();
  var Ext = function (x) {
      return x;
  };
  var zoneposition = function (columns) {
      return function (v) {
          return Lib_Util.tabulate2(Lib_Util.abs(v.row1 - v.row2 | 0) + 1 | 0)(Lib_Util.abs(v.col1 - v.col2 | 0) + 1 | 0)(function (i) {
              return function (j) {
                  return (((i + Data_Ord.min(Data_Ord.ordInt)(v.row1)(v.row2) | 0) * columns | 0) + j | 0) + Data_Ord.min(Data_Ord.ordInt)(v.col1)(v.col2) | 0;
              };
          });
      };
  };
  var type3 = [ {
      row: 0,
      col: 0
  }, {
      row: 0,
      col: 1
  }, {
      row: 1,
      col: 1
  } ];
  var type2 = [ {
      row: 0,
      col: 0
  }, {
      row: 0,
      col: 1
  }, {
      row: 0,
      col: -1 | 0
  } ];
  var type1 = [ {
      row: 0,
      col: 0
  }, {
      row: 0,
      col: 1
  } ];
  var translate = function (row$prime) {
      return function (col$prime) {
          return Data_Functor.map(Data_Functor.functorArray)(function (v) {
              return {
                  row: v.row + row$prime | 0,
                  col: v.col + col$prime | 0
              };
          });
      };
  };
  var showMode = new Data_Show.Show(function (v) {
      if (v instanceof StandardMode) {
          return "standard";
      };
      if (v instanceof CylinderMode) {
          return "cylinder";
      };
      if (v instanceof TorusMode) {
          return "torus";
      };
      throw new Error("Failed pattern match at Game.Labete.Model (line 12, column 1 - line 15, column 32): " + [ v.constructor.name ]);
  });
  var showBt = new Data_Show.Show(function (v) {
      if (v instanceof Type1) {
          return "type1";
      };
      if (v instanceof Type2) {
          return "type2";
      };
      if (v instanceof Type3) {
          return "type3";
      };
      if (v instanceof Type4) {
          return "type4";
      };
      if (v instanceof CustomBeast) {
          return "custom";
      };
      throw new Error("Failed pattern match at Game.Labete.Model (line 32, column 1 - line 37, column 32): " + [ v.constructor.name ]);
  });
  var setHelpA = function (a) {
      return Pha_Action.setState(Data_Lens_Setter.set(Game_Core["_help"](Data_Profunctor_Strong.strongFn))(a));
  };
  var rotate90 = Data_Functor.map(Data_Functor.functorArray)(function (v) {
      return {
          row: -v.col | 0,
          col: v.row
      };
  });
  var pseudoRandomPick = function (t) {
      return Data_Array.index(t)(Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(28921)(Data_Array.length(t)));
  };
  var istate = Game_Core.genState([  ])(function (v) {
      return {
          position: v.position,
          history: v.history,
          redoHistory: v.redoHistory,
          dialog: v.dialog,
          turn: v.turn,
          nbRows: 5,
          nbColumns: 5,
          customSize: v.customSize,
          mode: v.mode,
          help: v.help,
          locked: v.locked,
          showWin: v.showWin,
          scores: v.scores,
          pointer: v.pointer
      };
  })({
      beast: [ type1 ],
      beastType: Type1.value,
      mode: StandardMode.value,
      startSquare: Data_Maybe.Nothing.value,
      startPointer: Data_Maybe.Nothing.value,
      squareColors: [  ],
      selectedColor: 0
  });
  var eqMode = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof StandardMode && y instanceof StandardMode) {
              return true;
          };
          if (x instanceof CylinderMode && y instanceof CylinderMode) {
              return true;
          };
          if (x instanceof TorusMode && y instanceof TorusMode) {
              return true;
          };
          return false;
      };
  });
  var eqBt = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Type1 && y instanceof Type1) {
              return true;
          };
          if (x instanceof Type2 && y instanceof Type2) {
              return true;
          };
          if (x instanceof Type3 && y instanceof Type3) {
              return true;
          };
          if (x instanceof Type4 && y instanceof Type4) {
              return true;
          };
          if (x instanceof CustomBeast && y instanceof CustomBeast) {
              return true;
          };
          return false;
      };
  });                                                                    
  var allTranslations = function (n) {
      return function (m) {
          return function (beast) {
              return Lib_Util.tabulate2(n)(m)(function (row) {
                  return function (col) {
                      return translate(row)(col)(beast);
                  };
              });
          };
      };
  };
  var allRotations = function (beast) {
      var beast2 = rotate90(beast);
      var beast3 = rotate90(beast2);
      var beast4 = rotate90(beast3);
      return [ beast, beast2, beast3, beast4 ];
  };
  var allBeastPositions = function (rows) {
      return function (cols) {
          return Data_Array.concatMap(Control_Bind.composeKleisli(Control_Bind.bindArray)(allRotations)(allTranslations(rows)(cols)));
      };
  };
  var adaptatedBeast = function (rows) {
      return function (columns) {
          return function (mode) {
              return Data_Functor.map(Data_Functor.functorArray)(function (v) {
                  if (mode instanceof StandardMode) {
                      return {
                          row: v.row,
                          col: v.col
                      };
                  };
                  if (mode instanceof CylinderMode) {
                      return {
                          row: v.row,
                          col: Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v.col)(columns)
                      };
                  };
                  if (mode instanceof TorusMode) {
                      return {
                          row: Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v.row)(rows),
                          col: Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v.col)(columns)
                      };
                  };
                  throw new Error("Failed pattern match at Game.Labete.Model (line 106, column 24 - line 109, column 83): " + [ mode.constructor.name ]);
              });
          };
      };
  };
  var _ext$prime = function (dictStrong) {
      var $87 = Game_Core["_ext"](dictStrong);
      var $88 = Data_Lens_Iso.iso(function (v) {
          return v;
      })(Ext)(dictStrong.Profunctor0());
      return function ($89) {
          return $87($88($89));
      };
  };
  var _mode = function (dictStrong) {
      var $90 = _ext$prime(dictStrong);
      var $91 = Data_Lens_Lens.lens(function (v) {
          return v.mode;
      })(function (v) {
          return function (v1) {
              return {
                  mode: v1,
                  beast: v.beast,
                  beastType: v.beastType,
                  selectedColor: v.selectedColor,
                  squareColors: v.squareColors,
                  startPointer: v.startPointer,
                  startSquare: v.startSquare
              };
          };
      })(dictStrong);
      return function ($92) {
          return $90($91($92));
      };
  };
  var _selectedColor = function (dictStrong) {
      var $93 = _ext$prime(dictStrong);
      var $94 = Data_Lens_Lens.lens(function (v) {
          return v.selectedColor;
      })(function (v) {
          return function (v1) {
              return {
                  selectedColor: v1,
                  beast: v.beast,
                  beastType: v.beastType,
                  mode: v.mode,
                  squareColors: v.squareColors,
                  startPointer: v.startPointer,
                  startSquare: v.startSquare
              };
          };
      })(dictStrong);
      return function ($95) {
          return $93($94($95));
      };
  };
  var incSelectedColorA = function (x) {
      return Pha_Action.setState(Data_Lens_Setter.over(_selectedColor(Data_Profunctor_Strong.strongFn))(function (y) {
          return Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(x + y | 0)(9);
      }));
  };
  var onKeyDown = function (v) {
      if (v === "o") {
          return incSelectedColorA(-1 | 0);
      };
      if (v === "p") {
          return incSelectedColorA(1);
      };
      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
  };
  var _squareColors = function (dictStrong) {
      var $96 = _ext$prime(dictStrong);
      var $97 = Data_Lens_Lens.lens(function (v) {
          return v.squareColors;
      })(function (v) {
          return function (v1) {
              return {
                  squareColors: v1,
                  beast: v.beast,
                  beastType: v.beastType,
                  mode: v.mode,
                  selectedColor: v.selectedColor,
                  startPointer: v.startPointer,
                  startSquare: v.startSquare
              };
          };
      })(dictStrong);
      return function ($98) {
          return $96($97($98));
      };
  };
  var colorZone = function (state) {
      return function (zone) {
          return Data_Array.updateAtIndices(Data_Foldable.foldableArray)(Data_Functor.mapFlipped(Data_Functor.functorArray)(zoneposition(Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)))(zone))(function (i) {
              return new Data_Tuple.Tuple(i, Data_Lens_Getter.viewOn(state)(_selectedColor(Data_Lens_Internal_Forget.strongForget)));
          }))(Data_Lens_Getter.viewOn(state)(_squareColors(Data_Lens_Internal_Forget.strongForget)));
      };
  };
  var _startPointer = function (dictStrong) {
      var $99 = _ext$prime(dictStrong);
      var $100 = Data_Lens_Lens.lens(function (v) {
          return v.startPointer;
      })(function (v) {
          return function (v1) {
              return {
                  startPointer: v1,
                  beast: v.beast,
                  beastType: v.beastType,
                  mode: v.mode,
                  selectedColor: v.selectedColor,
                  squareColors: v.squareColors,
                  startSquare: v.startSquare
              };
          };
      })(dictStrong);
      return function ($101) {
          return $99($100($101));
      };
  };
  var startZone2A = Control_Bind.bind(Run.bindRun)(Game_Effs.getPointerPosition)(function (pos) {
      return Pha_Action.setState(Data_Lens_Setter.set(_startPointer(Data_Profunctor_Strong.strongFn))(pos));
  });
  var _startSquare = function (dictStrong) {
      var $102 = _ext$prime(dictStrong);
      var $103 = Data_Lens_Lens.lens(function (v) {
          return v.startSquare;
      })(function (v) {
          return function (v1) {
              return {
                  startSquare: v1,
                  beast: v.beast,
                  beastType: v.beastType,
                  mode: v.mode,
                  selectedColor: v.selectedColor,
                  squareColors: v.squareColors,
                  startPointer: v.startPointer
              };
          };
      })(dictStrong);
      return function ($104) {
          return $102($103($104));
      };
  };
  var finishZoneA = function (index1) {
      return Pha_Action.setState(function (state) {
          var v = Data_Lens_Getter.viewOn(state)(_startSquare(Data_Lens_Internal_Forget.strongForget));
          if (v instanceof Data_Maybe.Nothing) {
              return state;
          };
          if (v instanceof Data_Maybe.Just) {
              var v1 = Lib_Util.coords(Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)))(index1);
              var v2 = Lib_Util.coords(Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)))(v.value0);
              return Data_Lens_Setter.set(_startPointer(Data_Profunctor_Strong.strongFn))(Data_Maybe.Nothing.value)(Data_Lens_Setter.set(_startSquare(Data_Profunctor_Strong.strongFn))(Data_Maybe.Nothing.value)(Data_Lens_Setter.set(_squareColors(Data_Profunctor_Strong.strongFn))(colorZone(state)({
                  row1: v1.row,
                  col1: v1.col,
                  row2: v2.row,
                  col2: v2.col
              }))(state)));
          };
          throw new Error("Failed pattern match at Game.Labete.Model (line 210, column 41 - line 217, column 44): " + [ v.constructor.name ]);
      });
  };
  var startZoneA = function (pos) {
      return Pha_Action.setState(Data_Lens_Setter.set(_startSquare(Data_Profunctor_Strong.strongFn))(new Data_Maybe.Just(pos)));
  };
  var _beastType = function (dictStrong) {
      var $105 = _ext$prime(dictStrong);
      var $106 = Data_Lens_Lens.lens(function (v) {
          return v.beastType;
      })(function (v) {
          return function (v1) {
              return {
                  beastType: v1,
                  beast: v.beast,
                  mode: v.mode,
                  selectedColor: v.selectedColor,
                  squareColors: v.squareColors,
                  startPointer: v.startPointer,
                  startSquare: v.startSquare
              };
          };
      })(dictStrong);
      return function ($107) {
          return $105($106($107));
      };
  };
  var _beast = function (dictStrong) {
      var $108 = _ext$prime(dictStrong);
      var $109 = Data_Lens_Lens.lens(function (v) {
          return v.beast;
      })(function (v) {
          return function (v1) {
              return {
                  beast: v1,
                  beastType: v.beastType,
                  mode: v.mode,
                  selectedColor: v.selectedColor,
                  squareColors: v.squareColors,
                  startPointer: v.startPointer,
                  startSquare: v.startSquare
              };
          };
      })(dictStrong);
      return function ($110) {
          return $108($109($110));
      };
  };
  var getNewBeast = function (state) {
      var v = Data_Lens_Getter.viewOn(state)(_beastType(Data_Lens_Internal_Forget.strongForget));
      if (v instanceof Type1) {
          return [ type1 ];
      };
      if (v instanceof Type2) {
          return [ type2 ];
      };
      if (v instanceof Type3) {
          return [ type3 ];
      };
      if (v instanceof Type4) {
          return [ type2, type3 ];
      };
      if (v instanceof CustomBeast) {
          return Data_Array.take(1)(Data_Lens_Getter.viewOn(state)(_beast(Data_Lens_Internal_Forget.strongForget)));
      };
      throw new Error("Failed pattern match at Game.Labete.Model (line 139, column 21 - line 144, column 42): " + [ v.constructor.name ]);
  };
  var nonTrappedBeasts = function (state) {
      var rows = Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget));
      var columns = Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget));
      var isValidBeast = Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
          return v.row >= 0 && (v.row < rows && (v.col >= 0 && (v.col < columns && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqBoolean))(Data_Array.index(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)))((v.row * columns | 0) + v.col | 0))(new Data_Maybe.Just(false)))));
      });
      return Data_Array.filter(isValidBeast)(Data_Functor.mapFlipped(Data_Functor.functorArray)(allBeastPositions(rows)(columns)(Data_Lens_Getter.viewOn(state)(_beast(Data_Lens_Internal_Forget.strongForget))))(adaptatedBeast(rows)(columns)(Data_Lens_Getter.viewOn(state)(_mode(Data_Lens_Internal_Forget.strongForget)))));
  };
  var scoregameLabete = new Game_Core.ScoreGame(function () {
      return labeteGame;
  }, function (state) {
      return Data_Eq.eq(eqBt)(Data_Lens_Getter.viewOn(state)(_beastType(Data_Lens_Internal_Forget.strongForget)))(CustomBeast.value);
  }, function (v) {
      return Game_Core.Minimize.value;
  }, (function () {
      var $111 = Data_Array.filter(Control_Category.identity(Control_Category.categoryFn));
      var $112 = Data_Lens_Getter.view(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      return function ($113) {
          return Data_Array.length($111($112($113)));
      };
  })(), function (state) {
      return Data_String_Common.joinWith("-")([ Data_Show.show(Data_Show.showInt)(Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget))), Data_Show.show(Data_Show.showInt)(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget))), Data_Show.show(showMode)(Data_Lens_Getter.viewOn(state)(_mode(Data_Lens_Internal_Forget.strongForget))), Data_Show.show(showBt)(Data_Lens_Getter.viewOn(state)(_beastType(Data_Lens_Internal_Forget.strongForget))) ]);
  });
  var labeteGame = new Game_Core.Game(function (v) {
      return Data_Maybe.Nothing.value;
  }, function (st) {
      return Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Array.replicate(Data_Lens_Getter.viewOn(st)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) * Data_Lens_Getter.viewOn(st)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) | 0)(false));
  }, function ($114) {
      return Data_Array["null"](nonTrappedBeasts($114));
  }, function (st) {
      return Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Lens_Setter.set(_squareColors(Data_Profunctor_Strong.strongFn))(Data_Array.replicate(Data_Lens_Getter.viewOn(st)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) * Data_Lens_Getter.viewOn(st)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) | 0)(0))(Data_Lens_Setter.set(_beast(Data_Profunctor_Strong.strongFn))(getNewBeast(st))(st)));
  }, function (state) {
      return function (index) {
          return Data_Array.modifyAt(index)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)));
      };
  }, function (v) {
      return new Game_Core.SizeLimit(2, 2, 9, 9);
  }, Game_Core["updateScore'"](scoregameLabete)(Game_Core.ShowWinOnNewRecord.value));
  var flipCustomBeastA = function (i) {
      return Game_Core.newGame(labeteGame)(Data_Lens_Setter.over((function () {
          var $115 = _beast(Data_Profunctor_Strong.strongFn);
          var $116 = Data_Lens_Index.ix(Data_Lens_Index.indexArray)(0)(Data_Lens_Internal_Wander.wanderFunction);
          var $117 = Game_Common["_isoCustom"](Data_Profunctor.profunctorFn);
          var $118 = Data_Lens_Index.ix(Data_Lens_Index.indexArray)(i)(Data_Lens_Internal_Wander.wanderFunction);
          return function ($119) {
              return $115($116($117($118($119))));
          };
      })())(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean)));
  };
  var setModeA = Game_Core["newGame'"](labeteGame)(Data_Lens_Setter.set(_mode(Data_Profunctor_Strong.strongFn)));
  var nonTrappedBeastOnGrid = function (st) {
      var rows = Data_Lens_Getter.viewOn(st)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget));
      var columns = Data_Lens_Getter.viewOn(st)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget));
      return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (p) {
          return Data_Lens_Setter.set(Data_Lens_Index.ix(Data_Lens_Index.indexArray)((p.row * columns | 0) + p.col | 0)(Data_Lens_Internal_Wander.wanderFunction))(true);
      })(Data_Array.replicate(rows * columns | 0)(false))(Data_Maybe.fromMaybe([  ])(pseudoRandomPick(nonTrappedBeasts(st))));
  };
  var setBeastA = function (ttype) {
      return Game_Core.newGame(labeteGame)((function () {
          var $120 = Data_Lens_Setter.set(_beastType(Data_Profunctor_Strong.strongFn))(ttype);
          var $121 = (function () {
              var $86 = Data_Eq.eq(eqBt)(ttype)(CustomBeast.value);
              if ($86) {
                  var $123 = Data_Lens_Setter.set(Game_Core["_dialog"](Data_Profunctor_Strong.strongFn))(Game_Core.CustomDialog.value);
                  var $124 = Data_Lens_Setter.over(_beast(Data_Profunctor_Strong.strongFn))(Data_Array.take(1));
                  return function ($125) {
                      return $123($124($125));
                  };
              };
              return Control_Category.identity(Control_Category.categoryFn);
          })();
          return function ($122) {
              return $120($121($122));
          };
      })());
  };
  exports["StandardMode"] = StandardMode;
  exports["CylinderMode"] = CylinderMode;
  exports["TorusMode"] = TorusMode;
  exports["Type1"] = Type1;
  exports["Type2"] = Type2;
  exports["Type3"] = Type3;
  exports["Type4"] = Type4;
  exports["CustomBeast"] = CustomBeast;
  exports["_beast"] = _beast;
  exports["_beastType"] = _beastType;
  exports["_mode"] = _mode;
  exports["_selectedColor"] = _selectedColor;
  exports["_squareColors"] = _squareColors;
  exports["_startPointer"] = _startPointer;
  exports["istate"] = istate;
  exports["nonTrappedBeastOnGrid"] = nonTrappedBeastOnGrid;
  exports["setModeA"] = setModeA;
  exports["setHelpA"] = setHelpA;
  exports["setBeastA"] = setBeastA;
  exports["onKeyDown"] = onKeyDown;
  exports["startZoneA"] = startZoneA;
  exports["startZone2A"] = startZone2A;
  exports["finishZoneA"] = finishZoneA;
  exports["flipCustomBeastA"] = flipCustomBeastA;
  exports["eqMode"] = eqMode;
  exports["showMode"] = showMode;
  exports["eqBt"] = eqBt;
  exports["showBt"] = showBt;
  exports["labeteGame"] = labeteGame;
  exports["scoregameLabete"] = scoregameLabete;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Labete.View"] = $PS["Game.Labete.View"] || {};
  var exports = $PS["Game.Labete.View"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Array = $PS["Data.Array"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Index = $PS["Data.Lens.Index"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Common = $PS["Game.Common"];
  var Game_Core = $PS["Game.Core"];
  var Game_Labete_Model = $PS["Game.Labete.Model"];
  var Lib_Util = $PS["Lib.Util"];
  var $$Math = $PS["Math"];
  var Pha = $PS["Pha"];
  var Pha_Action = $PS["Pha.Action"];
  var Pha_Event = $PS["Pha.Event"];
  var Pha_Html = $PS["Pha.Html"];
  var Run = $PS["Run"];
  var UI_Icon = $PS["UI.Icon"];
  var UI_Icons = $PS["UI.Icons"];
  var UI_Template = $PS["UI.Template"];                
  var modes = [ Game_Labete_Model.StandardMode.value, Game_Labete_Model.CylinderMode.value, Game_Labete_Model.TorusMode.value ];
  var ihelp = function (state) {
      return UI_Icons.iconbutton(state)(function (v) {
          return {
              icon: new UI_Icon.IconSymbol("#help"),
              selected: Data_Lens_Getter.viewOn(state)(Game_Core["_help"](Data_Lens_Internal_Forget.strongForget)),
              tooltip: new Data_Maybe.Just("Aide"),
              round: v.round,
              large: v.large,
              hidden: v.hidden,
              disabled: v.disabled,
              style: v.style
          };
      })([ Pha_Html.pointerdown(Game_Labete_Model.setHelpA(true)), Pha_Html.pointerup(Game_Labete_Model.setHelpA(false)), Pha_Html.pointerleave(Game_Labete_Model.setHelpA(false)) ]);
  };
  var colors = [ "#5aa02c", "blue", "red", "yellow", "magenta", "cyan", "orange", "darkgreen", "grey" ];
  var square = function (v) {
      return function (props) {
          return Pha_Html.g(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.transform(Pha_Html.translate(Pha_Html.unitInt)(Pha_Html.unitInt)(50 * v.col | 0)(50 * v.row | 0)) ])(props))([ Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(0.0)(0.0)(50.0)(50.0)("#grass")([ Pha_Html.fill(Data_Maybe.fromMaybe("")(Data_Array.index(colors)(v.color))) ]), Pha_Html.rect(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(0.0)(0.0)(51.0)(51.0)([ Pha_Html.stroke("black"), Pha_Html.strokeWidth("0.5"), Pha_Html.fill("transparent") ]), Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(5.0)(5.0)(40.0)(40.0)("#paw")([ Pha_Html["class'"]("labete-beast")(true), Pha_Html["class'"]("visible")(v.hasBeast) ]), Pha.ifN(v.hasTrap)(function (v1) {
              return Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(5.0)(5.0)(40.0)(40.0)("#trap")([  ]);
          }) ]);
      };
  };
  var zone = function (color) {
      return function (v) {
          return function (v1) {
              return Pha_Html.rect(Pha_Html.unitPc)(Pha_Html.unitPc)(Pha_Html.unitPc)(Pha_Html.unitPc)(Pha_Html.pc(Data_Ord.min(Data_Ord.ordNumber)(v.x)(v1.x)))(Pha_Html.pc(Data_Ord.min(Data_Ord.ordNumber)(v.y)(v1.y)))(Pha_Html.pc($$Math.abs(v1.x - v.x)))(Pha_Html.pc($$Math.abs(v1.y - v.y)))([ Pha_Html.key("zone"), Pha_Html.stroke("black"), Pha_Html.fill(Data_Maybe.fromMaybe("")(Data_Array.index(colors)(color))), Pha_Html.attr(Pha_Html.unittoStr)("pointer-events")("none"), Pha_Html.attr(Pha_Html.unittoStr)("opacity")("0.4") ]);
          };
      };
  };
  var view = function (state) {
      var winTitle = "Record: " + (Data_Show.show(Data_Show.showInt)(Game_Core.scoreFn(Game_Labete_Model.scoregameLabete)(state)) + " pi\xe8ges");
      var rules = [ Pha.text("Place le moins de pi\xe8ges possible pour emp\xe9cher la b\xeate d'abimer ta belle pelouse!"), Pha_Html.br, Pha.text("Tu peux choisir de jouer avec des b\xeates de diff\xe9rentes formes comme celles pr\xe9finies dans 'Forme de la b\xeate'"), Pha_Html.br, Pha.text("Dans le dernier choix, la b\xeate peut prendre soit une ou l'autre des formes indiqu\xe9es."), Pha_Html.br, Pha.text("Le plateau de jeu peut prendre une grille, un cylindre ou un tore") ];
      var rows = Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget));
      var nonTrappedBeast = Game_Labete_Model.nonTrappedBeastOnGrid(state);
      var customDialog = function (v) {
          return UI_Template.dialog("Personnalise ta b\xeate")([ Pha_Html["div'"]([ Pha_Html["class'"]("labete-custombeast-grid-container")(true) ])([ Pha_Html.svg([ Pha_Html.viewBox(0)(0)(250)(250) ])(Data_Array.mapWithIndex(function (index) {
              return function (hasBeast) {
                  var v1 = Lib_Util.coords(5)(index);
                  return square({
                      row: v1.row,
                      col: v1.col,
                      hasBeast: hasBeast,
                      hasTrap: false,
                      color: 0
                  })([ Pha_Html.key(Data_Show.show(Data_Show.showInt)(index)), Pha_Html.click(Game_Labete_Model.flipCustomBeastA(index)) ]);
              };
          })(Data_Lens_Getter.viewOn(state)((function () {
              var $50 = Game_Labete_Model["_beast"](Data_Lens_Internal_Forget.strongForget);
              var $51 = Data_Lens_Index.ix(Data_Lens_Index.indexArray)(0)(Data_Lens_Internal_Forget.wanderForget(Data_Monoid.monoidArray));
              var $52 = Game_Common["_isoCustom"](Data_Lens_Internal_Forget.profunctorForget);
              return function ($53) {
                  return $50($51($52($53)));
              };
          })()))) ]) ]);
      };
      var cursor = function (pp) {
          return Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(-20.0)(-20.0)(40.0)(40.0)("#trap")(Data_Semigroup.append(Data_Semigroup.semigroupArray)(UI_Template.svgCursorStyle(pp))([ Pha_Html.key("cursor"), Pha_Html.attr(Pha_Html.unittoStr)("opacity")("0.7"), Pha_Html.attr(Pha_Html.unittoStr)("pointer-events")("none") ]));
      };
      var columns = Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget));
      var grid = Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)(UI_Template.gridStyle(rows)(columns)(5))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(UI_Template.trackPointer)([ Pha_Html["class'"]("ui-board")(true), Pha_Html.pointerdown(Control_Monad.whenM(Run.monadRun)(Data_Functor.map(Run.functorRun)(Pha_Event.shiftKey)(Pha_Action.getEvent))(Game_Labete_Model.startZone2A)) ])))([ Pha_Html.svg([ Pha_Html.viewBox(0)(0)(50 * columns | 0)(50 * rows | 0) ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Lib_Util.map3(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)))(nonTrappedBeast)(Data_Lens_Getter.viewOn(state)(Game_Labete_Model["_squareColors"](Data_Lens_Internal_Forget.strongForget)))(function (index) {
          return function (hasTrap) {
              return function (hasBeast) {
                  return function (color) {
                      var v = Lib_Util.coords(columns)(index);
                      return square({
                          color: color,
                          row: v.row,
                          col: v.col,
                          hasTrap: hasTrap,
                          hasBeast: hasBeast && Data_Lens_Getter.viewOn(state)(Game_Core["_help"](Data_Lens_Internal_Forget.strongForget))
                      })([ Pha_Html.key(Data_Show.show(Data_Show.showInt)(index)), Pha_Html.click(Control_Monad.unlessM(Run.monadRun)(Data_Functor.map(Run.functorRun)(Pha_Event.shiftKey)(Pha_Action.getEvent))(Game_Core.playA(Game_Labete_Model.labeteGame)(index))), Pha_Html.pointerup(Game_Labete_Model.finishZoneA(index)), Pha_Html.pointerdown(Control_Monad.whenM(Run.monadRun)(Data_Functor.map(Run.functorRun)(Pha_Event.shiftKey)(Pha_Action.getEvent))(Game_Labete_Model.startZoneA(index))) ]);
                  };
              };
          };
      }))([ Pha.maybeN((function () {
          var v = Data_Lens_Getter.viewOn(state)(Game_Labete_Model["_startPointer"](Data_Lens_Internal_Forget.strongForget));
          if (v instanceof Data_Maybe.Nothing) {
              return Data_Functor.map(Data_Maybe.functorMaybe)(cursor)(Data_Lens_Getter.viewOn(state)(Game_Core["_pointer"](Data_Lens_Internal_Forget.strongForget)));
          };
          if (v instanceof Data_Maybe.Just) {
              return Data_Functor.map(Data_Maybe.functorMaybe)(zone(Data_Lens_Getter.viewOn(state)(Game_Labete_Model["_selectedColor"](Data_Lens_Internal_Forget.strongForget)))(v.value0))(Data_Lens_Getter.viewOn(state)(Game_Core["_pointer"](Data_Lens_Internal_Forget.strongForget)));
          };
          throw new Error("Failed pattern match at Game.Labete.View (line 110, column 26 - line 112, column 81): " + [ v.constructor.name ]);
      })()) ])) ]);
      var scoreDialog = function (v) {
          return UI_Template.bestScoreDialog(Game_Labete_Model.scoregameLabete)(state)(function (position) {
              return [ Pha_Html["div'"]([ Pha_Html["class'"]("ui-flex-center labete-bestscore-grid-container")(true) ])([ Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)(UI_Template.gridStyle(rows)(columns)(5))([ Pha_Html["class'"]("ui-board")(true) ]))([ Pha_Html.svg([ Pha_Html.viewBox(0)(0)(50 * columns | 0)(50 * rows | 0) ])(Data_Array.mapWithIndex(function (index) {
                  return function (hasTrap) {
                      var v1 = Lib_Util.coords(columns)(index);
                      return square({
                          color: 0,
                          row: v1.row,
                          col: v1.col,
                          hasTrap: hasTrap,
                          hasBeast: false
                      })([ Pha_Html.key(Data_Show.show(Data_Show.showInt)(index)) ]);
                  };
              })(position)) ]) ]) ];
          });
      };
      var board = UI_Template.incDecGrid(Game_Labete_Model.labeteGame)(state)([ grid, Pha.ifN(Data_Lens_Getter.viewOn(state)(Game_Labete_Model["_selectedColor"](Data_Lens_Internal_Forget.strongForget)) > 0)(function (v) {
          return Pha_Html["div'"]([ Pha_Html["class'"]("labete-color")(true), Pha_Html.style(Pha_Html.unittoStr)("background-color")(Data_Maybe.fromMaybe("")(Data_Array.index(colors)(Data_Lens_Getter.viewOn(state)(Game_Labete_Model["_selectedColor"](Data_Lens_Internal_Forget.strongForget))))) ])([  ]);
      }) ]);
      var beastTypes = [ Game_Labete_Model.Type1.value, Game_Labete_Model.Type2.value, Game_Labete_Model.Type3.value, Game_Labete_Model.Type4.value, Game_Labete_Model.CustomBeast.value ];
      var config = UI_Template.card("La b\xeate")([ UI_Icons.iconSelectGroup(Game_Labete_Model.showBt)(Game_Labete_Model.eqBt)(state)("Forme de la b\xeate")(beastTypes)(Data_Lens_Getter.viewOn(state)(Game_Labete_Model["_beastType"](Data_Lens_Internal_Forget.strongForget)))(Game_Labete_Model.setBeastA)(function (v) {
          if (v instanceof Game_Labete_Model.Type1) {
              return function (v1) {
                  return {
                      icon: new UI_Icon.IconSymbol("#beast1"),
                      selected: v1.selected,
                      tooltip: v1.tooltip,
                      round: v1.round,
                      large: v1.large,
                      hidden: v1.hidden,
                      disabled: v1.disabled,
                      style: v1.style
                  };
              };
          };
          if (v instanceof Game_Labete_Model.Type2) {
              return function (v1) {
                  return {
                      icon: new UI_Icon.IconSymbol("#beast2"),
                      selected: v1.selected,
                      tooltip: v1.tooltip,
                      round: v1.round,
                      large: v1.large,
                      hidden: v1.hidden,
                      disabled: v1.disabled,
                      style: v1.style
                  };
              };
          };
          if (v instanceof Game_Labete_Model.Type3) {
              return function (v1) {
                  return {
                      icon: new UI_Icon.IconSymbol("#beast3"),
                      selected: v1.selected,
                      tooltip: v1.tooltip,
                      round: v1.round,
                      large: v1.large,
                      hidden: v1.hidden,
                      disabled: v1.disabled,
                      style: v1.style
                  };
              };
          };
          if (v instanceof Game_Labete_Model.Type4) {
              return function (v1) {
                  return {
                      icon: new UI_Icon.IconSymbol("#beast23"),
                      selected: v1.selected,
                      tooltip: v1.tooltip,
                      round: v1.round,
                      large: v1.large,
                      hidden: v1.hidden,
                      disabled: v1.disabled,
                      style: v1.style
                  };
              };
          };
          if (v instanceof Game_Labete_Model.CustomBeast) {
              return function (v1) {
                  return {
                      icon: new UI_Icon.IconSymbol("#customize"),
                      selected: v1.selected,
                      tooltip: v1.tooltip,
                      round: v1.round,
                      large: v1.large,
                      hidden: v1.hidden,
                      disabled: v1.disabled,
                      style: v1.style
                  };
              };
          };
          throw new Error("Failed pattern match at Game.Labete.View (line 64, column 91 - line 69, column 61): " + [ v.constructor.name ]);
      }), UI_Icons.iconSelectGroup(Game_Labete_Model.showMode)(Game_Labete_Model.eqMode)(state)("Type de la grille")(modes)(Data_Lens_Getter.viewOn(state)(Game_Labete_Model["_mode"](Data_Lens_Internal_Forget.strongForget)))(Game_Labete_Model.setModeA)(function (v) {
          if (v instanceof Game_Labete_Model.StandardMode) {
              return function (v1) {
                  return {
                      icon: new UI_Icon.IconSymbol("#grid-normal"),
                      selected: v1.selected,
                      tooltip: new Data_Maybe.Just("Normale"),
                      round: v1.round,
                      large: v1.large,
                      hidden: v1.hidden,
                      disabled: v1.disabled,
                      style: v1.style
                  };
              };
          };
          if (v instanceof Game_Labete_Model.CylinderMode) {
              return function (v1) {
                  return {
                      icon: new UI_Icon.IconSymbol("#grid-cylinder"),
                      selected: v1.selected,
                      tooltip: new Data_Maybe.Just("Cylindrique"),
                      round: v1.round,
                      large: v1.large,
                      hidden: v1.hidden,
                      disabled: v1.disabled,
                      style: v1.style
                  };
              };
          };
          if (v instanceof Game_Labete_Model.TorusMode) {
              return function (v1) {
                  return {
                      icon: new UI_Icon.IconSymbol("#grid-torus"),
                      selected: v1.selected,
                      tooltip: new Data_Maybe.Just("Torique"),
                      round: v1.round,
                      large: v1.large,
                      hidden: v1.hidden,
                      disabled: v1.disabled,
                      style: v1.style
                  };
              };
          };
          throw new Error("Failed pattern match at Game.Labete.View (line 71, column 81 - line 74, column 86): " + [ v.constructor.name ]);
      }), UI_Icons.iconSizesGroup(Game_Labete_Model.labeteGame)(state)([ new Data_Tuple.Tuple(3, 3), new Data_Tuple.Tuple(5, 5), new Data_Tuple.Tuple(6, 6) ])(true), UI_Icons.icongroup("Options")([ ihelp(state), UI_Icons.ireset(state), UI_Icons.irules(state) ]), UI_Icons.iconBestScore(Game_Labete_Model.scoregameLabete)(state) ]);
      return UI_Template.template(Game_Labete_Model.labeteGame)(function (v) {
          return {
              board: board,
              config: config,
              rules: rules,
              winTitle: winTitle,
              customDialog: customDialog,
              scoreDialog: scoreDialog
          };
      })(state);
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Labete"] = $PS["Game.Labete"] || {};
  var exports = $PS["Game.Labete"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Game = $PS["Game"];
  var Game_Core = $PS["Game.Core"];
  var Game_Labete_Model = $PS["Game.Labete.Model"];
  var Game_Labete_View = $PS["Game.Labete.View"];
  var Pha_Lens = $PS["Pha.Lens"];                
  var State = function (x) {
      return x;
  };
  var state = Game_Labete_Model.istate;
  var _iso = function (dictProfunctor) {
      return Data_Lens_Iso.iso(function (v) {
          return v;
      })(State)(dictProfunctor);
  };
  var cgame = new Game.CGame(Pha_Lens.actionOver(function (dictStrong) {
      return _iso(dictStrong.Profunctor0());
  })(Game_Core.init(Game_Labete_Model.labeteGame)), function (a) {
      return Pha_Lens.actionOver(function (dictStrong) {
          return _iso(dictStrong.Profunctor0());
      })(Game_Labete_Model.onKeyDown(a));
  }, function (lens) {
      return function (v) {
          return Pha_Lens.viewOver(function (dictStrong) {
              var $9 = lens(dictStrong);
              var $10 = _iso(dictStrong.Profunctor0());
              return function ($11) {
                  return $9($10($11));
              };
          })(Game_Labete_View.view(v));
      };
  });
  exports["state"] = state;
  exports["cgame"] = cgame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Nim.Model"] = $PS["Game.Nim.Model"] || {};
  var exports = $PS["Game.Nim.Model"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Int_Bits = $PS["Data.Int.Bits"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Core = $PS["Game.Core"];
  var Lib_Random = $PS["Lib.Random"];
  var Lib_Util = $PS["Lib.Util"];                
  var Move = (function () {
      function Move(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Move.create = function (value0) {
          return function (value1) {
              return new Move(value0, value1);
          };
      };
      return Move;
  })();
  var Ext = function (x) {
      return x;
  };
  var istate = Game_Core.genState([  ])(function (v) {
      return {
          position: v.position,
          history: v.history,
          redoHistory: v.redoHistory,
          dialog: v.dialog,
          turn: v.turn,
          nbRows: v.nbRows,
          nbColumns: v.nbColumns,
          customSize: v.customSize,
          mode: Game_Core.ExpertMode.value,
          help: v.help,
          locked: v.locked,
          showWin: v.showWin,
          scores: v.scores,
          pointer: v.pointer
      };
  })({
      length: 10,
      nbPiles: 4
  });
  var canPlay = function (state) {
      return function (v) {
          var v1 = Data_Array.index(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)))(v.value0);
          if (v1 instanceof Data_Maybe.Nothing) {
              return false;
          };
          if (v1 instanceof Data_Maybe.Just) {
              return v.value1 !== v1.value0.value0 && (v.value1 !== v1.value0.value1 && (function () {
                  var $22 = Data_Eq.eq(Game_Core.eqTurn)(Data_Lens_Getter.viewOn(state)(Game_Core["_turn"](Data_Lens_Internal_Forget.strongForget)))(Game_Core.Turn1.value);
                  if ($22) {
                      return v.value1 < v1.value0.value1;
                  };
                  return v.value1 > v1.value0.value0;
              })());
          };
          throw new Error("Failed pattern match at Game.Nim.Model (line 33, column 5 - line 35, column 105): " + [ v1.constructor.name ]);
      };
  };
  var _ext$prime = function (dictStrong) {
      var $49 = Game_Core["_ext"](dictStrong);
      var $50 = Data_Lens_Iso.iso(function (v) {
          return v;
      })(Ext)(dictStrong.Profunctor0());
      return function ($51) {
          return $49($50($51));
      };
  };
  var _length = function (dictStrong) {
      var $52 = _ext$prime(dictStrong);
      var $53 = Data_Lens_Lens.lens(function (v) {
          return v.length;
      })(function (v) {
          return function (v1) {
              return {
                  length: v1,
                  nbPiles: v.nbPiles
              };
          };
      })(dictStrong);
      return function ($54) {
          return $52($53($54));
      };
  };
  var _nbPiles = function (dictStrong) {
      var $55 = _ext$prime(dictStrong);
      var $56 = Data_Lens_Lens.lens(function (v) {
          return v.nbPiles;
      })(function (v) {
          return function (v1) {
              return {
                  nbPiles: v1,
                  length: v.length
              };
          };
      })(dictStrong);
      return function ($57) {
          return $55($56($57));
      };
  };
  var nimGame2 = new Game_Core.TwoPlayersGame(function () {
      return nimGame;
  }, (function () {
      var $58 = Data_Eq.eq(Data_Eq.eqInt)(0);
      var $59 = Data_Foldable.foldr(Data_Foldable.foldableArray)(function (t) {
          return Data_Int_Bits.xor((Data_Tuple.snd(t) - Data_Tuple.fst(t) | 0) - 1 | 0);
      })(0);
      var $60 = Data_Lens_Getter.view(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      return function ($61) {
          return $58($59($60($61)));
      };
  })(), function (state) {
      return Data_Array.sortWith(Data_Ord.ordInt)(function (v) {
          return Data_Maybe.maybe(0)(function (x) {
              var $30 = Data_Eq.eq(Game_Core.eqTurn)(Data_Lens_Getter.viewOn(state)(Game_Core["_turn"](Data_Lens_Internal_Forget.strongForget)))(Game_Core.Turn1.value);
              if ($30) {
                  return Data_Tuple.fst(x) - v.value1 | 0;
              };
              return v.value1 - Data_Tuple.snd(x) | 0;
          })(Data_Array.index(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)))(v.value0));
      })(Data_Array.filter(canPlay(state))(Lib_Util.tabulate2(Data_Lens_Getter.viewOn(state)(_nbPiles(Data_Lens_Internal_Forget.strongForget)))(Data_Lens_Getter.viewOn(state)(_length(Data_Lens_Internal_Forget.strongForget)))(Move.create)));
  });
  var nimGame = new Game_Core.Game(Game_Core["computerMove'"](nimGame2), function (state) {
      return Data_Traversable.sequence(Data_Traversable.traversableArray)(Lib_Random.applicativeRandom)(Data_Array.replicate(Data_Lens_Getter.viewOn(state)(_nbPiles(Data_Lens_Internal_Forget.strongForget)))((function () {
          var $33 = Data_Lens_Getter.viewOn(state)(_length(Data_Lens_Internal_Forget.strongForget)) === 5;
          if ($33) {
              return Control_Applicative.pure(Lib_Random.applicativeRandom)(new Data_Tuple.Tuple(0, 4));
          };
          return Control_Bind.bind(Lib_Random.bindRandom)(Lib_Random.randomInt(5))(function (v) {
              return Control_Bind.bind(Lib_Random.bindRandom)(Lib_Random.randomInt(5))(function (v1) {
                  return Control_Applicative.pure(Lib_Random.applicativeRandom)(new Data_Tuple.Tuple(v, v1 + 5 | 0));
              });
          });
      })()));
  }, function (state) {
      return Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
          return (v.value1 - v.value0 | 0) === 1 && v.value0 === (function () {
              var $37 = Data_Eq.eq(Game_Core.eqTurn)(Data_Lens_Getter.viewOn(state)(Game_Core["_turn"](Data_Lens_Internal_Forget.strongForget)))(Game_Core.Turn2.value);
              if ($37) {
                  return Data_Lens_Getter.viewOn(state)(_length(Data_Lens_Internal_Forget.strongForget)) - 2 | 0;
              };
              return 0;
          })();
      })(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)));
  }, Game_Core.defaultOnNewGame, function (state) {
      return function (v) {
          var $42 = canPlay(state)(v);
          if ($42) {
              return Data_Array.modifyAt(v.value0)(function (v1) {
                  var $44 = Data_Eq.eq(Game_Core.eqTurn)(Data_Lens_Getter.viewOn(state)(Game_Core["_turn"](Data_Lens_Internal_Forget.strongForget)))(Game_Core.Turn1.value);
                  if ($44) {
                      return new Data_Tuple.Tuple(v.value1, v1.value1);
                  };
                  return new Data_Tuple.Tuple(v1.value0, v.value1);
              })(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)));
          };
          return Data_Maybe.Nothing.value;
      };
  }, Game_Core.defaultSizeLimit, function (st) {
      return new Data_Tuple.Tuple(st, true);
  });
  var setLengthA = Game_Core["newGame'"](nimGame)(Data_Lens_Setter.set(_length(Data_Profunctor_Strong.strongFn)));
  var setNbPilesA = Game_Core["newGame'"](nimGame)(Data_Lens_Setter.set(_nbPiles(Data_Profunctor_Strong.strongFn)));
  exports["Move"] = Move;
  exports["istate"] = istate;
  exports["_length"] = _length;
  exports["_nbPiles"] = _nbPiles;
  exports["setNbPilesA"] = setNbPilesA;
  exports["setLengthA"] = setLengthA;
  exports["nimGame"] = nimGame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Nim.View"] = $PS["Game.Nim.View"] || {};
  var exports = $PS["Game.Nim.View"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Core = $PS["Game.Core"];
  var Game_Nim_Model = $PS["Game.Nim.Model"];
  var Lib_Util = $PS["Lib.Util"];
  var Pha = $PS["Pha"];
  var Pha_Html = $PS["Pha.Html"];
  var UI_Icons = $PS["UI.Icons"];
  var UI_Template = $PS["UI.Template"];                
  var view = function (state) {
      var winTitle = "Les " + ((function () {
          var $1 = Data_Eq.eq(Game_Core.eqTurn)(Data_Lens_Getter.viewOn(state)(Game_Core["_turn"](Data_Lens_Internal_Forget.strongForget)))(Game_Core.Turn2.value);
          if ($1) {
              return "bleu";
          };
          return "rouge";
      })() + "s gagnent");
      var rules = [ Pha.text("Essaie de bloquer ton adversaire"), Pha_Html.br, Pha.text("A chaque tour, tu peux d\xe9placer un de tes jetons vers la gauche ou vers la droite"), Pha_Html.br, Pha.text("d'autant de cases que tu veux mais tu ne peux pas sauter par dessus le jeton adversaire."), Pha_Html.br, Pha.text("Tu es oblig\xe9 de d\xe9placer un jeton d'au moins une case, tu ne peux pas passer ton tour."), Pha_Html.br, Pha.text("Tu gagnes la partie si ton adversaire n'a aucun mouvement possible.") ];
      var nbPiles = Data_Lens_Getter.viewOn(state)(Game_Nim_Model["_nbPiles"](Data_Lens_Internal_Forget.strongForget));
      var length = Data_Lens_Getter.viewOn(state)(Game_Nim_Model["_length"](Data_Lens_Internal_Forget.strongForget));
      var config = UI_Template.card("Poker Nim")([ UI_Icons.iconSelectGroup(Data_Show.showInt)(Data_Eq.eqInt)(state)("Nombre de rang\xe9es")([ 1, 2, 3, 4, 5 ])(nbPiles)(Game_Nim_Model.setNbPilesA)(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn))), UI_Icons.iconSelectGroup(Data_Show.showInt)(Data_Eq.eqInt)(state)("Taille des rang\xe9es")([ 10, 5 ])(length)(Game_Nim_Model.setLengthA)(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn))), UI_Icons.icons2Players(Game_Nim_Model.nimGame)(state), UI_Icons.icongroup("Options")(Data_Functor.mapFlipped(Data_Functor.functorArray)([ UI_Icons.iundo, UI_Icons.iredo, UI_Icons.ireset, UI_Icons.irules ])(function (x) {
          return x(state);
      })) ]);
      var board = Pha_Html["div'"]([ Pha_Html["class'"]("ui-board nim-board")(true) ])([ Pha_Html.svg([ Pha_Html.viewBox(0)(0)(100)(100) ])(Data_Array.concat(Data_Array.mapWithIndex(function (i) {
          return function (pile) {
              return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.rect(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)((function () {
                  var $2 = length === 5;
                  if ($2) {
                      return 25.0;
                  };
                  return 0.0;
              })())(Data_Int.toNumber(10 + (19 * i | 0) | 0))((function () {
                  var $3 = length === 5;
                  if ($3) {
                      return 50.0;
                  };
                  return 100.0;
              })())(10.0)([ Pha_Html.key("pile" + Data_Show.show(Data_Show.showInt)(i)), Pha_Html.fill("snow") ]) ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Lib_Util.tabulate(length)(function (j) {
                  return Pha_Html.rect(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(-2.5)(-2.5)(5.0)(5.0)([ Pha_Html.key("base-" + (Data_Show.show(Data_Show.showInt)(i) + ("-" + Data_Show.show(Data_Show.showInt)(j)))), Pha_Html.fill("gray"), Pha_Html.click(Game_Core.playA(Game_Nim_Model.nimGame)(new Game_Nim_Model.Move(i, j))), Pha_Html.style(Pha_Html.unittoStr)("transform")(Pha_Html.translate(Pha_Html.unitPx2)(Pha_Html.unitPx2)(Pha_Html.px((function () {
                      var $4 = length === 5;
                      if ($4) {
                          return 30;
                      };
                      return 5;
                  })() + (10 * j | 0) | 0))(Pha_Html.px(15 + (19 * i | 0) | 0)) + " rotate(45deg)"), Pha_Html.style(Pha_Html.unittoStr)("cursor")((function () {
                      var $5 = Game_Core.canPlay(Game_Nim_Model.nimGame)(state)(new Game_Nim_Model.Move(i, j));
                      if ($5) {
                          return "pointer";
                      };
                      return "not-allowed";
                  })()) ]);
              }))(Data_Array.mapWithIndex(function (j) {
                  return function (peg) {
                      return Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(0.0)(0.0)(8.0)(8.0)("#meeple")([ Pha_Html.key("p-" + (Data_Show.show(Data_Show.showInt)(i) + ("-" + Data_Show.show(Data_Show.showInt)(j)))), Pha_Html["class'"]("nim-player")(true), Pha_Html.fill((function () {
                          var $6 = j === 0;
                          if ($6) {
                              return "blue";
                          };
                          return "red";
                      })()), Pha_Html.style(Pha_Html.unittoStr)("transform")(Pha_Html.translate(Pha_Html.unitPx2)(Pha_Html.unitPx2)(Pha_Html.px((function () {
                          var $7 = length === 5;
                          if ($7) {
                              return 26;
                          };
                          return 1;
                      })() + (10 * peg | 0) | 0))(Pha_Html.px(11 + (19 * i | 0) | 0))) ]);
                  };
              })([ Data_Tuple.fst(pile), Data_Tuple.snd(pile) ])));
          };
      })(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget))))), Pha_Html.span([ Pha_Html["class'"]("nim-turn-message")(true) ])([ Pha.text((function () {
          var $8 = Game_Core.isLevelFinished(Game_Nim_Model.nimGame)(state);
          if ($8) {
              return "Partie finie";
          };
          var $9 = Data_Eq.eq(Game_Core.eqTurn)(Data_Lens_Getter.viewOn(state)(Game_Core["_turn"](Data_Lens_Internal_Forget.strongForget)))(Game_Core.Turn1.value);
          if ($9) {
              return "Tour du joueur bleu";
          };
          return "Tour du joueur rouge";
      })()) ]) ]);
      return UI_Template.template(Game_Nim_Model.nimGame)(function (v) {
          return {
              board: board,
              config: config,
              rules: rules,
              winTitle: winTitle,
              customDialog: v.customDialog,
              scoreDialog: v.scoreDialog
          };
      })(state);
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Nim"] = $PS["Game.Nim"] || {};
  var exports = $PS["Game.Nim"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Unit = $PS["Data.Unit"];
  var Game = $PS["Game"];
  var Game_Core = $PS["Game.Core"];
  var Game_Nim_Model = $PS["Game.Nim.Model"];
  var Game_Nim_View = $PS["Game.Nim.View"];
  var Pha_Lens = $PS["Pha.Lens"];
  var Run = $PS["Run"];                
  var State = function (x) {
      return x;
  };
  var state = Game_Nim_Model.istate;
  var _iso = function (dictProfunctor) {
      return Data_Lens_Iso.iso(function (v) {
          return v;
      })(State)(dictProfunctor);
  };
  var cgame = new Game.CGame(Pha_Lens.actionOver(function (dictStrong) {
      return _iso(dictStrong.Profunctor0());
  })(Game_Core.init(Game_Nim_Model.nimGame)), function (v) {
      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
  }, function (lens) {
      return function (v) {
          return Pha_Lens.viewOver(function (dictStrong) {
              var $9 = lens(dictStrong);
              var $10 = _iso(dictStrong.Profunctor0());
              return function ($11) {
                  return $9($10($11));
              };
          })(Game_Nim_View.view(v));
      };
  });
  exports["state"] = state;
  exports["cgame"] = cgame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Noirblanc.Model"] = $PS["Game.Noirblanc.Model"] || {};
  var exports = $PS["Game.Noirblanc.Model"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Index = $PS["Data.Lens.Index"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Wander = $PS["Data.Lens.Internal.Wander"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Core = $PS["Game.Core"];
  var Lib_KonamiCode = $PS["Lib.KonamiCode"];
  var Lib_Random = $PS["Lib.Random"];
  var Lib_Util = $PS["Lib.Util"];
  var Pha_Action = $PS["Pha.Action"];
  var Run = $PS["Run"];                
  var Ext = function (x) {
      return x;
  };
  var sizes = [ new Data_Tuple.Tuple(3, 3), new Data_Tuple.Tuple(4, 4), new Data_Tuple.Tuple(2, 10), new Data_Tuple.Tuple(3, 10), new Data_Tuple.Tuple(5, 5), new Data_Tuple.Tuple(8, 8), new Data_Tuple.Tuple(8, 8) ];
  var istate = Game_Core.genState({
      light: [  ],
      played: [  ]
  })(Control_Category.identity(Control_Category.categoryFn))({
      level: 0,
      mode: 0,
      maxLevels: [ 0, 1, 1, 0 ],
      keySequence: [  ]
  });
  var _played = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.played;
      })(function (v) {
          return function (v1) {
              return {
                  played: v1,
                  light: v.light
              };
          };
      })(dictStrong);
  };
  var _light = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.light;
      })(function (v) {
          return function (v1) {
              return {
                  light: v1,
                  played: v.played
              };
          };
      })(dictStrong);
  };
  var _ext$prime = function (dictStrong) {
      var $50 = Game_Core["_ext"](dictStrong);
      var $51 = Data_Lens_Iso.iso(function (v) {
          return v;
      })(Ext)(dictStrong.Profunctor0());
      return function ($52) {
          return $50($51($52));
      };
  };
  var _keySequence = function (dictStrong) {
      var $53 = _ext$prime(dictStrong);
      var $54 = Data_Lens_Lens.lens(function (v) {
          return v.keySequence;
      })(function (v) {
          return function (v1) {
              return {
                  keySequence: v1,
                  level: v.level,
                  maxLevels: v.maxLevels,
                  mode: v.mode
              };
          };
      })(dictStrong);
      return function ($55) {
          return $53($54($55));
      };
  };
  var _level = function (dictStrong) {
      var $56 = _ext$prime(dictStrong);
      var $57 = Data_Lens_Lens.lens(function (v) {
          return v.level;
      })(function (v) {
          return function (v1) {
              return {
                  level: v1,
                  keySequence: v.keySequence,
                  maxLevels: v.maxLevels,
                  mode: v.mode
              };
          };
      })(dictStrong);
      return function ($58) {
          return $56($57($58));
      };
  };
  var _maxLevels = function (dictStrong) {
      var $59 = _ext$prime(dictStrong);
      var $60 = Data_Lens_Lens.lens(function (v) {
          return v.maxLevels;
      })(function (v) {
          return function (v1) {
              return {
                  maxLevels: v1,
                  keySequence: v.keySequence,
                  level: v.level,
                  mode: v.mode
              };
          };
      })(dictStrong);
      return function ($61) {
          return $59($60($61));
      };
  };
  var onKeyDown = Lib_KonamiCode.konamiCode(function (dictStrong) {
      return _keySequence(dictStrong);
  })(Pha_Action.setState(Data_Lens_Setter.set(_maxLevels(Data_Profunctor_Strong.strongFn))([ 6, 6, 6, 6 ])));
  var _mode = function (dictStrong) {
      var $62 = _ext$prime(dictStrong);
      var $63 = Data_Lens_Lens.lens(function (v) {
          return v.mode;
      })(function (v) {
          return function (v1) {
              return {
                  mode: v1,
                  keySequence: v.keySequence,
                  level: v.level,
                  maxLevels: v.maxLevels
              };
          };
      })(dictStrong);
      return function ($64) {
          return $62($63($64));
      };
  };
  var neighbor = function (state) {
      return function (index1) {
          return function (index2) {
              var mode = Data_Lens_Getter.viewOn(state)(_mode(Data_Lens_Internal_Forget.strongForget));
              var v = Lib_Util.dCoords(Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)))(index1)(index2);
              return ((v.row * v.row | 0) + (v.col * v.col | 0) | 0) === 1 || (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(mode)(3) === 0 && index1 === index2 || mode >= 2 && (index1 !== index2 && (v.row * v.col | 0) === 0));
          };
      };
  };
  var toggleCell = function (state) {
      return function (index) {
          return Data_Array.mapWithIndex(function (i) {
              return function (color) {
                  return color !== neighbor(state)(index)(i);
              };
          });
      };
  };
  var genRandomBoard = function (state) {
      var size = Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) * Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) | 0;
      return Control_Bind.bind(Lib_Random.bindRandom)(Lib_Random.randomInt(size + 1 | 0))(function (v) {
          return Control_Bind.bind(Lib_Random.bindRandom)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Lib_Random.applicativeRandom)(Data_Array.replicate(v)(Lib_Random.randomInt(size))))(function (v1) {
              return Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Foldable.foldr(Data_Foldable.foldableArray)(toggleCell(state))(Data_Array.replicate(size)(true))(v1));
          });
      });
  };
  var noirblancGame = new Game_Core.Game(function (v) {
      return Data_Maybe.Nothing.value;
  }, function (state) {
      var size = Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) * Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) | 0;
      return Control_Bind.bind(Lib_Random.bindRandom)((function () {
          var $42 = Data_Lens_Getter.viewOn(state)(_level(Data_Lens_Internal_Forget.strongForget)) >= 6;
          if ($42) {
              return genRandomBoard(state);
          };
          return Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Array.replicate(size)(true));
      })())(function (v) {
          return Control_Applicative.pure(Lib_Random.applicativeRandom)({
              light: v,
              played: Data_Array.replicate(size)(false)
          });
      });
  }, function (state) {
      return Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))((Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget))).light);
  }, function (state) {
      var v = Data_Maybe.fromMaybe(new Data_Tuple.Tuple(8, 8))(Data_Array.index(sizes)(Data_Lens_Getter.viewOn(state)(_level(Data_Lens_Internal_Forget.strongForget))));
      return Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Lens_Setter.set(Game_Core["_nbColumns"](Data_Profunctor_Strong.strongFn))(v.value1)(Data_Lens_Setter.set(Game_Core["_nbRows"](Data_Profunctor_Strong.strongFn))(v.value0)(state)));
  }, function (state) {
      return function (index) {
          return Data_Maybe.Just.create(Data_Lens_Setter.over((function () {
              var $65 = _played(Data_Profunctor_Strong.strongFn);
              var $66 = Data_Lens_Index.ix(Data_Lens_Index.indexArray)(index)(Data_Lens_Internal_Wander.wanderFunction);
              return function ($67) {
                  return $65($66($67));
              };
          })())(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Data_Lens_Setter.over(_light(Data_Profunctor_Strong.strongFn))(toggleCell(state)(index))(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)))));
      };
  }, function (v) {
      return new Game_Core.SizeLimit(3, 3, 10, 10);
  }, function (st) {
      return new Data_Tuple.Tuple(st, true);
  });
  var afterPlay = Control_Bind.bind(Run.bindRun)(Pha_Action.getState)(function (v) {
      var mode = Data_Lens_Getter.viewOn(v)(_mode(Data_Lens_Internal_Forget.strongForget));
      return Control_Applicative.when(Run.applicativeRun)(Game_Core.isLevelFinished(noirblancGame)(v))((function () {
          var nextLevel = (function () {
              var $48 = Data_Lens_Getter.viewOn(v)(_level(Data_Lens_Internal_Forget.strongForget)) >= 4;
              if ($48) {
                  return 6;
              };
              return Data_Lens_Getter.viewOn(v)(_level(Data_Lens_Internal_Forget.strongForget)) + (function () {
                  var $49 = mode === 0 || mode === 3;
                  if ($49) {
                      return 1;
                  };
                  return 2;
              })() | 0;
          })();
          return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.setState(Data_Lens_Setter.set((function () {
              var $68 = _maxLevels(Data_Profunctor_Strong.strongFn);
              var $69 = Data_Lens_Index.ix(Data_Lens_Index.indexArray)(mode)(Data_Lens_Internal_Wander.wanderFunction);
              return function ($70) {
                  return $68($69($70));
              };
          })())(nextLevel)))(function () {
              return Game_Core.newGame(noirblancGame)(Data_Lens_Setter.over(_level(Data_Profunctor_Strong.strongFn))(function (lvl) {
                  return Data_Ord.min(Data_Ord.ordInt)(lvl + 1 | 0)(6);
              }));
          });
      })());
  });
  var play2A = function (i) {
      return Control_Apply.applySecond(Run.applyRun)(Game_Core.playA(noirblancGame)(i))(afterPlay);
  };
  var selectLevelA = Game_Core["newGame'"](noirblancGame)(Data_Lens_Setter.set(_level(Data_Profunctor_Strong.strongFn)));
  var selectModeA = function (mode) {
      return Game_Core.newGame(noirblancGame)((function () {
          var $71 = Data_Lens_Setter.set(_mode(Data_Profunctor_Strong.strongFn))(mode);
          var $72 = Data_Lens_Setter.set(_level(Data_Profunctor_Strong.strongFn))(0);
          return function ($73) {
              return $71($72($73));
          };
      })());
  };
  exports["istate"] = istate;
  exports["_mode"] = _mode;
  exports["_level"] = _level;
  exports["_maxLevels"] = _maxLevels;
  exports["selectModeA"] = selectModeA;
  exports["selectLevelA"] = selectLevelA;
  exports["onKeyDown"] = onKeyDown;
  exports["play2A"] = play2A;
  exports["noirblancGame"] = noirblancGame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Noirblanc.View"] = $PS["Game.Noirblanc.View"] || {};
  var exports = $PS["Game.Noirblanc.View"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Game_Core = $PS["Game.Core"];
  var Game_Noirblanc_Model = $PS["Game.Noirblanc.Model"];
  var Lib_Util = $PS["Lib.Util"];
  var Pha = $PS["Pha"];
  var Pha_Html = $PS["Pha.Html"];
  var UI_Icon = $PS["UI.Icon"];
  var UI_Icons = $PS["UI.Icons"];
  var UI_Template = $PS["UI.Template"];                
  var square = function (light) {
      return function (cross) {
          return function (props) {
              return Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html["class'"]("noirblanc-square")(true) ])(props))([ Pha_Html["div'"]([ Pha_Html["class'"]("noirblanc-square-inner")(true), Pha_Html["class'"]("blanc")(light) ])([ Pha_Html["div'"]([ Pha_Html["class'"]("noirblanc-square-blanc")(true) ])((function () {
                  if (cross) {
                      return [ Pha_Html.svguse("#cross")([ Pha_Html["class'"]("ui-absolute noirblanc-cross")(true) ]) ];
                  };
                  return [  ];
              })()), Pha_Html["div'"]([ Pha_Html["class'"]("noirblanc-square-noir")(true) ])((function () {
                  if (cross) {
                      return [ Pha_Html.svguse("#cross")([ Pha_Html["class'"]("ui-absolute noirblanc-cross")(true) ]) ];
                  };
                  return [  ];
              })()) ]) ]);
          };
      };
  };
  var levelOptions = function (v) {
      return function (v1) {
          return function (opt) {
              if (v1) {
                  return {
                      icon: new UI_Icon.IconSymbol("#locked"),
                      selected: opt.selected,
                      tooltip: new Data_Maybe.Just("Difficult\xe9 non d\xe9bloqu\xe9e"),
                      round: opt.round,
                      large: opt.large,
                      hidden: opt.hidden,
                      disabled: true,
                      style: opt.style
                  };
              };
              if (v === 0) {
                  return {
                      icon: new UI_Icon.IconText("3x3"),
                      selected: opt.selected,
                      tooltip: opt.tooltip,
                      round: opt.round,
                      large: opt.large,
                      hidden: opt.hidden,
                      disabled: opt.disabled,
                      style: opt.style
                  };
              };
              if (v === 1) {
                  return {
                      icon: new UI_Icon.IconText("4x4"),
                      selected: opt.selected,
                      tooltip: opt.tooltip,
                      round: opt.round,
                      large: opt.large,
                      hidden: opt.hidden,
                      disabled: opt.disabled,
                      style: opt.style
                  };
              };
              if (v === 2) {
                  return {
                      icon: new UI_Icon.IconText("2x10"),
                      selected: opt.selected,
                      tooltip: opt.tooltip,
                      round: opt.round,
                      large: opt.large,
                      hidden: opt.hidden,
                      disabled: opt.disabled,
                      style: opt.style
                  };
              };
              if (v === 3) {
                  return {
                      icon: new UI_Icon.IconText("3x10"),
                      selected: opt.selected,
                      tooltip: opt.tooltip,
                      round: opt.round,
                      large: opt.large,
                      hidden: opt.hidden,
                      disabled: opt.disabled,
                      style: opt.style
                  };
              };
              if (v === 4) {
                  return {
                      icon: new UI_Icon.IconText("5x5"),
                      selected: opt.selected,
                      tooltip: opt.tooltip,
                      round: opt.round,
                      large: opt.large,
                      hidden: opt.hidden,
                      disabled: opt.disabled,
                      style: opt.style
                  };
              };
              if (v === 5) {
                  return {
                      icon: new UI_Icon.IconText("NxM"),
                      selected: opt.selected,
                      tooltip: new Data_Maybe.Just("Dimensions personnalis\xe9es"),
                      round: opt.round,
                      large: opt.large,
                      hidden: opt.hidden,
                      disabled: opt.disabled,
                      style: opt.style
                  };
              };
              return {
                  icon: new UI_Icon.IconSymbol("#lo-rand"),
                  selected: opt.selected,
                  tooltip: new Data_Maybe.Just("Grille al\xe9atoire"),
                  round: opt.round,
                  large: opt.large,
                  hidden: opt.hidden,
                  disabled: opt.disabled,
                  style: opt.style
              };
          };
      };
  };
  var view = function (state) {
      var rules = [ Pha.text("blablahblah") ];
      var rows = Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget));
      var position = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      var config = UI_Template.card("Tout noir tout blanc")([ UI_Icons.iconSelectGroup(Data_Show.showInt)(Data_Eq.eqInt)(state)("Mode jeu")([ 0, 1, 2, 3 ])(Data_Lens_Getter.viewOn(state)(Game_Noirblanc_Model["_mode"](Data_Lens_Internal_Forget.strongForget)))(Game_Noirblanc_Model.selectModeA)(function (i) {
          return function (v) {
              return {
                  icon: UI_Icon.IconSymbol.create("#lo-mode" + Data_Show.show(Data_Show.showInt)(i + 1 | 0)),
                  selected: v.selected,
                  tooltip: v.tooltip,
                  round: v.round,
                  large: v.large,
                  hidden: v.hidden,
                  disabled: v.disabled,
                  style: v.style
              };
          };
      }), UI_Icons.iconSelectGroup(Data_Show.showInt)(Data_Eq.eqInt)(state)("Difficult\xe9")([ 0, 1, 2, 3, 4, 5, 6 ])(Data_Lens_Getter.viewOn(state)(Game_Noirblanc_Model["_level"](Data_Lens_Internal_Forget.strongForget)))(Game_Noirblanc_Model.selectLevelA)(function (i) {
          return levelOptions(i)(Data_Ord.greaterThan(Data_Maybe.ordMaybe(Data_Ord.ordInt))(new Data_Maybe.Just(i))(Data_Array.index(Data_Lens_Getter.viewOn(state)(Game_Noirblanc_Model["_maxLevels"](Data_Lens_Internal_Forget.strongForget)))(Data_Lens_Getter.viewOn(state)(Game_Noirblanc_Model["_mode"](Data_Lens_Internal_Forget.strongForget)))));
      }), UI_Icons.icongroup("Options")([ UI_Icons.ihelp(state), UI_Icons.ireset(state), UI_Icons.irules(state) ]) ]);
      var columns = Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget));
      var grid = Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html["class'"]("ui-board")(true) ])(UI_Template.gridStyle(rows)(columns)(4)))(Lib_Util.map2(position.light)(position.played)(function (index) {
          return function (light) {
              return function (played) {
                  var v = Lib_Util.coords(columns)(index);
                  return square(light)(Data_Lens_Getter.viewOn(state)(Game_Core["_help"](Data_Lens_Internal_Forget.strongForget)) && played)([ Pha_Html.key(Data_Show.show(Data_Show.showInt)(index)), Pha_Html.style(Pha_Html.unitPc)("height")(Pha_Html.pc(0.86 / Data_Int.toNumber(rows))), Pha_Html.style(Pha_Html.unitPc)("width")(Pha_Html.pc(0.86 / Data_Int.toNumber(columns))), Pha_Html.style(Pha_Html.unitPc)("left")(Pha_Html.pc((Data_Int.toNumber(v.col) + 7.0e-2) / Data_Int.toNumber(columns))), Pha_Html.style(Pha_Html.unitPc)("top")(Pha_Html.pc((Data_Int.toNumber(v.row) + 7.0e-2) / Data_Int.toNumber(rows))), Pha_Html.click(Game_Noirblanc_Model.play2A(index)) ]);
              };
          };
      }));
      var board = UI_Template.incDecGrid(Game_Noirblanc_Model.noirblancGame)(state)([ grid ]);
      return UI_Template.template(Game_Noirblanc_Model.noirblancGame)(function (v) {
          return {
              board: board,
              config: config,
              rules: rules,
              winTitle: "GAGN\xc9",
              customDialog: v.customDialog,
              scoreDialog: v.scoreDialog
          };
      })(state);
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Noirblanc"] = $PS["Game.Noirblanc"] || {};
  var exports = $PS["Game.Noirblanc"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Game = $PS["Game"];
  var Game_Core = $PS["Game.Core"];
  var Game_Noirblanc_Model = $PS["Game.Noirblanc.Model"];
  var Game_Noirblanc_View = $PS["Game.Noirblanc.View"];
  var Pha_Lens = $PS["Pha.Lens"];                
  var State = function (x) {
      return x;
  };
  var state = Game_Noirblanc_Model.istate;
  var _iso = function (dictProfunctor) {
      return Data_Lens_Iso.iso(function (v) {
          return v;
      })(State)(dictProfunctor);
  };
  var cgame = new Game.CGame(Pha_Lens.actionOver(function (dictStrong) {
      return _iso(dictStrong.Profunctor0());
  })(Game_Core.init(Game_Noirblanc_Model.noirblancGame)), function (a) {
      return Pha_Lens.actionOver(function (dictStrong) {
          return _iso(dictStrong.Profunctor0());
      })(Game_Noirblanc_Model.onKeyDown(a));
  }, function (lens) {
      return function (v) {
          return Pha_Lens.viewOver(function (dictStrong) {
              var $9 = lens(dictStrong);
              var $10 = _iso(dictStrong.Profunctor0());
              return function ($11) {
                  return $9($10($11));
              };
          })(Game_Noirblanc_View.view(v));
      };
  });
  exports["state"] = state;
  exports["cgame"] = cgame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Paths.Model"] = $PS["Game.Paths.Model"] || {};
  var exports = $PS["Game.Paths.Model"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Core = $PS["Game.Core"];
  var Lib_Random = $PS["Lib.Random"];
  var Lib_Util = $PS["Lib.Util"];
  var Pha_Action = $PS["Pha.Action"];
  var Run = $PS["Run"];                
  var Mode1 = (function () {
      function Mode1() {

      };
      Mode1.value = new Mode1();
      return Mode1;
  })();
  var Mode2 = (function () {
      function Mode2() {

      };
      Mode2.value = new Mode2();
      return Mode2;
  })();
  var Ext = function (x) {
      return x;
  };
  var showMode = new Data_Show.Show(function (v) {
      return "mode";
  });
  var pathBetween = function (columns) {
      return function (u) {
          return function (v) {
              var v1 = Lib_Util.dCoords(columns)(u)(v);
              var $27 = v1.row === 0;
              if ($27) {
                  return new Data_Maybe.Just((function () {
                      var $28 = u < v;
                      if ($28) {
                          return Lib_Util.rangeStep(u + 1 | 0)(v)(1);
                      };
                      return Lib_Util.rangeStep(u - 1 | 0)(v)(-1 | 0);
                  })());
              };
              var $29 = v1.col === 0;
              if ($29) {
                  return new Data_Maybe.Just((function () {
                      var $30 = u < v;
                      if ($30) {
                          return Lib_Util.rangeStep(u + columns | 0)(v)(columns);
                      };
                      return Lib_Util.rangeStep(u - columns | 0)(v)(-columns | 0);
                  })());
              };
              return Data_Maybe.Nothing.value;
          };
      };
  };
  var istate = Game_Core.genState([  ])(function (v) {
      return {
          position: v.position,
          history: v.history,
          redoHistory: v.redoHistory,
          dialog: v.dialog,
          turn: v.turn,
          nbRows: 4,
          nbColumns: 6,
          customSize: v.customSize,
          mode: v.mode,
          help: v.help,
          locked: v.locked,
          showWin: v.showWin,
          scores: v.scores,
          pointer: v.pointer
      };
  })({
      exit: Data_Maybe.Nothing.value,
      mode: Mode1.value
  });
  var eqMode = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Mode1 && y instanceof Mode1) {
              return true;
          };
          if (x instanceof Mode2 && y instanceof Mode2) {
              return true;
          };
          return false;
      };
  });
  var _ext$prime = function (dictStrong) {
      var $52 = Game_Core["_ext"](dictStrong);
      var $53 = Data_Lens_Iso.iso(function (v) {
          return v;
      })(Ext)(dictStrong.Profunctor0());
      return function ($54) {
          return $52($53($54));
      };
  };
  var _mode = function (dictStrong) {
      var $55 = _ext$prime(dictStrong);
      var $56 = Data_Lens_Lens.lens(function (v) {
          return v.mode;
      })(function (v) {
          return function (v1) {
              return {
                  mode: v1,
                  exit: v.exit
              };
          };
      })(dictStrong);
      return function ($57) {
          return $55($56($57));
      };
  };
  var _exit = function (dictStrong) {
      var $58 = _ext$prime(dictStrong);
      var $59 = Data_Lens_Lens.lens(function (v) {
          return v.exit;
      })(function (v) {
          return function (v1) {
              return {
                  exit: v1,
                  mode: v.mode
              };
          };
      })(dictStrong);
      return function ($60) {
          return $58($59($60));
      };
  };
  var isValidPath = function (state) {
      return function (path) {
          return Data_Maybe.fromMaybe(true)(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Lens_Getter.viewOn(state)(_exit(Data_Lens_Internal_Forget.strongForget)))(function (v) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array_NonEmpty.fromArray(path))(function (v1) {
                  var path2 = Data_Array_NonEmpty.init(v1);
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array_NonEmpty.fromArray(path2))(function (v2) {
                      var path3 = Data_Array_NonEmpty.tail(v2);
                      var begin = Data_Array_NonEmpty.head(v1);
                      var end = Data_Array_NonEmpty.last(v1);
                      return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Data_Array.length(Data_Array.nub(Data_Ord.ordInt)(path2)) === Data_Array.length(path2) && (!Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqInt)(v)(path3) && (!Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqInt)(end)(path3) && (begin !== end || Data_Array.length(path) === ((Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) * Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) | 0) + (function () {
                          var $39 = begin === v;
                          if ($39) {
                              return 1;
                          };
                          return 0;
                      })() | 0) && end === v))));
                  });
              });
          }));
      };
  };
  var pathGame = new Game_Core.Game(function (v) {
      return Data_Maybe.Nothing.value;
  }, function (state) {
      return Control_Applicative.pure(Lib_Random.applicativeRandom)((function () {
          var v = Data_Lens_Getter.viewOn(state)(_exit(Data_Lens_Internal_Forget.strongForget));
          if (v instanceof Data_Maybe.Nothing) {
              return [  ];
          };
          if (v instanceof Data_Maybe.Just) {
              return [ v.value0 ];
          };
          throw new Error("Failed pattern match at Game.Paths.Model (line 69, column 36 - line 71, column 28): " + [ v.constructor.name ]);
      })());
  }, function (state) {
      return Data_Array.length(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget))) === ((Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) * Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) | 0) + (function () {
          var $42 = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_Lens_Getter.viewOn(state)(_exit(Data_Lens_Internal_Forget.strongForget)))(Data_Array.head(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget))));
          if ($42) {
              return 1;
          };
          return 0;
      })() | 0);
  }, function (state) {
      return Data_Functor.map(Lib_Random.functorRandom)(Data_Function.flip(Data_Lens_Setter.set(_exit(Data_Profunctor_Strong.strongFn)))(state))((function () {
          var $43 = Data_Eq.eq(eqMode)(Data_Lens_Getter.viewOn(state)(_mode(Data_Lens_Internal_Forget.strongForget)))(Mode1.value);
          if ($43) {
              return Data_Functor.mapFlipped(Lib_Random.functorRandom)(Lib_Random.randomInt(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) * Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) | 0))(Data_Maybe.Just.create);
          };
          return Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Maybe.Nothing.value);
      })());
  }, function (state) {
      return function (v) {
          var v1 = Data_Array.last(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)));
          if (v1 instanceof Data_Maybe.Nothing) {
              var $45 = Data_Eq.eq(eqMode)(Data_Lens_Getter.viewOn(state)(_mode(Data_Lens_Internal_Forget.strongForget)))(Mode2.value);
              if ($45) {
                  return new Data_Maybe.Just([ v ]);
              };
              return Data_Maybe.Nothing.value;
          };
          if (v1 instanceof Data_Maybe.Just) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(pathBetween(Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)))(v1.value0)(v))(function (v2) {
                  var $47 = !Data_Array["null"](v2) && isValidPath(state)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)))(v2));
                  if ($47) {
                      return new Data_Maybe.Just(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)))(v2));
                  };
                  return Data_Maybe.Nothing.value;
              });
          };
          throw new Error("Failed pattern match at Game.Paths.Model (line 57, column 9 - line 64, column 28): " + [ v1.constructor.name ]);
      };
  }, function (v) {
      return new Game_Core.SizeLimit(2, 2, 9, 9);
  }, function (st) {
      return new Data_Tuple.Tuple(st, true);
  });
  var selectModeA = Game_Core["newGame'"](pathGame)(Data_Lens_Setter.set(_mode(Data_Profunctor_Strong.strongFn)));
  var selectVertexA = function (v) {
      return Control_Bind.bind(Run.bindRun)(Pha_Action.getState)(function (v1) {
          var $50 = Data_Array["null"](Data_Lens_Getter.viewOn(v1)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)));
          if ($50) {
              return Pha_Action.setState(Data_Lens_Setter.set(Game_Core["_position"](Data_Profunctor_Strong.strongFn))([ v ]));
          };
          var $51 = Data_Maybe.isNothing(Data_Lens_Getter.viewOn(v1)(_exit(Data_Lens_Internal_Forget.strongForget)));
          if ($51) {
              return Pha_Action.setState(Data_Lens_Setter.set(_exit(Data_Profunctor_Strong.strongFn))(new Data_Maybe.Just(v)));
          };
          return Game_Core.playA(pathGame)(v);
      });
  };
  exports["Mode1"] = Mode1;
  exports["Mode2"] = Mode2;
  exports["istate"] = istate;
  exports["_exit"] = _exit;
  exports["_mode"] = _mode;
  exports["selectVertexA"] = selectVertexA;
  exports["selectModeA"] = selectModeA;
  exports["eqMode"] = eqMode;
  exports["showMode"] = showMode;
  exports["pathGame"] = pathGame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Paths.View"] = $PS["Game.Paths.View"] || {};
  var exports = $PS["Game.Paths.View"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Core = $PS["Game.Core"];
  var Game_Paths_Model = $PS["Game.Paths.Model"];
  var Lib_Util = $PS["Lib.Util"];
  var Pha = $PS["Pha"];
  var Pha_Html = $PS["Pha.Html"];
  var UI_Icon = $PS["UI.Icon"];
  var UI_Icons = $PS["UI.Icons"];
  var UI_Template = $PS["UI.Template"];                
  var square = function (v) {
      return function (props) {
          return Pha_Html.g(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html["class'"]("paths-darken")(v.darken) ])(props))([ Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(v.x)(v.y)(100.0)(100.0)("#paths-background")([  ]), Pha.ifN(v.door)(function (v1) {
              return Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(v.x)(v.y)(100.0)(100.0)("#paths-door")([  ]);
          }), Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(v.x)(v.y)(100.0)(100.0)("#paths-trap")([ Pha_Html["class'"]("paths-trap")(true), Pha_Html["class'"]("visible")(v.trap && !v.door) ]) ]);
      };
  };
  var heroCursor = function (pp) {
      return Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(-40.0)(-40.0)(80.0)(80.0)(" #meeplehat")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.key("chero"), Pha_Html.attr(Pha_Html.unittoStr)("opacity")("0.6"), Pha_Html.attr(Pha_Html.unittoStr)("pointer-events")("none") ])(UI_Template.svgCursorStyle(pp)));
  };
  var doorCursor = function (pp) {
      return Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(-50.0)(-50.0)(100.0)(100.0)(" #paths-door")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.key("cdoor"), Pha_Html.attr(Pha_Html.unittoStr)("opacity")("0.6"), Pha_Html.attr(Pha_Html.unittoStr)("pointer-events")("none") ])(UI_Template.svgCursorStyle(pp)));
  };
  var view = function (state) {
      var rules = [ Pha_Html.p([  ])([ Pha.text("Apr\xe8s de moultes p\xe9rip\xe9ties dans le temple maudit de Berge, le professeur Hamilton Jones se retrouve dans la derni\xe8re salle"), Pha_Html.br, Pha.text("Pour sortir de celle-ci, il doit s'enfuir par une porte au dessous de lui."), Pha_Html.br, Pha.text("Celle ci ne peut \xeatre ouverte qu'en marchant sur chacune des dalles dans la salle.") ]), Pha_Html.p([  ])([ Pha.text("Malheusement, ces dalles sont pi\xe9g\xe9es, le pi\xe8ge se d\xe9clenchant peu de temps apr\xe8s avoir march\xe9 dessus."), Pha_Html.br, Pha.text("Donc, Hamilton ne peut pas remarcher sur une dalle sur laquelle il a d\xe9j\xe0 \xe9t\xe9."), Pha_Html.br, Pha.text("N'ayant plus l'aisance de sa jeunesse, Hamilton ne peut se d\xe9placer que d'une dalle \xe0 la fois et ne peut le faire en diagonale.") ]), Pha_Html.p([  ])([ Pha.text("Trouve un parcours pour r\xe9soudre l'\xe9nigme. Ca semble facile? Mais, cela est-il possible pour toutes les tailles de grille") ]), Pha_Html.p([  ])([ Pha.text("Dans le deuxi\xe8me mode de jeu, tu peux choisir la position de d\xe9part d'Hamilton ainsi que celle de la porte."), Pha_Html.br, Pha.text("Tu remarqueras qu'il n'y a pas toujours de solution."), Pha_Html.br, Pha.text("Trouve des crit\xe8res sur les positions d'Hamilton et de la porte pour qu'une solution soit possible.") ]) ];
      var rows = Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget));
      var position = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      var config = UI_Template.card("Chemins")([ UI_Icons.iconSelectGroup(Game_Paths_Model.showMode)(Game_Paths_Model.eqMode)(state)("Mode de jeu")([ Game_Paths_Model.Mode1.value, Game_Paths_Model.Mode2.value ])(Data_Lens_Getter.viewOn(state)(Game_Paths_Model["_mode"](Data_Lens_Internal_Forget.strongForget)))(Game_Paths_Model.selectModeA)(function (v) {
          if (v instanceof Game_Paths_Model.Mode1) {
              return function (v1) {
                  return {
                      icon: new UI_Icon.IconSymbol("#paths-mode0"),
                      selected: v1.selected,
                      tooltip: new Data_Maybe.Just("Mode 1"),
                      round: v1.round,
                      large: v1.large,
                      hidden: v1.hidden,
                      disabled: v1.disabled,
                      style: v1.style
                  };
              };
          };
          if (v instanceof Game_Paths_Model.Mode2) {
              return function (v1) {
                  return {
                      icon: new UI_Icon.IconSymbol("#paths-mode1"),
                      selected: v1.selected,
                      tooltip: new Data_Maybe.Just("Mode 2"),
                      round: v1.round,
                      large: v1.large,
                      hidden: v1.hidden,
                      disabled: v1.disabled,
                      style: v1.style
                  };
              };
          };
          throw new Error("Failed pattern match at Game.Paths.View (line 45, column 87 - line 47, column 82): " + [ v.constructor.name ]);
      }), UI_Icons.iconSizesGroup(Game_Paths_Model.pathGame)(state)([ new Data_Tuple.Tuple(4, 6), new Data_Tuple.Tuple(5, 5), new Data_Tuple.Tuple(3, 8) ])(true), UI_Icons.icongroup("Options")(Data_Functor.mapFlipped(Data_Functor.functorArray)([ UI_Icons.ihelp, UI_Icons.iundo, UI_Icons.iredo, UI_Icons.ireset, UI_Icons.irules ])(function (x) {
          return x(state);
      })) ]);
      var columns = Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget));
      var hero = Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Data_Array.last(position))(function (h) {
          var v = Lib_Util.coords(columns)(h);
          return Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(0.0)(0.0)(80.0)(80.0)("#meeplehat")([ Pha_Html.key("hero"), Pha_Html["class'"]("paths-hero")(true), Pha_Html.style(Pha_Html.unittoStr)("transform")(Pha_Html.translate(Pha_Html.unitPc)(Pha_Html.unitPc)(Pha_Html.pc((Data_Int.toNumber(v.col) + 0.1) / Data_Int.toNumber(columns)))(Pha_Html.pc((Data_Int.toNumber(v.row) + 0.1) / Data_Int.toNumber(rows)))) ]);
      });
      var pathdec = Data_String_Common.joinWith(" ")(Data_Array.concat(Data_Array.mapWithIndex(function (i) {
          return function (v) {
              var v1 = Lib_Util.coords(columns)(v);
              return [ (function () {
                  var $21 = i === 0;
                  if ($21) {
                      return "M";
                  };
                  return "L";
              })(), Data_Show.show(Data_Show.showInt)((100 * v1.col | 0) + 50 | 0), Data_Show.show(Data_Show.showInt)((100 * v1.row | 0) + 50 | 0) ];
          };
      })(position)));
      var grid = Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)(UI_Template.gridStyle(rows)(columns)(5))(UI_Template.trackPointer))([ Pha_Html.svg([ Pha_Html.viewBox(0)(0)(100 * columns | 0)(100 * rows | 0) ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Lib_Util.tabulate(rows * columns | 0)(function (index) {
          var v = Lib_Util.coords(columns)(index);
          return square({
              darken: Data_Lens_Getter.viewOn(state)(Game_Core["_help"](Data_Lens_Internal_Forget.strongForget)) && Data_Int.even(v.row + v.col | 0),
              trap: Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqInt)(index)(position) && Data_Eq.notEq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(new Data_Maybe.Just(index))(Data_Array.last(position)),
              door: Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_Lens_Getter.viewOn(state)(Game_Paths_Model["_exit"](Data_Lens_Internal_Forget.strongForget)))(new Data_Maybe.Just(index)),
              x: Data_Int.toNumber(100 * v.col | 0),
              y: Data_Int.toNumber(100 * v.row | 0)
          })([ Pha_Html.key(Data_Show.show(Data_Show.showInt)(index)), Pha_Html.click(Game_Paths_Model.selectVertexA(index)) ]);
      }))([ Pha_Html.path(pathdec)([ Pha_Html["class'"]("paths-path")(true) ]), Pha.maybeN(hero), Pha.maybeN(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Data_Lens_Getter.viewOn(state)(Game_Core["_pointer"](Data_Lens_Internal_Forget.strongForget)))(function (pp) {
          var $27 = Data_Array["null"](position);
          if ($27) {
              return heroCursor(pp);
          };
          var $28 = Data_Maybe.isNothing(Data_Lens_Getter.viewOn(state)(Game_Paths_Model["_exit"](Data_Lens_Internal_Forget.strongForget)));
          if ($28) {
              return doorCursor(pp);
          };
          return Pha.emptyNode;
      })) ])) ]);
      var board = UI_Template.incDecGrid(Game_Paths_Model.pathGame)(state)([ grid ]);
      return UI_Template.template(Game_Paths_Model.pathGame)(function (v) {
          return {
              board: board,
              config: config,
              rules: rules,
              winTitle: v.winTitle,
              customDialog: v.customDialog,
              scoreDialog: v.scoreDialog
          };
      })(state);
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Paths"] = $PS["Game.Paths"] || {};
  var exports = $PS["Game.Paths"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Unit = $PS["Data.Unit"];
  var Game = $PS["Game"];
  var Game_Core = $PS["Game.Core"];
  var Game_Paths_Model = $PS["Game.Paths.Model"];
  var Game_Paths_View = $PS["Game.Paths.View"];
  var Pha_Lens = $PS["Pha.Lens"];
  var Run = $PS["Run"];                
  var State = function (x) {
      return x;
  };
  var state = Game_Paths_Model.istate;
  var _iso = function (dictProfunctor) {
      return Data_Lens_Iso.iso(function (v) {
          return v;
      })(State)(dictProfunctor);
  };
  var cgame = new Game.CGame(Pha_Lens.actionOver(function (dictStrong) {
      return _iso(dictStrong.Profunctor0());
  })(Game_Core.init(Game_Paths_Model.pathGame)), function (v) {
      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
  }, function (lens) {
      return function (v) {
          return Pha_Lens.viewOver(function (dictStrong) {
              var $9 = lens(dictStrong);
              var $10 = _iso(dictStrong.Profunctor0());
              return function ($11) {
                  return $9($10($11));
              };
          })(Game_Paths_View.view(v));
      };
  });
  exports["state"] = state;
  exports["cgame"] = cgame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Queens.Model"] = $PS["Game.Queens.Model"] || {};
  var exports = $PS["Game.Queens.Model"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Array_NonEmpty_Internal = $PS["Data.Array.NonEmpty.Internal"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Index = $PS["Data.Lens.Index"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Wander = $PS["Data.Lens.Internal.Wander"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Core = $PS["Game.Core"];
  var Lib_Random = $PS["Lib.Random"];
  var Lib_Util = $PS["Lib.Util"];
  var Pha_Action = $PS["Pha.Action"];                
  var Rook = (function () {
      function Rook() {

      };
      Rook.value = new Rook();
      return Rook;
  })();
  var Bishop = (function () {
      function Bishop() {

      };
      Bishop.value = new Bishop();
      return Bishop;
  })();
  var King = (function () {
      function King() {

      };
      King.value = new King();
      return King;
  })();
  var Knight = (function () {
      function Knight() {

      };
      Knight.value = new Knight();
      return Knight;
  })();
  var Queen = (function () {
      function Queen() {

      };
      Queen.value = new Queen();
      return Queen;
  })();
  var Custom = (function () {
      function Custom() {

      };
      Custom.value = new Custom();
      return Custom;
  })();
  var Empty = (function () {
      function Empty() {

      };
      Empty.value = new Empty();
      return Empty;
  })();
  var Ext = function (x) {
      return x;
  };
  var sign = function (v) {
      if (v === 0) {
          return 0;
      };
      var $44 = v > 0;
      if ($44) {
          return 1;
      };
      return -1 | 0;
  };
  var showPiece = new Data_Show.Show(function (v) {
      if (v instanceof Queen) {
          return "queen";
      };
      if (v instanceof King) {
          return "king";
      };
      if (v instanceof Rook) {
          return "rook";
      };
      if (v instanceof Bishop) {
          return "bishop";
      };
      if (v instanceof Knight) {
          return "knight";
      };
      return "custom";
  });
  var piecesList = [ Rook.value, Bishop.value, King.value, Knight.value, Queen.value ];
  var legalMoves = function (v) {
      return function (v1) {
          return function (v2) {
              if (v instanceof Queen) {
                  return ((((v1 * v1 | 0) - (v2 * v2 | 0) | 0) * v1 | 0) * v2 | 0) === 0;
              };
              if (v instanceof King) {
                  return ((v1 * v1 | 0) + (v2 * v2 | 0) | 0) <= 2;
              };
              if (v instanceof Rook) {
                  return (v1 * v2 | 0) === 0;
              };
              if (v instanceof Bishop) {
                  return ((v1 * v1 | 0) - (v2 * v2 | 0) | 0) === 0;
              };
              if (v instanceof Knight) {
                  return ((v1 * v1 | 0) + (v2 * v2 | 0) | 0) === 5;
              };
              return false;
          };
      };
  };
  var istate = Game_Core.genState([  ])(function (v) {
      return {
          position: v.position,
          history: v.history,
          redoHistory: v.redoHistory,
          dialog: v.dialog,
          turn: v.turn,
          nbRows: 8,
          nbColumns: 8,
          customSize: v.customSize,
          mode: v.mode,
          help: v.help,
          locked: v.locked,
          showWin: v.showWin,
          scores: v.scores,
          pointer: v.pointer
      };
  })({
      selectedPiece: Queen.value,
      selectedSquare: Data_Maybe.Nothing.value,
      allowedPieces: Data_Array_NonEmpty.singleton(Rook.value),
      multiPieces: false,
      customLocalMoves: Data_Array.replicate(25)(false),
      customDirections: Data_Array.replicate(9)(false)
  });
  var eqPiece = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Rook && y instanceof Rook) {
              return true;
          };
          if (x instanceof Bishop && y instanceof Bishop) {
              return true;
          };
          if (x instanceof King && y instanceof King) {
              return true;
          };
          if (x instanceof Knight && y instanceof Knight) {
              return true;
          };
          if (x instanceof Queen && y instanceof Queen) {
              return true;
          };
          if (x instanceof Custom && y instanceof Custom) {
              return true;
          };
          if (x instanceof Empty && y instanceof Empty) {
              return true;
          };
          return false;
      };
  });
  var toggleAllowedPiece = function (piece) {
      return function (v) {
          return function (pieces) {
              if (!v) {
                  return Data_Array_NonEmpty.singleton(piece);
              };
              if (v) {
                  var pieces2 = Data_Array.filter(function (p2) {
                      return Data_Eq.eq(eqPiece)(p2)(piece) !== Data_Foldable.elem(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(eqPiece)(p2)(pieces);
                  })(piecesList);
                  return Data_Maybe.fromMaybe(pieces)(Data_Array_NonEmpty.fromArray(pieces2));
              };
              throw new Error("Failed pattern match at Game.Queens.Model (line 120, column 1 - line 120, column 91): " + [ piece.constructor.name, v.constructor.name, pieces.constructor.name ]);
          };
      };
  };
  var _ext$prime = function (dictStrong) {
      var $66 = Game_Core["_ext"](dictStrong);
      var $67 = Data_Lens_Iso.iso(function (v) {
          return v;
      })(Ext)(dictStrong.Profunctor0());
      return function ($68) {
          return $66($67($68));
      };
  };
  var _multiPieces = function (dictStrong) {
      var $69 = _ext$prime(dictStrong);
      var $70 = Data_Lens_Lens.lens(function (v) {
          return v.multiPieces;
      })(function (v) {
          return function (v1) {
              return {
                  multiPieces: v1,
                  allowedPieces: v.allowedPieces,
                  customDirections: v.customDirections,
                  customLocalMoves: v.customLocalMoves,
                  selectedPiece: v.selectedPiece,
                  selectedSquare: v.selectedSquare
              };
          };
      })(dictStrong);
      return function ($71) {
          return $69($70($71));
      };
  };
  var toggleMultiPiecesA = Pha_Action.setState(Data_Lens_Setter.over(_multiPieces(Data_Profunctor_Strong.strongFn))(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean)));
  var _selectedPiece = function (dictStrong) {
      var $72 = _ext$prime(dictStrong);
      var $73 = Data_Lens_Lens.lens(function (v) {
          return v.selectedPiece;
      })(function (v) {
          return function (v1) {
              return {
                  selectedPiece: v1,
                  allowedPieces: v.allowedPieces,
                  customDirections: v.customDirections,
                  customLocalMoves: v.customLocalMoves,
                  multiPieces: v.multiPieces,
                  selectedSquare: v.selectedSquare
              };
          };
      })(dictStrong);
      return function ($74) {
          return $72($73($74));
      };
  };
  var selectPieceA = function (piece) {
      return Pha_Action.setState(Data_Lens_Setter.set(_selectedPiece(Data_Profunctor_Strong.strongFn))(piece));
  };
  var _selectedSquare = function (dictStrong) {
      var $75 = _ext$prime(dictStrong);
      var $76 = Data_Lens_Lens.lens(function (v) {
          return v.selectedSquare;
      })(function (v) {
          return function (v1) {
              return {
                  selectedSquare: v1,
                  allowedPieces: v.allowedPieces,
                  customDirections: v.customDirections,
                  customLocalMoves: v.customLocalMoves,
                  multiPieces: v.multiPieces,
                  selectedPiece: v.selectedPiece
              };
          };
      })(dictStrong);
      return function ($77) {
          return $75($76($77));
      };
  };
  var selectSquareA = function (a) {
      return Pha_Action.setState(Data_Lens_Setter.set(_selectedSquare(Data_Profunctor_Strong.strongFn))(a));
  };
  var _customLocalMoves = function (dictStrong) {
      var $78 = _ext$prime(dictStrong);
      var $79 = Data_Lens_Lens.lens(function (v) {
          return v.customLocalMoves;
      })(function (v) {
          return function (v1) {
              return {
                  customLocalMoves: v1,
                  allowedPieces: v.allowedPieces,
                  customDirections: v.customDirections,
                  multiPieces: v.multiPieces,
                  selectedPiece: v.selectedPiece,
                  selectedSquare: v.selectedSquare
              };
          };
      })(dictStrong);
      return function ($80) {
          return $78($79($80));
      };
  };
  var _customDirections = function (dictStrong) {
      var $81 = _ext$prime(dictStrong);
      var $82 = Data_Lens_Lens.lens(function (v) {
          return v.customDirections;
      })(function (v) {
          return function (v1) {
              return {
                  customDirections: v1,
                  allowedPieces: v.allowedPieces,
                  customLocalMoves: v.customLocalMoves,
                  multiPieces: v.multiPieces,
                  selectedPiece: v.selectedPiece,
                  selectedSquare: v.selectedSquare
              };
          };
      })(dictStrong);
      return function ($83) {
          return $81($82($83));
      };
  };
  var canCapture = function (state) {
      return function (piece) {
          return function (index1) {
              return function (index2) {
                  var v = Lib_Util.dCoords(Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)))(index2)(index1);
                  var $56 = Data_Eq.notEq(eqPiece)(piece)(Custom.value);
                  if ($56) {
                      return index1 !== index2 && legalMoves(piece)(v.row)(v.col);
                  };
                  return ((((v.row * v.row | 0) - (v.col * v.col | 0) | 0) * v.row | 0) * v.col | 0) === 0 && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqBoolean))(Data_Array.index(Data_Lens_Getter.viewOn(state)(_customDirections(Data_Lens_Internal_Forget.strongForget)))(((3 * sign(v.row) | 0) + sign(v.col) | 0) + 4 | 0))(new Data_Maybe.Just(true)) || ((v.row * v.row | 0) + (v.col * v.col | 0) | 0) <= 8 && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqBoolean))(Data_Array.index(Data_Lens_Getter.viewOn(state)(_customLocalMoves(Data_Lens_Internal_Forget.strongForget)))(((5 * v.row | 0) + v.col | 0) + 12 | 0))(new Data_Maybe.Just(true));
              };
          };
      };
  };
  var attackedBy = function (state) {
      return function (piece) {
          return function (index) {
              return Lib_Util.tabulate(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) * Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) | 0)(canCapture(state)(piece)(index));
          };
      };
  };
  var attackedBySelected = function (state) {
      var v = Data_Lens_Getter.viewOn(state)(_selectedSquare(Data_Lens_Internal_Forget.strongForget));
      if (v instanceof Data_Maybe.Nothing) {
          return Data_Array.replicate(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) * Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) | 0)(false);
      };
      if (v instanceof Data_Maybe.Just) {
          return attackedBy(state)(Data_Lens_Getter.viewOn(state)(_selectedPiece(Data_Lens_Internal_Forget.strongForget)))(v.value0);
      };
      throw new Error("Failed pattern match at Game.Queens.Model (line 95, column 28 - line 97, column 65): " + [ v.constructor.name ]);
  };
  var capturableSquares = function (state) {
      return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (v) {
          var $62 = Data_Eq.eq(eqPiece)(v.value1)(Empty.value);
          if ($62) {
              return Control_Category.identity(Control_Category.categoryFn);
          };
          return Data_Array.zipWith(Data_HeytingAlgebra.disj(Data_HeytingAlgebra.heytingAlgebraBoolean))(attackedBy(state)(v.value1)(v.value0));
      })(Data_Array.replicate(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) * Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) | 0)(false))(Data_Array.mapWithIndex(Data_Tuple.Tuple.create)(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget))));
  };
  var _allowedPieces = function (dictStrong) {
      var $84 = _ext$prime(dictStrong);
      var $85 = Data_Lens_Lens.lens(function (v) {
          return v.allowedPieces;
      })(function (v) {
          return function (v1) {
              return {
                  allowedPieces: v1,
                  customDirections: v.customDirections,
                  customLocalMoves: v.customLocalMoves,
                  multiPieces: v.multiPieces,
                  selectedPiece: v.selectedPiece,
                  selectedSquare: v.selectedSquare
              };
          };
      })(dictStrong);
      return function ($86) {
          return $84($85($86));
      };
  };
  var queensScoreGame = new Game_Core.ScoreGame(function () {
      return queensGame;
  }, function (state) {
      return Data_Lens_Getter.viewOn(state)(_multiPieces(Data_Lens_Internal_Forget.strongForget)) || Data_Eq.eq(eqPiece)(Data_Array_NonEmpty.head(Data_Lens_Getter.viewOn(state)(_allowedPieces(Data_Lens_Internal_Forget.strongForget))))(Custom.value);
  }, function (v) {
      return Game_Core.Maximize.value;
  }, (function () {
      var $87 = Data_Array.filter(function (v) {
          return Data_Eq.notEq(eqPiece)(v)(Empty.value);
      });
      var $88 = Data_Lens_Getter.view(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      return function ($89) {
          return Data_Array.length($87($88($89)));
      };
  })(), function (state) {
      return Data_String_Common.joinWith("-")([ Data_Show.show(Data_Show.showInt)(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget))), Data_Show.show(Data_Show.showInt)(Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget))), Data_Show.show(showPiece)(Data_Array_NonEmpty.head(Data_Lens_Getter.viewOn(state)(_allowedPieces(Data_Lens_Internal_Forget.strongForget)))) ]);
  });
  var queensGame = new Game_Core.Game(function (v) {
      return Data_Maybe.Nothing.value;
  }, function (state) {
      return Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Array.replicate(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) * Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) | 0)(Empty.value));
  }, function (state) {
      return Data_Foldable.and(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Lib_Util.map2(capturableSquares(state))(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)))(function (v) {
          return function (captured) {
              return function (piece) {
                  return !captured || Data_Eq.eq(eqPiece)(piece)(Empty.value);
              };
          };
      }));
  }, function (state) {
      return Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Lens_Setter.set(_selectedPiece(Data_Profunctor_Strong.strongFn))(Data_Array_NonEmpty.head(Data_Lens_Getter.viewOn(state)(_allowedPieces(Data_Lens_Internal_Forget.strongForget))))(state));
  }, function (state) {
      return function (index) {
          var selectedPiece = Data_Lens_Getter.viewOn(state)(_selectedPiece(Data_Lens_Internal_Forget.strongForget));
          return Data_Array.modifyAt(index)(function (t) {
              var $65 = Data_Eq.eq(eqPiece)(t)(selectedPiece);
              if ($65) {
                  return Empty.value;
              };
              return selectedPiece;
          })(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)));
      };
  }, function (v) {
      return new Game_Core.SizeLimit(3, 3, 9, 9);
  }, Game_Core["updateScore'"](queensScoreGame)(Game_Core.NeverShowWin.value));
  var customizeA = Game_Core.newGame(queensGame)((function () {
      var $90 = Data_Lens_Setter.set(_allowedPieces(Data_Profunctor_Strong.strongFn))(Data_Array_NonEmpty.singleton(Custom.value));
      var $91 = Data_Lens_Setter.set(Game_Core["_dialog"](Data_Profunctor_Strong.strongFn))(Game_Core.CustomDialog.value);
      var $92 = Data_Lens_Setter.set(_multiPieces(Data_Profunctor_Strong.strongFn))(false);
      return function ($93) {
          return $90($91($92($93)));
      };
  })());
  var flipDirectionA = function (direction) {
      return Game_Core.newGame(queensGame)(Data_Lens_Setter.over((function () {
          var $94 = _customDirections(Data_Profunctor_Strong.strongFn);
          var $95 = Data_Lens_Index.ix(Data_Lens_Index.indexArray)(direction)(Data_Lens_Internal_Wander.wanderFunction);
          return function ($96) {
              return $94($95($96));
          };
      })())(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean)));
  };
  var flipLocalMoveA = function (position) {
      return Game_Core.newGame(queensGame)(Data_Lens_Setter.over((function () {
          var $97 = _customLocalMoves(Data_Profunctor_Strong.strongFn);
          var $98 = Data_Lens_Index.ix(Data_Lens_Index.indexArray)(position)(Data_Lens_Internal_Wander.wanderFunction);
          return function ($99) {
              return $97($98($99));
          };
      })())(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean)));
  };
  var selectAllowedPieceA = function (piece) {
      return Game_Core.newGame(queensGame)(function (state) {
          return Data_Lens_Setter.over(_allowedPieces(Data_Profunctor_Strong.strongFn))(toggleAllowedPiece(piece)(Data_Lens_Getter.viewOn(state)(_multiPieces(Data_Lens_Internal_Forget.strongForget))))(state);
      });
  };
  exports["piecesList"] = piecesList;
  exports["Rook"] = Rook;
  exports["Bishop"] = Bishop;
  exports["King"] = King;
  exports["Knight"] = Knight;
  exports["Queen"] = Queen;
  exports["Custom"] = Custom;
  exports["Empty"] = Empty;
  exports["istate"] = istate;
  exports["_selectedPiece"] = _selectedPiece;
  exports["_selectedSquare"] = _selectedSquare;
  exports["_allowedPieces"] = _allowedPieces;
  exports["_multiPieces"] = _multiPieces;
  exports["_customLocalMoves"] = _customLocalMoves;
  exports["_customDirections"] = _customDirections;
  exports["capturableSquares"] = capturableSquares;
  exports["attackedBySelected"] = attackedBySelected;
  exports["selectPieceA"] = selectPieceA;
  exports["selectSquareA"] = selectSquareA;
  exports["selectAllowedPieceA"] = selectAllowedPieceA;
  exports["toggleMultiPiecesA"] = toggleMultiPiecesA;
  exports["flipDirectionA"] = flipDirectionA;
  exports["flipLocalMoveA"] = flipLocalMoveA;
  exports["customizeA"] = customizeA;
  exports["eqPiece"] = eqPiece;
  exports["showPiece"] = showPiece;
  exports["queensGame"] = queensGame;
  exports["queensScoreGame"] = queensScoreGame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Queens.View"] = $PS["Game.Queens.View"] || {};
  var exports = $PS["Game.Queens.View"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Array = $PS["Data.Array"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Array_NonEmpty_Internal = $PS["Data.Array.NonEmpty.Internal"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Game_Core = $PS["Game.Core"];
  var Game_Queens_Model = $PS["Game.Queens.Model"];
  var Lib_Util = $PS["Lib.Util"];
  var Pha = $PS["Pha"];
  var Pha_Html = $PS["Pha.Html"];
  var Run = $PS["Run"];
  var UI_Icon = $PS["UI.Icon"];
  var UI_Icons = $PS["UI.Icons"];
  var UI_Template = $PS["UI.Template"];                
  var tooltip = function (v) {
      if (v instanceof Game_Queens_Model.Queen) {
          return "Reine";
      };
      if (v instanceof Game_Queens_Model.King) {
          return "Roi";
      };
      if (v instanceof Game_Queens_Model.Rook) {
          return "Tour";
      };
      if (v instanceof Game_Queens_Model.Bishop) {
          return "Fou";
      };
      if (v instanceof Game_Queens_Model.Knight) {
          return "Cavalier";
      };
      return "Pi\xe8ce personnalis\xe9e";
  };
  var square = function (v) {
      return function (props) {
          return Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)(props)([ Pha_Html["class'"]("queens-square")(true), Pha_Html["class'"]("queens-square-capturable")(v.capturable), Pha_Html["class'"]("queens-square-nonavailable")(v.nonavailable), Pha_Html["class'"]("queens-square-selected")(v.selected) ]))((function () {
              var $13 = Data_Eq.eq(Game_Queens_Model.eqPiece)(v.piece)(Game_Queens_Model.Empty.value);
              if ($13) {
                  return [  ];
              };
              return [ Pha_Html.svg([ Pha_Html.width(Pha_Html.unittoStr)("100%"), Pha_Html.height(Pha_Html.unittoStr)("100%"), Pha_Html["class'"]("queens-piece")(true) ])([ Pha_Html.use(Pha_Html.unittoStr)(Pha_Html.unittoStr)(Pha_Html.unittoStr)(Pha_Html.unittoStr)("10%")("10%")("80%")("80%")("#piece-" + Data_Show.show(Game_Queens_Model.showPiece)(v.piece))([  ]) ]) ];
          })());
      };
  };
  var view = function (state) {
      var rules = [ Pha.text("Place le plus de pi\xe8ces possible sur ta grille sans qu'aucune ne soit menac\xe9e par une autre pi\xe8ce."), Pha_Html.br, Pha.text("Tu peux choisir de jouer avec diff\xe9rentes pi\xe8ces comme celles du jeu d'\xe9checs.") ];
      var rows = Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget));
      var position = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      var pieceSelector = Pha_Html["div'"]([ Pha_Html["class'"]("ui-flex-center gutter2 queens-pieceselector")(true) ])(Data_Functor.mapFlipped(Data_Functor.functorArray)(Data_Array_NonEmpty.toArray(Data_Lens_Getter.viewOn(state)(Game_Queens_Model["_allowedPieces"](Data_Lens_Internal_Forget.strongForget))))(function (piece) {
          var name = Data_Show.show(Game_Queens_Model.showPiece)(piece);
          return UI_Icons.iconbutton(state)(function (v) {
              return {
                  icon: UI_Icon.IconSymbol.create("#piece-" + name),
                  selected: Data_Eq.eq(Game_Queens_Model.eqPiece)(piece)(Data_Lens_Getter.viewOn(state)(Game_Queens_Model["_selectedPiece"](Data_Lens_Internal_Forget.strongForget))),
                  tooltip: v.tooltip,
                  round: v.round,
                  large: v.large,
                  hidden: v.hidden,
                  disabled: v.disabled,
                  style: v.style
              };
          })([ Pha_Html.key(name), Pha_Html.click(Game_Queens_Model.selectPieceA(piece)) ]);
      }));
      var config = UI_Template.card("Les reines")([ UI_Icons.iconSizesGroup(Game_Queens_Model.queensGame)(state)([ new Data_Tuple.Tuple(4, 4), new Data_Tuple.Tuple(5, 5), new Data_Tuple.Tuple(7, 7), new Data_Tuple.Tuple(8, 8) ])(true), UI_Icons.iconSelectGroupM(Game_Queens_Model.showPiece)(Game_Queens_Model.eqPiece)(Data_Array_NonEmpty_Internal.foldableNonEmptyArray)(state)("Pi\xe8ces disponibles")(Game_Queens_Model.piecesList)(Data_Lens_Getter.viewOn(state)(Game_Queens_Model["_allowedPieces"](Data_Lens_Internal_Forget.strongForget)))(Game_Queens_Model.selectAllowedPieceA)(function (piece) {
          return function (v) {
              return {
                  icon: UI_Icon.IconSymbol.create("#piece-" + Data_Show.show(Game_Queens_Model.showPiece)(piece)),
                  selected: v.selected,
                  tooltip: Data_Maybe.Just.create(tooltip(piece)),
                  round: v.round,
                  large: v.large,
                  hidden: v.hidden,
                  disabled: v.disabled,
                  style: v.style
              };
          };
      }), UI_Icons.icongroup("Options")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ UI_Icons.iconbutton(state)(function (v) {
          return {
              icon: new UI_Icon.IconSymbol("#customize"),
              selected: Data_Eq.eq(Game_Queens_Model.eqPiece)(Data_Array_NonEmpty.head(Data_Lens_Getter.viewOn(state)(Game_Queens_Model["_allowedPieces"](Data_Lens_Internal_Forget.strongForget))))(Game_Queens_Model.Custom.value),
              tooltip: new Data_Maybe.Just("Cr\xe9e ta propre propre pi\xe8ce"),
              round: v.round,
              large: v.large,
              hidden: v.hidden,
              disabled: v.disabled,
              style: v.style
          };
      })([ Pha_Html.click(Game_Queens_Model.customizeA) ]), UI_Icons.iconbutton(state)(function (v) {
          return {
              icon: new UI_Icon.IconSymbol("#piece-mix"),
              selected: Data_Lens_Getter.viewOn(state)(Game_Queens_Model["_multiPieces"](Data_Lens_Internal_Forget.strongForget)),
              tooltip: new Data_Maybe.Just("Mode mixte"),
              round: v.round,
              large: v.large,
              hidden: v.hidden,
              disabled: v.disabled,
              style: v.style
          };
      })([ Pha_Html.click(Game_Queens_Model.toggleMultiPiecesA) ]) ])([ UI_Icons.ihelp(state), UI_Icons.ireset(state), UI_Icons.irules(state) ])), UI_Icons.iconBestScore(Game_Queens_Model.queensScoreGame)(state) ]);
      var columns = Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget));
      var cursor = function (pp) {
          return Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html["class'"]("ui-cursor")(true) ])(UI_Template.cursorStyle(pp)(rows)(columns)(0.8)))([ Pha_Html.svguse("#piece-" + Data_Show.show(Game_Queens_Model.showPiece)(Data_Lens_Getter.viewOn(state)(Game_Queens_Model["_selectedPiece"](Data_Lens_Internal_Forget.strongForget))))([  ]) ]);
      };
      var grid = Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html["class'"]("ui-board")(true) ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(UI_Template.gridStyle(rows)(columns)(5))(UI_Template.trackPointer)))(Data_Array.concat([ Lib_Util.map3(position)(Game_Queens_Model.attackedBySelected(state))(Game_Queens_Model.capturableSquares(state))(function (index) {
          return function (piece) {
              return function (attacked) {
                  return function (capturable) {
                      return square({
                          piece: piece,
                          selected: attacked || Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_Lens_Getter.viewOn(state)(Game_Queens_Model["_selectedSquare"](Data_Lens_Internal_Forget.strongForget)))(new Data_Maybe.Just(index)),
                          nonavailable: Data_Lens_Getter.viewOn(state)(Game_Core["_help"](Data_Lens_Internal_Forget.strongForget)) && (Data_Eq.notEq(Game_Queens_Model.eqPiece)(piece)(Game_Queens_Model.Empty.value) || capturable),
                          capturable: capturable
                      })([ Pha_Html.style(Pha_Html.unitPc)("width")(Pha_Html.pc(1.0 / Data_Int.toNumber(columns))), Pha_Html.style(Pha_Html.unitPc)("height")(Pha_Html.pc(1.0 / Data_Int.toNumber(rows))), Pha_Html.click(Game_Core.playA(Game_Queens_Model.queensGame)(index)), Pha_Html.pointerenter(Game_Queens_Model.selectSquareA(new Data_Maybe.Just(index))), Pha_Html.pointerleave(Game_Queens_Model.selectSquareA(Data_Maybe.Nothing.value)) ]);
                  };
              };
          };
      }), [ Pha.maybeN(Data_Functor.map(Data_Maybe.functorMaybe)(cursor)(Data_Lens_Getter.viewOn(state)(Game_Core["_pointer"](Data_Lens_Internal_Forget.strongForget)))) ] ]));
      var scoreDialog = function (v) {
          return UI_Template.bestScoreDialog(Game_Queens_Model.queensScoreGame)(state)(function (pos) {
              return [ Pha_Html["div'"]([ Pha_Html["class'"]("ui-flex-center queens-bestscore-container")(true) ])([ Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)(UI_Template.gridStyle(rows)(columns)(5))([ Pha_Html["class'"]("ui-board queens-grid")(true) ]))(Data_Functor.mapFlipped(Data_Functor.functorArray)(pos)(function (piece) {
                  return square({
                      piece: piece,
                      capturable: false,
                      selected: false,
                      nonavailable: false
                  })([ Pha_Html.style(Pha_Html.unitPc)("width")(Pha_Html.pc(1.0 / Data_Int.toNumber(columns))), Pha_Html.style(Pha_Html.unitPc)("height")(Pha_Html.pc(1.0 / Data_Int.toNumber(rows))) ]);
              })) ]) ];
          });
      };
      var board = Pha_Html["div'"]([  ])([ pieceSelector, UI_Template.incDecGrid(Game_Queens_Model.queensGame)(state)([ grid ]) ]);
      var angles = [ 45, 90, 135, 0, 0, 180, -45 | 0, -90 | 0, -135 | 0 ];
      var customDialog = function (v) {
          return UI_Template.dialog("Personnalise ta pi\xe8ce")([ Pha_Html["div'"]([ Pha_Html["class'"]("flex queens-custompiece")(true) ])([ Pha_Html["div'"]([ Pha_Html["class'"]("queens-grid queens-custompiece-grid")(true) ])(Data_Array.mapWithIndex(function (index) {
              return function (selected) {
                  return square({
                      piece: (function () {
                          var $18 = index === 12;
                          if ($18) {
                              return Game_Queens_Model.Custom.value;
                          };
                          return Game_Queens_Model.Empty.value;
                      })(),
                      selected: selected,
                      capturable: false,
                      nonavailable: false
                  })([ Pha_Html.key(Data_Show.show(Data_Show.showInt)(index)), Pha_Html.style(Pha_Html.unittoStr)("width")("20%"), Pha_Html.style(Pha_Html.unittoStr)("height")("20%"), Pha_Html.click((function () {
                      var $19 = index !== 12;
                      if ($19) {
                          return Game_Queens_Model.flipLocalMoveA(index);
                      };
                      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
                  })()) ]);
              };
          })(Data_Lens_Getter.viewOn(state)(Game_Queens_Model["_customLocalMoves"](Data_Lens_Internal_Forget.strongForget)))), Pha_Html["div'"]([ Pha_Html["class'"]("flex queens-custompiece-directions")(true) ])(Lib_Util.map2(Data_Lens_Getter.viewOn(state)(Game_Queens_Model["_customDirections"](Data_Lens_Internal_Forget.strongForget)))(angles)(function (i) {
              return function (selected) {
                  return function (angle) {
                      return UI_Icons.iconbutton(state)(function (v1) {
                          return {
                              icon: (function () {
                                  var $20 = i === 4;
                                  if ($20) {
                                      return UI_Icon.IconNone.value;
                                  };
                                  return new UI_Icon.IconSymbol("#arrow");
                              })(),
                              selected: selected,
                              tooltip: v1.tooltip,
                              round: v1.round,
                              large: v1.large,
                              hidden: v1.hidden,
                              disabled: v1.disabled,
                              style: [ new Data_Tuple.Tuple("transform", "rotate(" + (Data_Show.show(Data_Show.showInt)(angle) + "deg)")) ]
                          };
                      })([ Pha_Html.key(Data_Show.show(Data_Show.showInt)(i)), Pha_Html.click((function () {
                          var $21 = i !== 4;
                          if ($21) {
                              return Game_Queens_Model.flipDirectionA(i);
                          };
                          return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
                      })()) ]);
                  };
              };
          })) ]) ]);
      };
      return UI_Template.template(Game_Queens_Model.queensGame)(function (v) {
          return {
              board: board,
              config: config,
              rules: rules,
              winTitle: v.winTitle,
              customDialog: customDialog,
              scoreDialog: scoreDialog
          };
      })(state);
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Queens"] = $PS["Game.Queens"] || {};
  var exports = $PS["Game.Queens"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Unit = $PS["Data.Unit"];
  var Game = $PS["Game"];
  var Game_Core = $PS["Game.Core"];
  var Game_Queens_Model = $PS["Game.Queens.Model"];
  var Game_Queens_View = $PS["Game.Queens.View"];
  var Pha_Lens = $PS["Pha.Lens"];
  var Run = $PS["Run"];                
  var State = function (x) {
      return x;
  };
  var state = Game_Queens_Model.istate;
  var _iso = function (dictProfunctor) {
      return Data_Lens_Iso.iso(function (v) {
          return v;
      })(State)(dictProfunctor);
  };
  var cgame = new Game.CGame(Pha_Lens.actionOver(function (dictStrong) {
      return _iso(dictStrong.Profunctor0());
  })(Game_Core.init(Game_Queens_Model.queensGame)), function (v) {
      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
  }, function (lens) {
      return function (v) {
          return Pha_Lens.viewOver(function (dictStrong) {
              var $9 = lens(dictStrong);
              var $10 = _iso(dictStrong.Profunctor0());
              return function ($11) {
                  return $9($10($11));
              };
          })(Game_Queens_View.view(v));
      };
  });
  exports["state"] = state;
  exports["cgame"] = cgame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Roue.Model"] = $PS["Game.Roue.Model"] || {};
  var exports = $PS["Game.Roue.Model"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Index = $PS["Data.Lens.Index"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Wander = $PS["Data.Lens.Internal.Wander"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Game_Core = $PS["Game.Core"];
  var Lib_Random = $PS["Lib.Random"];
  var Lib_Util = $PS["Lib.Util"];
  var Pha_Action = $PS["Pha.Action"];
  var Run = $PS["Run"];                
  var Panel = (function () {
      function Panel(value0) {
          this.value0 = value0;
      };
      Panel.create = function (value0) {
          return new Panel(value0);
      };
      return Panel;
  })();
  var Wheel = (function () {
      function Wheel(value0) {
          this.value0 = value0;
      };
      Wheel.create = function (value0) {
          return new Wheel(value0);
      };
      return Wheel;
  })();
  var Board = (function () {
      function Board() {

      };
      Board.value = new Board();
      return Board;
  })();
  var Ext = function (x) {
      return x;
  };
  var istate = Game_Core.genState([  ])(Control_Category.identity(Control_Category.categoryFn))({
      rotation: 0,
      size: 5,
      dragged: Data_Maybe.Nothing.value
  });
  var eqLoc = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Panel && y instanceof Panel) {
              return x.value0 === y.value0;
          };
          if (x instanceof Wheel && y instanceof Wheel) {
              return x.value0 === y.value0;
          };
          if (x instanceof Board && y instanceof Board) {
              return true;
          };
          return false;
      };
  });
  var _ext$prime = function (dictStrong) {
      var $53 = Game_Core["_ext"](dictStrong);
      var $54 = Data_Lens_Iso.iso(function (v) {
          return v;
      })(Ext)(dictStrong.Profunctor0());
      return function ($55) {
          return $53($54($55));
      };
  };
  var _rotation = function (dictStrong) {
      var $56 = _ext$prime(dictStrong);
      var $57 = Data_Lens_Lens.lens(function (v) {
          return v.rotation;
      })(function (v) {
          return function (v1) {
              return {
                  rotation: v1,
                  dragged: v.dragged,
                  size: v.size
              };
          };
      })(dictStrong);
      return function ($58) {
          return $56($57($58));
      };
  };
  var aligned = function (state) {
      var rot = Data_Lens_Getter.viewOn(state)(_rotation(Data_Lens_Internal_Forget.strongForget));
      var n = Data_Array.length(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)));
      return Data_Array.mapWithIndex(function (index) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return false;
              };
              if (v instanceof Data_Maybe.Just) {
                  return Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(index + rot | 0)(n) === v.value0;
              };
              throw new Error("Failed pattern match at Game.Roue.Model (line 39, column 47 - line 41, column 43): " + [ v.constructor.name ]);
          };
      })(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)));
  };
  var validRotation$prime = function (state) {
      return Data_Array.length(Data_Array.filter(Control_Category.identity(Control_Category.categoryFn))(aligned(state))) === 1;
  };
  var validRotation = function (state) {
      return validRotation$prime(state) && Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Maybe.isJust)(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)));
  };
  var rotate = function (i) {
      return Data_Lens_Setter.addOver(Data_Semiring.semiringInt)(_rotation(Data_Profunctor_Strong.strongFn))(i);
  };
  var rotateA = function (i) {
      return Pha_Action.setState(rotate(i));
  };
  var _size = function (dictStrong) {
      var $59 = _ext$prime(dictStrong);
      var $60 = Data_Lens_Lens.lens(function (v) {
          return v.size;
      })(function (v) {
          return function (v1) {
              return {
                  size: v1,
                  dragged: v.dragged,
                  rotation: v.rotation
              };
          };
      })(dictStrong);
      return function ($61) {
          return $59($60($61));
      };
  };
  var checkA = (function () {
      var go = function (v) {
          if (v === 0) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.setState(Data_Lens_Setter.set(Game_Core["_showWin"](Data_Profunctor_Strong.strongFn))(true)))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.delay(1000))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.setState(Data_Lens_Setter.set(Game_Core["_showWin"](Data_Profunctor_Strong.strongFn))(false)))(function () {
                          return Control_Applicative.pure(Run.applicativeRun)(new Control_Monad_Rec_Class.Done(Data_Unit.unit));
                      });
                  });
              });
          };
          return Control_Bind.bind(Run.bindRun)(Pha_Action.getState)(function (v1) {
              var $37 = !validRotation(v1);
              if ($37) {
                  return Control_Applicative.pure(Run.applicativeRun)(new Control_Monad_Rec_Class.Done(Data_Unit.unit));
              };
              return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.setState(rotate(1)))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.delay(600))(function () {
                      return Control_Applicative.pure(Run.applicativeRun)(new Control_Monad_Rec_Class.Loop(v - 1 | 0));
                  });
              });
          });
      };
      return Game_Core.lockAction(Control_Bind.bind(Run.bindRun)(Pha_Action.getState)(function (st) {
          return Control_Monad_Rec_Class.tailRecM(Run.monadRecRun)(go)(Data_Lens_Getter.viewOn(st)(_size(Data_Lens_Internal_Forget.strongForget)));
      }));
  })();
  var roueGame = new Game_Core.Game(function (v) {
      return Data_Maybe.Nothing.value;
  }, function (state) {
      return Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Array.replicate(Data_Lens_Getter.viewOn(state)(_size(Data_Lens_Internal_Forget.strongForget)))(Data_Maybe.Nothing.value));
  }, function (v) {
      return false;
  }, (function () {
      var $62 = Control_Applicative.pure(Lib_Random.applicativeRandom);
      var $63 = Data_Lens_Setter.set(_rotation(Data_Profunctor_Strong.strongFn))(0);
      return function ($64) {
          return $62($63($64));
      };
  })(), function (state) {
      return function (move) {
          var act = (function () {
              if (move.from instanceof Panel && move.to instanceof Wheel) {
                  return Data_Array.updateAt(move.to.value0)(new Data_Maybe.Just(move.from.value0));
              };
              if (move.from instanceof Wheel && move.to instanceof Wheel) {
                  return Lib_Util.swap(move.from.value0)(move.to.value0);
              };
              if (move.from instanceof Wheel && move.to instanceof Board) {
                  return Data_Array.updateAt(move.from.value0)(Data_Maybe.Nothing.value);
              };
              return Data_Function["const"](Data_Maybe.Nothing.value);
          })();
          return act(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)));
      };
  }, Game_Core.defaultSizeLimit, function (st) {
      return new Data_Tuple.Tuple(st, true);
  });
  var setSizeA = Game_Core["newGame'"](roueGame)(Data_Lens_Setter.set(_size(Data_Profunctor_Strong.strongFn)));
  var _dragged = function (dictStrong) {
      var $65 = _ext$prime(dictStrong);
      var $66 = Data_Lens_Lens.lens(function (v) {
          return v.dragged;
      })(function (v) {
          return function (v1) {
              return {
                  dragged: v1,
                  rotation: v.rotation,
                  size: v.size
              };
          };
      })(dictStrong);
      return function ($67) {
          return $65($66($67));
      };
  };
  var deleteDraggedA = Pha_Action.setState(function (state) {
      var state2 = Data_Lens_Setter.set(_dragged(Data_Profunctor_Strong.strongFn))(Data_Maybe.Nothing.value)(state);
      var v = Data_Lens_Getter.viewOn(state)(_dragged(Data_Lens_Internal_Forget.strongForget));
      if (v instanceof Data_Maybe.Just && v.value0 instanceof Wheel) {
          return Data_Lens_Setter.set((function () {
              var $68 = Game_Core["_position"](Data_Profunctor_Strong.strongFn);
              var $69 = Data_Lens_Index.ix(Data_Lens_Index.indexArray)(v.value0.value0)(Data_Lens_Internal_Wander.wanderFunction);
              return function ($70) {
                  return $68($69($70));
              };
          })())(Data_Maybe.Nothing.value)(state2);
      };
      return state2;
  });
  exports["Panel"] = Panel;
  exports["Wheel"] = Wheel;
  exports["istate"] = istate;
  exports["_rotation"] = _rotation;
  exports["_size"] = _size;
  exports["_dragged"] = _dragged;
  exports["aligned"] = aligned;
  exports["validRotation'"] = validRotation$prime;
  exports["validRotation"] = validRotation;
  exports["rotateA"] = rotateA;
  exports["setSizeA"] = setSizeA;
  exports["checkA"] = checkA;
  exports["deleteDraggedA"] = deleteDraggedA;
  exports["eqLoc"] = eqLoc;
  exports["roueGame"] = roueGame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Roue.View"] = $PS["Game.Roue.View"] || {};
  var exports = $PS["Game.Roue.View"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Game_Core = $PS["Game.Core"];
  var Game_Roue_Model = $PS["Game.Roue.Model"];
  var Lib_Util = $PS["Lib.Util"];
  var $$Math = $PS["Math"];
  var Pha = $PS["Pha"];
  var Pha_Html = $PS["Pha.Html"];
  var UI_Icons = $PS["UI.Icons"];
  var UI_Template = $PS["UI.Template"];                
  var polarToCartesian = function (centerX) {
      return function (centerY) {
          return function (radius) {
              return function (angle) {
                  return {
                      x: centerX + radius * $$Math.cos(angle),
                      y: centerY + radius * $$Math.sin(angle)
                  };
              };
          };
      };
  };
  var pizza = function (cx) {
      return function (cy) {
          return function (radius) {
              return function (startAngle) {
                  return function (endAngle) {
                      var s = polarToCartesian(cx)(cy)(radius)(startAngle);
                      var e = polarToCartesian(cx)(cy)(radius)(endAngle);
                      return Data_String_Common.joinWith(" ")([ "M", Data_Show.show(Data_Show.showNumber)(cx), Data_Show.show(Data_Show.showNumber)(cy), "L", Data_Show.show(Data_Show.showNumber)(e.x), Data_Show.show(Data_Show.showNumber)(e.y), "A", Data_Show.show(Data_Show.showNumber)(radius), Data_Show.show(Data_Show.showNumber)(radius), "0 0 0", Data_Show.show(Data_Show.showNumber)(s.x), Data_Show.show(Data_Show.showNumber)(s.y), "L", Data_Show.show(Data_Show.showNumber)(cx), Data_Show.show(Data_Show.showNumber)(cy) ]);
                  };
              };
          };
      };
  };
  var cursor = function (v) {
      return function (color) {
          return Pha_Html["div'"]([ Pha_Html["class'"]("ui-cursor roue-select-color roue-cursor")(true), Pha_Html.style(Pha_Html.unitPc)("left")(Pha_Html.pc(v.x)), Pha_Html.style(Pha_Html.unitPc)("top")(Pha_Html.pc(v.y)), Pha_Html.style(Pha_Html.unittoStr)("background-color")(color) ])([  ]);
      };
  };
  var colors = [ "blue", "red", "magenta", "orange", "brown", "cyan", "gray", "black" ];
  var innerWheel = function (size) {
      return Pha_Html["div'"]([ Pha_Html["class'"]("roue-inner")(true) ])([ Pha_Html.svg([ Pha_Html.viewBox(0)(0)(100)(100) ])(Data_Array.mapWithIndex(function (i) {
          return function (color) {
              return Pha_Html.path(pizza(50.0)(50.0)(50.0)((2.0 * $$Math.pi * (Data_Int.toNumber(i) - 0.5)) / Data_Int.toNumber(size))((2.0 * $$Math.pi * (Data_Int.toNumber(i) + 0.5)) / Data_Int.toNumber(size)))([ Pha_Html.fill(color), Pha_Html.stroke("black") ]);
          };
      })(Data_Array.take(size)(colors))) ]);
  };
  var view = function (state) {
      var valid = Game_Roue_Model.validRotation(state);
      var size = Data_Lens_Getter.viewOn(state)(Game_Roue_Model["_size"](Data_Lens_Internal_Forget.strongForget));
      var rules = [ Pha.text("blah blah") ];
      var position = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      var outerWheel = Pha_Html["div'"]([ Pha_Html["class'"]("roue-outer")(true), Pha_Html.style(Pha_Html.unittoStr)("transform")("rotate(" + (Data_Show.show(Data_Show.showNumber)((360.0 * Data_Int.toNumber(Data_Lens_Getter.viewOn(state)(Game_Roue_Model["_rotation"](Data_Lens_Internal_Forget.strongForget)))) / Data_Int.toNumber(size)) + "deg)")) ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.svg([ Pha_Html.key("svg"), Pha_Html.viewBox(0)(0)(100)(100) ])(Lib_Util.map2(position)(Game_Roue_Model.aligned(state))(function (i) {
          return function (pos) {
              return function (align) {
                  return Pha_Html.path(pizza(50.0)(50.0)(50.0)((2.0 * $$Math.pi * (Data_Int.toNumber(i) - 0.5)) / Data_Int.toNumber(size))((2.0 * $$Math.pi * (Data_Int.toNumber(i) + 0.5)) / Data_Int.toNumber(size)))(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html["class'"]("roue-wheel-part")(true), Pha_Html.fill((function () {
                      var $10 = !align;
                      if ($10) {
                          return "#F0B27A";
                      };
                      var $11 = Game_Roue_Model["validRotation'"](state);
                      if ($11) {
                          return "lightgreen";
                      };
                      return "#F5B7B1";
                  })()) ])(UI_Template.dndItemProps(Game_Roue_Model.eqLoc)(Game_Roue_Model.roueGame)(function (dictStrong) {
                      return Game_Roue_Model["_dragged"](dictStrong);
                  })(Data_Maybe.isJust(pos))(true)(new Game_Roue_Model.Wheel(i))(state)));
              };
          };
      })) ])(Data_Array.catMaybes(Data_Array.mapWithIndex(function (index) {
          return function (c) {
              return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(c)(function (color) {
                  return Pha_Html["div'"]([ Pha_Html["class'"]("roue-outer-piece")(true), Pha_Html.key(Data_Show.show(Data_Show.showInt)(index)), Pha_Html.style(Pha_Html.unitPc)("left")(Pha_Html.pc(0.44 + 0.4 * $$Math.cos((Data_Int.toNumber(index) * 2.0 * $$Math.pi) / Data_Int.toNumber(size)))), Pha_Html.style(Pha_Html.unitPc)("top")(Pha_Html.pc(0.44 + 0.4 * $$Math.sin((Data_Int.toNumber(index) * 2.0 * $$Math.pi) / Data_Int.toNumber(size)))), Pha_Html.style(Pha_Html.unittoStr)("background-color")(Data_Maybe.fromMaybe("")(Data_Array.index(colors)(color))) ])([  ]);
              });
          };
      })(position))));
      var draggedColor = Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Lens_Getter.viewOn(state)(Game_Roue_Model["_dragged"](Data_Lens_Internal_Forget.strongForget)))(function (d) {
          var colorIndex = (function () {
              if (d instanceof Game_Roue_Model.Panel) {
                  return d.value0;
              };
              if (d instanceof Game_Roue_Model.Wheel) {
                  return Data_Maybe.fromMaybe(-1 | 0)(Control_Bind.join(Data_Maybe.bindMaybe)(Data_Array.index(position)(d.value0)));
              };
              return -1 | 0;
          })();
          return Data_Array.index(colors)(colorIndex);
      });
      var config = UI_Template.card("Roue des couleurs")([ UI_Icons.iconSelectGroup(Data_Show.showInt)(Data_Eq.eqInt)(state)("Nombre de couleurs")([ 4, 5, 6, 7, 8 ])(size)(Game_Roue_Model.setSizeA)(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn))), UI_Icons.icongroup("Options")([ UI_Icons.ireset(state), UI_Icons.irules(state) ]) ]);
      var board = Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)(UI_Template.dndBoardProps(Game_Roue_Model.eqLoc)(Game_Roue_Model.roueGame)(function (dictStrong) {
          return Game_Roue_Model["_dragged"](dictStrong);
      }))([ Pha_Html["class'"]("roue-board")(true), Pha_Html.pointerup(Game_Roue_Model.deleteDraggedA) ]))([ Pha_Html["div'"]([ Pha_Html["class'"]("roue-buttons")(true) ])(Data_Array.concat([ [ Pha_Html.button([ Pha_Html["class'"]("ui-button ui-button-primary roue-button")(true), Pha_Html.disabled(Data_Lens_Getter.viewOn(state)(Game_Core["_locked"](Data_Lens_Internal_Forget.strongForget))), Pha_Html.click(Game_Roue_Model.rotateA(-1 | 0)) ])([ Pha.text("\u21b6") ]) ], Data_Array.mapWithIndex(function (i) {
          return function (color) {
              return Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html["class'"]("roue-select-color ui-flex-center")(true), Pha_Html.style(Pha_Html.unittoStr)("background-color")(color) ])(UI_Template.dndItemProps(Game_Roue_Model.eqLoc)(Game_Roue_Model.roueGame)(function (dictStrong) {
                  return Game_Roue_Model["_dragged"](dictStrong);
              })(true)(false)(new Game_Roue_Model.Panel(i))(state)))([ Pha.ifN(Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Maybe.eqMaybe(Data_Eq.eqInt))(new Data_Maybe.Just(i))(position))(function (v) {
                  return Pha_Html.span([  ])([ Pha.text("\u2713") ]);
              }) ]);
          };
      })(Data_Array.take(size)(colors)), [ Pha_Html.button([ Pha_Html["class'"]("ui-button ui-button-primary roue-button")(true), Pha_Html.disabled(Data_Lens_Getter.viewOn(state)(Game_Core["_locked"](Data_Lens_Internal_Forget.strongForget))), Pha_Html.click(Game_Roue_Model.rotateA(1)) ])([ Pha.text("\u21b7") ]) ] ])), Pha_Html["div'"]([ Pha_Html["class'"]("roue-roue")(true) ])([ outerWheel, innerWheel(size), Pha_Html.button([ Pha_Html["class'"]("ui-button ui-button-primary roue-validate")(true), Pha_Html.disabled(!valid || Data_Lens_Getter.viewOn(state)(Game_Core["_locked"](Data_Lens_Internal_Forget.strongForget))), Pha_Html.click(Game_Roue_Model.checkA) ])([ Pha.text("Valider") ]), Pha_Html["div'"]([ Pha_Html["class'"]("roue-valid-rotation")(true) ])([ (function () {
          if (valid) {
              return Pha_Html.span([ Pha_Html["class'"]("valid")(true) ])([ Pha.text("\u2713") ]);
          };
          return Pha_Html.span([ Pha_Html["class'"]("invalid")(true) ])([ Pha.text("\u2717") ]);
      })() ]) ]), Pha.maybeN(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(cursor)(Data_Lens_Getter.viewOn(state)(Game_Core["_pointer"](Data_Lens_Internal_Forget.strongForget))))(draggedColor)) ]);
      return UI_Template.template(Game_Roue_Model.roueGame)(function (v) {
          return {
              board: board,
              config: config,
              rules: rules,
              winTitle: "GAGN\xc9",
              customDialog: v.customDialog,
              scoreDialog: v.scoreDialog
          };
      })(state);
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Roue"] = $PS["Game.Roue"] || {};
  var exports = $PS["Game.Roue"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Unit = $PS["Data.Unit"];
  var Game = $PS["Game"];
  var Game_Core = $PS["Game.Core"];
  var Game_Roue_Model = $PS["Game.Roue.Model"];
  var Game_Roue_View = $PS["Game.Roue.View"];
  var Pha_Lens = $PS["Pha.Lens"];
  var Run = $PS["Run"];                
  var State = function (x) {
      return x;
  };
  var state = Game_Roue_Model.istate;
  var _iso = function (dictProfunctor) {
      return Data_Lens_Iso.iso(function (v) {
          return v;
      })(State)(dictProfunctor);
  };
  var cgame = new Game.CGame(Pha_Lens.actionOver(function (dictStrong) {
      return _iso(dictStrong.Profunctor0());
  })(Game_Core.init(Game_Roue_Model.roueGame)), function (v) {
      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
  }, function (lens) {
      return function (v) {
          return Pha_Lens.viewOver(function (dictStrong) {
              var $9 = lens(dictStrong);
              var $10 = _iso(dictStrong.Profunctor0());
              return function ($11) {
                  return $9($10($11));
              };
          })(Game_Roue_View.view(v));
      };
  });
  exports["state"] = state;
  exports["cgame"] = cgame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Sansmot.Model"] = $PS["Game.Sansmot.Model"] || {};
  var exports = $PS["Game.Sansmot.Model"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_At = $PS["Data.Lens.At"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Pha_Action = $PS["Pha.Action"];
  var Run = $PS["Run"];                
  var PythaPage = (function () {
      function PythaPage() {

      };
      PythaPage.value = new PythaPage();
      return PythaPage;
  })();
  var CarollPage = (function () {
      function CarollPage() {

      };
      CarollPage.value = new CarollPage();
      return CarollPage;
  })();
  var Step = (function () {
      function Step(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Step.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Step(value0, value1, value2);
              };
          };
      };
      return Step;
  })();
  var pythaAnimation = [ new Step(500, "a", 1), new Step(200, "a", 2), new Step(600, "b", 1), new Step(200, "b", 2), new Step(600, "c", 1), new Step(200, "c", 2), new Step(600, "d", 1), new Step(200, "d", 2), new Step(600, "e", 1) ];
  var istate = {
      anim: Data_Map_Internal.empty,
      locked: false,
      page: CarollPage.value
  };
  var carollAnimation = [ new Step(700, "a", 1), new Step(700, "b", 1), new Step(700, "c", 1), new Step(700, "d", 1), new Step(600, "e", 1) ];
  var _page = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.page;
      })(function (v) {
          return function (v1) {
              return {
                  page: v1,
                  anim: v.anim,
                  locked: v.locked
              };
          };
      })(dictStrong);
  };
  var _locked = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.locked;
      })(function (v) {
          return function (v1) {
              return {
                  locked: v1,
                  anim: v.anim,
                  page: v.page
              };
          };
      })(dictStrong);
  };
  var _anim = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.anim;
      })(function (v) {
          return function (v1) {
              return {
                  anim: v1,
                  locked: v.locked,
                  page: v.page
              };
          };
      })(dictStrong);
  };
  var animateA = function (animation) {
      return Control_Monad.unlessM(Run.monadRun)(Data_Functor.map(Run.functorRun)(Data_Lens_Getter.view(_locked(Data_Lens_Internal_Forget.strongForget)))(Pha_Action.getState))(Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.setState((function () {
          var $19 = Data_Lens_Setter.set(_anim(Data_Profunctor_Strong.strongFn))(Data_Map_Internal.empty);
          var $20 = Data_Lens_Setter.set(_locked(Data_Profunctor_Strong.strongFn))(true);
          return function ($21) {
              return $19($20($21));
          };
      })()))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Data_Foldable.for_(Run.applicativeRun)(Data_Foldable.foldableArray)(animation)(function (v) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.delay(v.value0))(function () {
                  return Control_Bind.bind(Run.bindRun)(Pha_Action.getState)(function (v1) {
                      return Pha_Action.setState(Data_Lens_Setter.set((function () {
                          var $22 = _anim(Data_Profunctor_Strong.strongFn);
                          var $23 = Data_Lens_At.at(Data_Lens_At.atMap(Data_Ord.ordString))(v.value1)(Data_Profunctor_Strong.strongFn);
                          return function ($24) {
                              return $22($23($24));
                          };
                      })())(new Data_Maybe.Just(v.value2)));
                  });
              });
          }))(function () {
              return Pha_Action.setState(Data_Lens_Setter.set(_locked(Data_Profunctor_Strong.strongFn))(false));
          });
      }));
  };
  var setPageA = function (page) {
      return Control_Monad.unlessM(Run.monadRun)(Data_Functor.map(Run.functorRun)(Data_Lens_Getter.view(_locked(Data_Lens_Internal_Forget.strongForget)))(Pha_Action.getState))(Pha_Action.setState((function () {
          var $25 = Data_Lens_Setter.set(_page(Data_Profunctor_Strong.strongFn))(page);
          var $26 = Data_Lens_Setter.set(_anim(Data_Profunctor_Strong.strongFn))(Data_Map_Internal.empty);
          return function ($27) {
              return $25($26($27));
          };
      })()));
  };
  exports["PythaPage"] = PythaPage;
  exports["CarollPage"] = CarollPage;
  exports["pythaAnimation"] = pythaAnimation;
  exports["carollAnimation"] = carollAnimation;
  exports["istate"] = istate;
  exports["setPageA"] = setPageA;
  exports["animateA"] = animateA;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Sansmot.View"] = $PS["Game.Sansmot.View"] || {};
  var exports = $PS["Game.Sansmot.View"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lens_At = $PS["Data.Lens.At"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Sansmot_Model = $PS["Game.Sansmot.Model"];
  var Lib_Util = $PS["Lib.Util"];
  var Pha = $PS["Pha"];
  var Pha_Html = $PS["Pha.Html"];                
  var defaultStyle = [ Pha_Html.style(Pha_Html.unittoStr)("transform")("translate(0px, 0px)") ];
  var compStyle = function (width) {
      return function (height) {
          return function (v) {
              return [ Pha_Html.style(Pha_Html.unittoStr)("transform")(Pha_Html.translate(Pha_Html.unitPc)(Pha_Html.unitPc)(Pha_Html.pc(Data_Int.toNumber(v.translation.value0) / width))(Pha_Html.pc(Data_Int.toNumber(v.translation.value1) / height))), Pha_Html.style(Pha_Html.unittoStr)("transition")("transform linear " + (Data_Show.show(Data_Show.showInt)(v.duration) + "ms")) ];
          };
      };
  };
  var pythaStyles = Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("a", [ [ Pha_Html.opacity("0") ], defaultStyle, compStyle(700.0)(300.0)({
      translation: new Data_Tuple.Tuple(400, -100 | 0),
      rotation: 0,
      duration: 600
  }) ]), new Data_Tuple.Tuple("b", [ [ Pha_Html.opacity("0") ], defaultStyle, compStyle(700.0)(300.0)({
      translation: new Data_Tuple.Tuple(600, 0),
      rotation: 0,
      duration: 600
  }) ]), new Data_Tuple.Tuple("c", [ [ Pha_Html.opacity("0") ], defaultStyle, compStyle(700.0)(300.0)({
      translation: new Data_Tuple.Tuple(400, 0),
      rotation: 0,
      duration: 600
  }) ]), new Data_Tuple.Tuple("d", [ [ Pha_Html.opacity("0") ], defaultStyle, compStyle(700.0)(300.0)({
      translation: new Data_Tuple.Tuple(300, 200),
      rotation: 0,
      duration: 600
  }) ]), new Data_Tuple.Tuple("e", [ [ Pha_Html.opacity("0") ], [  ] ]) ]);
  var carollStyles = Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("a", [ defaultStyle, compStyle(1370.0)(270.0)({
      translation: new Data_Tuple.Tuple(300, 150),
      rotation: 0,
      duration: 600
  }) ]), new Data_Tuple.Tuple("b", [ defaultStyle, compStyle(1370.0)(270.0)({
      translation: new Data_Tuple.Tuple(550, 50),
      rotation: 0,
      duration: 600
  }) ]), new Data_Tuple.Tuple("c", [ defaultStyle, compStyle(1370.0)(270.0)({
      translation: new Data_Tuple.Tuple(700, 0),
      rotation: 0,
      duration: 600
  }) ]), new Data_Tuple.Tuple("d", [ defaultStyle, compStyle(1370.0)(270.0)({
      translation: new Data_Tuple.Tuple(950, -100 | 0),
      rotation: 0,
      duration: 600
  }) ]), new Data_Tuple.Tuple("e", [ [ Pha_Html.opacity("0") ], [  ] ]) ]);
  var animPytha = function (v) {
      var f = function (key) {
          var phase = Data_Maybe.fromMaybe(0)(Data_Lens_Getter.viewOn(v.anim)(Data_Lens_At.at(Data_Lens_At.atMap(Data_Ord.ordString))(key)(Data_Lens_Internal_Forget.strongForget)));
          return Data_Maybe.fromMaybe([  ])(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Lens_Getter.viewOn(pythaStyles)(Data_Lens_At.at(Data_Lens_At.atMap(Data_Ord.ordString))(key)(Data_Lens_Internal_Forget.strongForget)))(function (t) {
              return Data_Array.index(t)(phase);
          }));
      };
      return Pha_Html.svg([ Pha_Html["class'"]("sansmot-svg")(true), Pha_Html.viewBox(0)(0)(700)(300), Pha_Html.style(Pha_Html.unittoStr)("width")("84vmin"), Pha_Html.style(Pha_Html.unittoStr)("height")("36vmin") ])([ Pha_Html.path("M 0 300 h 300 v -300 h -300 Z L 100 100 M 0 100 h 300 l -200 -100 v 300")([ Pha_Html.fill("transparent"), Pha_Html.stroke("#000") ]), Pha_Html.path("M 400 300 h 300 v -300 h -300 Z M 400 200 l 200 100 l 100 -200 l -200 -100 l -100 200")([ Pha_Html.fill("transparent"), Pha_Html.stroke("#000") ]), Pha_Html.path("M 0 300 v -200 h 100 Z")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.fill("blue"), Pha_Html.stroke("#000") ])(f("a"))), Pha_Html.path("M 0 300 h 100 v -200 Z")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.fill("yellow"), Pha_Html.stroke("#000") ])(f("b"))), Pha_Html.path("M 100 0 h 200 v 100 Z")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.fill("#00FF00"), Pha_Html.stroke("#000") ])(f("c"))), Pha_Html.path("M 100 0 v 100 h 200 Z")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.fill("red"), Pha_Html.stroke("#000") ])(f("d"))), Pha_Html.path("M 0 300 v -200 h 100 Z")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.fill("blue"), Pha_Html.stroke("#000") ])(f("e"))), Pha_Html.path("M 0 300 h 100 v -200 Z")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.fill("yellow"), Pha_Html.stroke("#000") ])(f("e"))), Pha_Html.path("M 100 0 h 200 v 100 Z")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.fill("#00FF00"), Pha_Html.stroke("#000") ])(f("e"))), Pha_Html.path("M 100 0 v 100 h 200 0 Z")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.fill("red"), Pha_Html.stroke("#000") ])(f("e"))), Pha_Html["text'"](Pha_Html.unitInt)(5)(55)("a")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.style(Pha_Html.unitInt)("font-size")(20) ])(f("e"))), Pha_Html["text'"](Pha_Html.unitInt)(46)(12)("a")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.style(Pha_Html.unitInt)("font-size")(20) ])(f("e"))), Pha_Html["text'"](Pha_Html.unitInt)(105)(210)("b")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.style(Pha_Html.unitInt)("font-size")(20) ])(f("e"))), Pha_Html["text'"](Pha_Html.unitInt)(198)(120)("b")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.style(Pha_Html.unitInt)("font-size")(20) ])(f("e"))), Pha_Html["text'"](Pha_Html.unitInt)(460)(98)("c")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.style(Pha_Html.unitInt)("font-size")(20) ])(f("e"))), Pha_Html["text'"](Pha_Html.unitInt)(595)(80)("c")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.style(Pha_Html.unitInt)("font-size")(20) ])(f("e"))) ]);
  };
  var animCaroll = function (v) {
      var f = function (key) {
          var phase = Data_Maybe.fromMaybe(0)(Data_Lens_Getter.viewOn(v.anim)(Data_Lens_At.at(Data_Lens_At.atMap(Data_Ord.ordString))(key)(Data_Lens_Internal_Forget.strongForget)));
          return Data_Maybe.fromMaybe([  ])(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Lens_Getter.viewOn(carollStyles)(Data_Lens_At.at(Data_Lens_At.atMap(Data_Ord.ordString))(key)(Data_Lens_Internal_Forget.strongForget)))(function (t) {
              return Data_Array.index(t)(phase);
          }));
      };
      return Pha_Html.svg([ Pha_Html["class'"]("sansmot-svg")(true), Pha_Html.viewBox(-10 | 0)(-10 | 0)(1370)(270), Pha_Html.width(Pha_Html.unittoStr)("90vw"), Pha_Html.height(Pha_Html.unittoStr)("19vw") ])(Data_Array.concat([ [ Pha_Html.path("M 400 100 h 250 v -100 Z")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.fill("orange") ])(f("a"))), Pha_Html.path("M 400 200 h 150 v -50 h 100 v -50 h -250 Z")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.fill("red") ])(f("b"))), Pha_Html.path("M 400 250 h 250 v -100 h -100 v 50 h -150 Z")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.fill("blue") ])(f("c"))), Pha_Html.path("M 0 250 h 400 v -150 Z")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.fill("green") ])(f("d"))), Pha_Html.path("M 400 100 h 250 v -100 Z")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.fill("orange") ])(f("e"))), Pha_Html.path("M 400 200 h 150 v -50 h 100 v -50 h -250 Z")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.fill("red") ])(f("e"))), Pha_Html.path("M 400 250 h 250 v -100 h -100 v 50 h -150 Z")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.fill("blue") ])(f("e"))), Pha_Html.path("M 0 250 h 400 v -150 Z")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.fill("green") ])(f("e"))) ], Lib_Util.tabulate(28)(function (i) {
          return Pha_Html.line(Pha_Html.unitInt)(Pha_Html.unitInt)(Pha_Html.unitInt)(Pha_Html.unitInt)(50 * i | 0)(-10 | 0)(50 * i | 0)(260)([ Pha_Html["class'"]("sansmot-grid")(true) ]);
      }), Lib_Util.tabulate(6)(function (i) {
          return Pha_Html.line(Pha_Html.unitInt)(Pha_Html.unitInt)(Pha_Html.unitInt)(Pha_Html.unitInt)(-10 | 0)(50 * i | 0)(1360)(50 * i | 0)([ Pha_Html["class'"]("sansmot-grid")(true) ]);
      }) ]));
  };
  var view = function (state) {
      var main = function (v) {
          if (v instanceof Game_Sansmot_Model.PythaPage) {
              return Pha_Html["div'"]([ Pha_Html.key("pytha") ])([ Pha_Html.h1([ Pha_Html["class'"]("sansmot-title")(true) ])("Preuve sans mot"), Pha_Html.h2([ Pha_Html["class'"]("sansmot-h2")(true) ])("Que raconte le th\xe9or\xe8me de Pythagore ?"), Pha_Html.p([ Pha_Html["class'"]("sansmot-center")(true) ])([ Pha_Html.svg([ Pha_Html["class'"]("sansmot-svg")(true), Pha_Html.viewBox(0)(-100 | 0)(200)(250), Pha_Html.width(Pha_Html.unittoStr)("20vmin"), Pha_Html.height(Pha_Html.unittoStr)("25vmin") ])([ Pha_Html.path("M 50 50 h 100 v 100 h -100 Z")([ Pha_Html.fill("yellow"), Pha_Html.stroke("black") ]), Pha_Html.path("M 0 0 h 50 v 50 h -50 Z")([ Pha_Html.fill("yellow"), Pha_Html.stroke("black") ]), Pha_Html.path("M 50 0 l 100 50 l 50 -100 l -100 -50 Z")([ Pha_Html.fill("#00ff00"), Pha_Html.stroke("black") ]), Pha_Html["text'"](Pha_Html.unitInt)(90)(105)("a\xb2")([ Pha_Html.attr(Pha_Html.unitInt)("font-size")(35) ]), Pha_Html["text'"](Pha_Html.unitInt)(18)(35)("b\xb2")([ Pha_Html.attr(Pha_Html.unitInt)("font-size")(35) ]), Pha_Html["text'"](Pha_Html.unitInt)(110)(-10 | 0)("c\xb2")([ Pha_Html.attr(Pha_Html.unitInt)("font-size")(35) ]) ]) ]), Pha_Html.h2([ Pha_Html["class'"]("sansmot-h2")(true) ])("Preuve sans mot due \xe0 un auteur chinois inconnu qui vivait vers 200 avant J.-C."), Pha_Html.p([ Pha_Html["class'"]("sansmot-center")(true) ])([ animPytha(state) ]), Pha_Html.p([ Pha_Html["class'"]("sansmot-center sansmot-link")(true), Pha_Html.click(Game_Sansmot_Model.animateA(Game_Sansmot_Model.pythaAnimation)) ])([ Pha.text("Lancer l'animation") ]) ]);
          };
          if (v instanceof Game_Sansmot_Model.CarollPage) {
              return Pha_Html["div'"]([ Pha_Html.key("caroll") ])([ Pha_Html.h1([ Pha_Html["class'"]("sansmot-title")(true) ])("Preuve sans mot"), Pha_Html.h2([ Pha_Html["class'"]("sansmot-h2")(true) ])("O\xf9 est pass\xe9 le carr\xe9 manquant ?"), Pha_Html.p([ Pha_Html["class'"]("sansmot-center")(true) ])([ animCaroll(state) ]), Pha_Html.p([ Pha_Html["class'"]("sansmot-center sansmot-link")(true), Pha_Html.click(Game_Sansmot_Model.animateA(Game_Sansmot_Model.carollAnimation)) ])([ Pha.text("Lancer l'animation") ]) ]);
          };
          throw new Error("Failed pattern match at Game.Sansmot.View (line 101, column 5 - line 122, column 6): " + [ v.constructor.name ]);
      };
      return Pha_Html["div'"]([ Pha_Html["class'"]("sansmot-main")(true) ])([ Pha_Html["div'"]([ Pha_Html["class'"]("sansmot-menu")(true) ])([ Pha_Html["div'"]([ Pha_Html["class'"]("sansmot-pagelink")(true), Pha_Html.click(Game_Sansmot_Model.setPageA(Game_Sansmot_Model.PythaPage.value)) ])([ Pha.text("1") ]), Pha_Html["div'"]([ Pha_Html["class'"]("sansmot-pagelink")(true), Pha_Html.click(Game_Sansmot_Model.setPageA(Game_Sansmot_Model.CarollPage.value)) ])([ Pha.text("2") ]) ]), main(state.page) ]);
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Sansmot"] = $PS["Game.Sansmot"] || {};
  var exports = $PS["Game.Sansmot"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Unit = $PS["Data.Unit"];
  var Game = $PS["Game"];
  var Game_Sansmot_Model = $PS["Game.Sansmot.Model"];
  var Game_Sansmot_View = $PS["Game.Sansmot.View"];
  var Pha_Lens = $PS["Pha.Lens"];
  var Run = $PS["Run"];                
  var State = function (x) {
      return x;
  };
  var state = Game_Sansmot_Model.istate;
  var _iso = function (dictProfunctor) {
      return Data_Lens_Iso.iso(function (v) {
          return v;
      })(State)(dictProfunctor);
  };
  var cgame = new Game.CGame(Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit), function (v) {
      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
  }, function (lens) {
      return function (v) {
          return Pha_Lens.viewOver(function (dictStrong) {
              var $8 = lens(dictStrong);
              var $9 = _iso(dictStrong.Profunctor0());
              return function ($10) {
                  return $8($9($10));
              };
          })(Game_Sansmot_View.view(v));
      };
  });
  exports["state"] = state;
  exports["cgame"] = cgame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Solitaire.Model"] = $PS["Game.Solitaire.Model"] || {};
  var exports = $PS["Game.Solitaire.Model"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Index = $PS["Data.Lens.Index"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Wander = $PS["Data.Lens.Internal.Wander"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Core = $PS["Game.Core"];
  var Lib_Random = $PS["Lib.Random"];
  var Lib_Util = $PS["Lib.Util"];
  var Pha_Action = $PS["Pha.Action"];                
  var FrenchBoard = (function () {
      function FrenchBoard() {

      };
      FrenchBoard.value = new FrenchBoard();
      return FrenchBoard;
  })();
  var EnglishBoard = (function () {
      function EnglishBoard() {

      };
      EnglishBoard.value = new EnglishBoard();
      return EnglishBoard;
  })();
  var CircleBoard = (function () {
      function CircleBoard() {

      };
      CircleBoard.value = new CircleBoard();
      return CircleBoard;
  })();
  var Grid3Board = (function () {
      function Grid3Board() {

      };
      Grid3Board.value = new Grid3Board();
      return Grid3Board;
  })();
  var RandomBoard = (function () {
      function RandomBoard() {

      };
      RandomBoard.value = new RandomBoard();
      return RandomBoard;
  })();
  var Ext = function (x) {
      return x;
  };
  var showMode = new Data_Show.Show(function (v) {
      if (v instanceof FrenchBoard) {
          return "french";
      };
      if (v instanceof EnglishBoard) {
          return "english";
      };
      if (v instanceof CircleBoard) {
          return "circle";
      };
      if (v instanceof Grid3Board) {
          return "grid3";
      };
      if (v instanceof RandomBoard) {
          return "random";
      };
      throw new Error("Failed pattern match at Game.Solitaire.Model (line 14, column 1 - line 19, column 32): " + [ v.constructor.name ]);
  });
  var istate = Game_Core.genState([  ])(function (v) {
      return {
          position: v.position,
          history: v.history,
          redoHistory: v.redoHistory,
          dialog: v.dialog,
          turn: v.turn,
          nbRows: 5,
          nbColumns: 1,
          customSize: v.customSize,
          mode: v.mode,
          help: v.help,
          locked: v.locked,
          showWin: v.showWin,
          scores: v.scores,
          pointer: v.pointer
      };
  })({
      board: CircleBoard.value,
      holes: [  ],
      dragged: Data_Maybe.Nothing.value,
      help: 0
  });
  var generateBoard = function (rows) {
      return function (columns) {
          return function (startingHole) {
              return function (holeFilter) {
                  var holes = Lib_Util.tabulate2(rows)(columns)(holeFilter);
                  var position = Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Lens_Setter.set(Data_Lens_Index.ix(Data_Lens_Index.indexArray)(startingHole)(Data_Lens_Internal_Wander.wanderFunction))(false)(holes));
                  return {
                      holes: holes,
                      position: position,
                      customSize: false
                  };
              };
          };
      };
  };
  var boardMode = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof FrenchBoard && y instanceof FrenchBoard) {
              return true;
          };
          if (x instanceof EnglishBoard && y instanceof EnglishBoard) {
              return true;
          };
          if (x instanceof CircleBoard && y instanceof CircleBoard) {
              return true;
          };
          if (x instanceof Grid3Board && y instanceof Grid3Board) {
              return true;
          };
          if (x instanceof RandomBoard && y instanceof RandomBoard) {
              return true;
          };
          return false;
      };
  });
  var betweenMove = function (state) {
      return function (v) {
          var v1 = Lib_Util.dCoords(Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)))(v.from)(v.to);
          var $48 = ((v1.row * v1.row | 0) + (v1.col * v1.col | 0) | 0) === 4;
          if ($48) {
              return Data_Maybe.Just.create(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v.from + v.to | 0)(2));
          };
          return Data_Maybe.Nothing.value;
      };
  };
  var betweenInCircle = function (from) {
      return function (to) {
          return function (size) {
              var $53 = (from - to | 0) === 2 || (to - from | 0) === 2;
              if ($53) {
                  return Data_Maybe.Just.create(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(from + to | 0)(2));
              };
              var $54 = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(to - from | 0)(size) === 2;
              if ($54) {
                  return Data_Maybe.Just.create(Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(from + 1 | 0)(size));
              };
              var $55 = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(from - to | 0)(size) === 2;
              if ($55) {
                  return Data_Maybe.Just.create(Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(to + 1 | 0)(size));
              };
              return Data_Maybe.Nothing.value;
          };
      };
  };
  var _ext$prime = function (dictStrong) {
      var $81 = Game_Core["_ext"](dictStrong);
      var $82 = Data_Lens_Iso.iso(function (v) {
          return v;
      })(Ext)(dictStrong.Profunctor0());
      return function ($83) {
          return $81($82($83));
      };
  };
  var _help = function (dictStrong) {
      var $84 = _ext$prime(dictStrong);
      var $85 = Data_Lens_Lens.lens(function (v) {
          return v.help;
      })(function (v) {
          return function (v1) {
              return {
                  help: v1,
                  board: v.board,
                  dragged: v.dragged,
                  holes: v.holes
              };
          };
      })(dictStrong);
      return function ($86) {
          return $84($85($86));
      };
  };
  var toggleHelpA = Pha_Action.setState(Data_Lens_Setter.over(_help(Data_Profunctor_Strong.strongFn))(function (x) {
      return Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(x + 1 | 0)(3);
  }));
  var _holes = function (dictStrong) {
      var $87 = _ext$prime(dictStrong);
      var $88 = Data_Lens_Lens.lens(function (v) {
          return v.holes;
      })(function (v) {
          return function (v1) {
              return {
                  holes: v1,
                  board: v.board,
                  dragged: v.dragged,
                  help: v.help
              };
          };
      })(dictStrong);
      return function ($89) {
          return $87($88($89));
      };
  };
  var _dragged = function (dictStrong) {
      var $90 = _ext$prime(dictStrong);
      var $91 = Data_Lens_Lens.lens(function (v) {
          return v.dragged;
      })(function (v) {
          return function (v1) {
              return {
                  dragged: v1,
                  board: v.board,
                  help: v.help,
                  holes: v.holes
              };
          };
      })(dictStrong);
      return function ($92) {
          return $90($91($92));
      };
  };
  var _board = function (dictStrong) {
      var $93 = _ext$prime(dictStrong);
      var $94 = Data_Lens_Lens.lens(function (v) {
          return v.board;
      })(function (v) {
          return function (v1) {
              return {
                  board: v1,
                  dragged: v.dragged,
                  help: v.help,
                  holes: v.holes
              };
          };
      })(dictStrong);
      return function ($95) {
          return $93($94($95));
      };
  };
  var betweenMove2 = function (state) {
      return function (v) {
          var rows = Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget));
          var $59 = Data_Eq.eq(boardMode)(Data_Lens_Getter.viewOn(state)(_board(Data_Lens_Internal_Forget.strongForget)))(CircleBoard.value);
          if ($59) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(betweenInCircle(v.from)(v.to)(rows))(function (v1) {
                  return Control_Applicative.pure(Data_Maybe.applicativeMaybe)((function () {
                      var $61 = rows === 4 && Data_Maybe.maybe(false)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Data_Array.index(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)))(v1));
                      if ($61) {
                          return Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v1 + 2 | 0)(4);
                      };
                      return v1;
                  })());
              });
          };
          return betweenMove(state)(v);
      };
  };
  var scoregame = new Game_Core.ScoreGame(function () {
      return solitaireGame;
  }, function (state) {
      return Data_Eq.eq(boardMode)(Data_Lens_Getter.viewOn(state)(_board(Data_Lens_Internal_Forget.strongForget)))(RandomBoard.value);
  }, function (v) {
      return Game_Core.Minimize.value;
  }, (function () {
      var $96 = Data_Array.filter(Control_Category.identity(Control_Category.categoryFn));
      var $97 = Data_Lens_Getter.view(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      return function ($98) {
          return Data_Array.length($96($97($98)));
      };
  })(), function (state) {
      return Data_String_Common.joinWith("-")([ Data_Show.show(showMode)(Data_Lens_Getter.viewOn(state)(_board(Data_Lens_Internal_Forget.strongForget))), Data_Show.show(Data_Show.showInt)(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget))), Data_Show.show(Data_Show.showInt)(Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget))) ]);
  });
  var solitaireGame = new Game_Core.Game(function (v) {
      return Data_Maybe.Nothing.value;
  }, (function () {
      var $99 = Control_Applicative.pure(Lib_Random.applicativeRandom);
      var $100 = Data_Lens_Getter.view(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      return function ($101) {
          return $99($100($101));
      };
  })(), function (state) {
      return Data_FoldableWithIndex.allWithIndex(Data_FoldableWithIndex.foldableWithIndexArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (i) {
          return function (val) {
              return Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (d) {
                  return Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Game_Core.canPlay(solitaireGame))(state)({
                      from: i,
                      to: i + d | 0
                  });
              })([ 2, -2 | 0, 2 * Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) | 0, (-2 | 0) * Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) | 0, Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) - 2 | 0 ]);
          };
      })(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)));
  }, function (state) {
      var rows = Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget));
      var columns = Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget));
      var v = (function () {
          var v1 = Data_Lens_Getter.viewOn(state)(_board(Data_Lens_Internal_Forget.strongForget));
          if (v1 instanceof EnglishBoard) {
              return generateBoard(7)(7)(24)(function (row) {
                  return function (col) {
                      return Data_Ord.min(Data_Ord.ordInt)(row)(6 - row | 0) >= 2 || Data_Ord.min(Data_Ord.ordInt)(col)(6 - col | 0) >= 2;
                  };
              });
          };
          if (v1 instanceof FrenchBoard) {
              return generateBoard(7)(7)(24)(function (row) {
                  return function (col) {
                      return (Data_Ord.min(Data_Ord.ordInt)(row)(6 - row | 0) + Data_Ord.min(Data_Ord.ordInt)(col)(6 - col | 0) | 0) >= 2;
                  };
              });
          };
          if (v1 instanceof CircleBoard) {
              return {
                  holes: Data_Array.replicate(rows)(true),
                  position: Data_Functor.mapFlipped(Lib_Random.functorRandom)(Lib_Random.randomInt(rows))(function (x) {
                      return Lib_Util.tabulate(rows)(function (v2) {
                          return v2 !== x;
                      });
                  }),
                  customSize: true
              };
          };
          if (v1 instanceof Grid3Board) {
              return {
                  holes: Data_Array.replicate(3 * Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) | 0)(true),
                  position: Control_Applicative.pure(Lib_Random.applicativeRandom)(Lib_Util.tabulate(3 * Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) | 0)(function (v2) {
                      return v2 < (2 * columns | 0);
                  })),
                  customSize: true
              };
          };
          if (v1 instanceof RandomBoard) {
              return {
                  holes: Data_Array.replicate(3 * Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) | 0)(true),
                  position: Data_Functor.mapFlipped(Lib_Random.functorRandom)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Lib_Random.applicativeRandom)(Data_Array.replicate(columns)(Lib_Random.randomBool)))(function (bools) {
                      return Data_Semigroup.append(Data_Semigroup.semigroupArray)(bools)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Array.replicate(columns)(true))(Data_Functor.mapFlipped(Data_Functor.functorArray)(bools)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))));
                  }),
                  customSize: true
              };
          };
          throw new Error("Failed pattern match at Game.Solitaire.Model (line 105, column 13 - line 123, column 18): " + [ v1.constructor.name ]);
      })();
      return Data_Functor.mapFlipped(Lib_Random.functorRandom)(v.position)(function (p) {
          return Data_Lens_Setter.set(Game_Core["_customSize"](Data_Profunctor_Strong.strongFn))(v.customSize)(Data_Lens_Setter.set(Game_Core["_position"](Data_Profunctor_Strong.strongFn))(p)(Data_Lens_Setter.set(_holes(Data_Profunctor_Strong.strongFn))(v.holes)(state)));
      });
  }, function (state) {
      return function (v) {
          var position = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
          return Control_Bind.bind(Data_Maybe.bindMaybe)(betweenMove2(state)(v))(function (v1) {
              return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(position)(v.from))(function (v2) {
                  return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(position)(v1))(function (v3) {
                      return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(position)(v.to))(function (v4) {
                          return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Array.index(Data_Lens_Getter.viewOn(state)(_holes(Data_Lens_Internal_Forget.strongForget)))(v.to))(function (v5) {
                              var $76 = v2 && (v3 && (v5 && !v4));
                              if ($76) {
                                  return Data_Maybe.Just.create(Data_Array.updateAtIndices(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple(v.from, false), new Data_Tuple.Tuple(v1, false), new Data_Tuple.Tuple(v.to, true) ])(position));
                              };
                              return Data_Maybe.Nothing.value;
                          });
                      });
                  });
              });
          });
      };
  }, function (state) {
      var v = Data_Lens_Getter.viewOn(state)(_board(Data_Lens_Internal_Forget.strongForget));
      if (v instanceof CircleBoard) {
          return new Game_Core.SizeLimit(3, 1, 12, 1);
      };
      if (v instanceof Grid3Board) {
          return new Game_Core.SizeLimit(3, 1, 3, 9);
      };
      if (v instanceof RandomBoard) {
          return new Game_Core.SizeLimit(3, 1, 3, 9);
      };
      return new Game_Core.SizeLimit(7, 7, 7, 7);
  }, Game_Core["updateScore'"](scoregame)(Game_Core.AlwaysShowWin.value));
  var setBoardA = function (board) {
      return Game_Core.newGame(solitaireGame)(function (state) {
          var st2 = Data_Lens_Setter.set(_board(Data_Profunctor_Strong.strongFn))(board)(state);
          if (board instanceof CircleBoard) {
              return Data_Lens_Setter.set(Game_Core["_nbColumns"](Data_Profunctor_Strong.strongFn))(1)(Data_Lens_Setter.set(Game_Core["_nbRows"](Data_Profunctor_Strong.strongFn))(6)(st2));
          };
          if (board instanceof Grid3Board) {
              return Data_Lens_Setter.set(Game_Core["_nbColumns"](Data_Profunctor_Strong.strongFn))(5)(Data_Lens_Setter.set(Game_Core["_nbRows"](Data_Profunctor_Strong.strongFn))(3)(st2));
          };
          if (board instanceof RandomBoard) {
              return Data_Lens_Setter.set(Game_Core["_nbColumns"](Data_Profunctor_Strong.strongFn))(5)(Data_Lens_Setter.set(Game_Core["_nbRows"](Data_Profunctor_Strong.strongFn))(3)(st2));
          };
          return Data_Lens_Setter.set(Game_Core["_nbColumns"](Data_Profunctor_Strong.strongFn))(7)(Data_Lens_Setter.set(Game_Core["_nbRows"](Data_Profunctor_Strong.strongFn))(7)(st2));
      });
  };
  exports["FrenchBoard"] = FrenchBoard;
  exports["EnglishBoard"] = EnglishBoard;
  exports["CircleBoard"] = CircleBoard;
  exports["Grid3Board"] = Grid3Board;
  exports["RandomBoard"] = RandomBoard;
  exports["istate"] = istate;
  exports["_board"] = _board;
  exports["_holes"] = _holes;
  exports["_dragged"] = _dragged;
  exports["_help"] = _help;
  exports["setBoardA"] = setBoardA;
  exports["toggleHelpA"] = toggleHelpA;
  exports["boardMode"] = boardMode;
  exports["showMode"] = showMode;
  exports["solitaireGame"] = solitaireGame;
  exports["scoregame"] = scoregame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Solitaire.View"] = $PS["Game.Solitaire.View"] || {};
  var exports = $PS["Game.Solitaire.View"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Game_Core = $PS["Game.Core"];
  var Game_Solitaire_Model = $PS["Game.Solitaire.Model"];
  var Lib_Util = $PS["Lib.Util"];
  var $$Math = $PS["Math"];
  var Pha = $PS["Pha"];
  var Pha_Html = $PS["Pha.Html"];
  var UI_Icon = $PS["UI.Icon"];
  var UI_Icons = $PS["UI.Icons"];
  var UI_Template = $PS["UI.Template"];                
  var tricolor = function (i) {
      return function (columns) {
          return function (help) {
              var v = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(i)(columns) + (help * Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(i)(columns) | 0) | 0)(3);
              if (v === 0) {
                  return "red";
              };
              if (v === 1) {
                  return "blue";
              };
              return "green";
          };
      };
  };
  var cursor = function (pp) {
      return function (v) {
          return Pha_Html.circle(0.0)(0.0)(20.0)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.attr(Pha_Html.unittoStr)("pointer-events")("none"), Pha_Html.fill("url(#soli-peg)") ])(UI_Template.svgCursorStyle(pp)));
      };
  };
  var view = function (state) {
      var rules = [ Pha.text("Jeu du solitaire"), Pha_Html.br, Pha.text("blah blah") ];
      var rows = Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget));
      var nbPegs = Game_Core.scoreFn(Game_Solitaire_Model.scoregame)(state);
      var s = (function () {
          var $21 = nbPegs > 1;
          if ($21) {
              return "s";
          };
          return "";
      })();
      var winTitle = Data_Show.show(Data_Show.showInt)(nbPegs) + (" jeton" + (s + (" restant" + s)));
      var isCircleBoard = Data_Eq.eq(Game_Solitaire_Model.boardMode)(Data_Lens_Getter.viewOn(state)(Game_Solitaire_Model["_board"](Data_Lens_Internal_Forget.strongForget)))(Game_Solitaire_Model.CircleBoard.value);
      var config = (function () {
          var ihelp = UI_Icons.iconbutton(state)(function (v) {
              return {
                  icon: new UI_Icon.IconSymbol("#help"),
                  selected: Data_Lens_Getter.viewOn(state)(Game_Solitaire_Model["_help"](Data_Lens_Internal_Forget.strongForget)) > 0,
                  tooltip: new Data_Maybe.Just("Aide"),
                  round: v.round,
                  large: v.large,
                  hidden: v.hidden,
                  disabled: v.disabled,
                  style: v.style
              };
          })([ Pha_Html.click(Game_Solitaire_Model.toggleHelpA) ]);
          var boards = [ Game_Solitaire_Model.CircleBoard.value, Game_Solitaire_Model.Grid3Board.value, Game_Solitaire_Model.RandomBoard.value, Game_Solitaire_Model.EnglishBoard.value, Game_Solitaire_Model.FrenchBoard.value ];
          return UI_Template.card("Jeu du solitaire")([ UI_Icons.iconSelectGroup(Game_Solitaire_Model.showMode)(Game_Solitaire_Model.boardMode)(state)("Plateau")(boards)(Data_Lens_Getter.viewOn(state)(Game_Solitaire_Model["_board"](Data_Lens_Internal_Forget.strongForget)))(Game_Solitaire_Model.setBoardA)(function (i) {
              return function (opt) {
                  if (i instanceof Game_Solitaire_Model.CircleBoard) {
                      return {
                          icon: new UI_Icon.IconSymbol("#circle"),
                          selected: opt.selected,
                          tooltip: new Data_Maybe.Just("Cercle"),
                          round: opt.round,
                          large: opt.large,
                          hidden: opt.hidden,
                          disabled: opt.disabled,
                          style: opt.style
                      };
                  };
                  if (i instanceof Game_Solitaire_Model.Grid3Board) {
                      return {
                          icon: new UI_Icon.IconText("3xN"),
                          selected: opt.selected,
                          tooltip: new Data_Maybe.Just("3xN"),
                          round: opt.round,
                          large: opt.large,
                          hidden: opt.hidden,
                          disabled: opt.disabled,
                          style: opt.style
                      };
                  };
                  if (i instanceof Game_Solitaire_Model.RandomBoard) {
                      return {
                          icon: new UI_Icon.IconSymbol("#shuffle"),
                          selected: opt.selected,
                          tooltip: new Data_Maybe.Just("Al\xe9atoire"),
                          round: opt.round,
                          large: opt.large,
                          hidden: opt.hidden,
                          disabled: opt.disabled,
                          style: opt.style
                      };
                  };
                  if (i instanceof Game_Solitaire_Model.EnglishBoard) {
                      return {
                          icon: new UI_Icon.IconSymbol("#tea"),
                          selected: opt.selected,
                          tooltip: new Data_Maybe.Just("Anglais"),
                          round: opt.round,
                          large: opt.large,
                          hidden: opt.hidden,
                          disabled: opt.disabled,
                          style: opt.style
                      };
                  };
                  if (i instanceof Game_Solitaire_Model.FrenchBoard) {
                      return {
                          icon: new UI_Icon.IconSymbol("#bread"),
                          selected: opt.selected,
                          tooltip: new Data_Maybe.Just("Fran\xe7ais"),
                          round: opt.round,
                          large: opt.large,
                          hidden: opt.hidden,
                          disabled: opt.disabled,
                          style: opt.style
                      };
                  };
                  throw new Error("Failed pattern match at Game.Solitaire.View (line 46, column 88 - line 51, column 91): " + [ i.constructor.name ]);
              };
          }), UI_Icons.icongroup("Options")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ ihelp ])(Data_Functor.mapFlipped(Data_Functor.functorArray)([ UI_Icons.iundo, UI_Icons.iredo, UI_Icons.ireset, UI_Icons.irules ])(function (x) {
              return x(state);
          }))), UI_Icons.iconBestScore(Game_Solitaire_Model.scoregame)(state) ]);
      })();
      var columns = Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget));
      var itemStyle = function (i) {
          var v = Lib_Util.coords(columns)(i);
          if (isCircleBoard) {
              return Pha_Html.translate(Pha_Html.unitPx)(Pha_Html.unitPx)(Pha_Html.px(125.0 + $$Math.sin((2.0 * $$Math.pi * Data_Int.toNumber(i)) / Data_Int.toNumber(rows)) * 90.0))(Pha_Html.px(125.0 + $$Math.cos((2.0 * $$Math.pi * Data_Int.toNumber(i)) / Data_Int.toNumber(rows)) * 90.0));
          };
          return Pha_Html.translate(Pha_Html.unitPx)(Pha_Html.unitPx)(Pha_Html.px(50.0 * Data_Int.toNumber(v.col) + 25.0))(Pha_Html.px(50.0 * Data_Int.toNumber(v.row) + 25.0));
      };
      var grid = Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html["class'"]("ui-board")(true) ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(UI_Template.dndBoardProps(Data_Eq.eqInt)(Game_Solitaire_Model.solitaireGame)(function (dictStrong) {
          return Game_Solitaire_Model["_dragged"](dictStrong);
      }))((function () {
          if (isCircleBoard) {
              return [ Pha_Html.style(Pha_Html.unittoStr)("width")("100%"), Pha_Html.style(Pha_Html.unittoStr)("height")("100%") ];
          };
          return UI_Template.gridStyle(rows)(columns)(5);
      })())))([ Pha_Html.svg([ (function () {
          if (isCircleBoard) {
              return Pha_Html.viewBox(0)(0)(250)(250);
          };
          return Pha_Html.viewBox(0)(0)(50 * columns | 0)(50 * rows | 0);
      })() ])(Data_Array.concat([ [ Pha.ifN(isCircleBoard)(function (v) {
          return Pha_Html.circle(125.0)(125.0)(90.0)([ Pha_Html.stroke("grey"), Pha_Html.fill("transparent"), Pha_Html.strokeWidth("5") ]);
      }) ], Data_Array.concat(Data_Array.mapWithIndex(function (i) {
          return function (val) {
              var $29 = !val;
              if ($29) {
                  return [  ];
              };
              return [ Pha.ifN(Data_Lens_Getter.viewOn(state)(Game_Solitaire_Model["_help"](Data_Lens_Internal_Forget.strongForget)) > 0 && !isCircleBoard)(function (v) {
                  return Pha_Html.rect(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(-25.0)(-25.0)(50.0)(50.0)([ Pha_Html.key("rect" + Data_Show.show(Data_Show.showInt)(i)), Pha_Html.fill(tricolor(i)(columns)(Data_Lens_Getter.viewOn(state)(Game_Solitaire_Model["_help"](Data_Lens_Internal_Forget.strongForget)))), Pha_Html.style(Pha_Html.unittoStr)("transform")(itemStyle(i)) ]);
              }), Pha_Html.circle(0.0)(0.0)(17.0)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.key("h" + Data_Show.show(Data_Show.showInt)(i)), Pha_Html.fill("url(#soli-hole)"), Pha_Html["class'"]("solitaire-hole")(true), Pha_Html.style(Pha_Html.unittoStr)("transform")(itemStyle(i)) ])(UI_Template.dndItemProps(Data_Eq.eqInt)(Game_Solitaire_Model.solitaireGame)(function (dictStrong) {
                  return Game_Solitaire_Model["_dragged"](dictStrong);
              })(false)(true)(i)(state))) ];
          };
      })(Data_Lens_Getter.viewOn(state)(Game_Solitaire_Model["_holes"](Data_Lens_Internal_Forget.strongForget)))), Data_Array.mapWithIndex(function (i) {
          return function (val) {
              return Pha.ifN(val)(function (v) {
                  return Pha_Html.circle(0.0)(0.0)(20.0)(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.key("p" + Data_Show.show(Data_Show.showInt)(i)), Pha_Html.fill("url(#soli-peg)"), Pha_Html["class'"]("solitaire-peg")(true), Pha_Html.style(Pha_Html.unittoStr)("transform")(itemStyle(i)) ])(UI_Template.dndItemProps(Data_Eq.eqInt)(Game_Solitaire_Model.solitaireGame)(function (dictStrong) {
                      return Game_Solitaire_Model["_dragged"](dictStrong);
                  })(true)(false)(i)(state)));
              });
          };
      })(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget))), [ Pha.maybeN(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(cursor)(Data_Lens_Getter.viewOn(state)(Game_Core["_pointer"](Data_Lens_Internal_Forget.strongForget))))(Data_Lens_Getter.viewOn(state)(Game_Solitaire_Model["_dragged"](Data_Lens_Internal_Forget.strongForget)))) ] ])) ]);
      var scoreDialog = function (v) {
          return UI_Template.bestScoreDialog(Game_Solitaire_Model.scoregame)(state)(function (position) {
              return [ Pha_Html["div'"]([ Pha_Html["class'"]("ui-flex-center solitaire-scoredialog")(true) ])([ Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html["class'"]("ui-board")(true) ])((function () {
                  if (isCircleBoard) {
                      return [ Pha_Html.style(Pha_Html.unittoStr)("width")("100%"), Pha_Html.style(Pha_Html.unittoStr)("height")("100%") ];
                  };
                  return UI_Template.gridStyle(rows)(columns)(5);
              })()))([ Pha_Html.svg([ (function () {
                  if (isCircleBoard) {
                      return Pha_Html.viewBox(0)(0)(250)(250);
                  };
                  return Pha_Html.viewBox(0)(0)(50 * columns | 0)(50 * rows | 0);
              })() ])(Data_Array.concat([ [ Pha.ifN(isCircleBoard)(function (v1) {
                  return Pha_Html.circle(125.0)(125.0)(90.0)([ Pha_Html.stroke("grey"), Pha_Html.fill("transparent"), Pha_Html.strokeWidth("5") ]);
              }) ], Data_Array.mapWithIndex(function (i) {
                  return function (val) {
                      return Pha.ifN(val)(function (v1) {
                          return Pha_Html.circle(0.0)(0.0)(17.0)([ Pha_Html.key("h" + Data_Show.show(Data_Show.showInt)(i)), Pha_Html.fill("url(#soli-hole)"), Pha_Html["class'"]("solitaire-hole")(true), Pha_Html.style(Pha_Html.unittoStr)("transform")(itemStyle(i)) ]);
                      });
                  };
              })(Data_Lens_Getter.viewOn(state)(Game_Solitaire_Model["_holes"](Data_Lens_Internal_Forget.strongForget))), Data_Array.mapWithIndex(function (i) {
                  return function (val) {
                      return Pha.ifN(val)(function (v1) {
                          return Pha_Html.circle(0.0)(0.0)(20.0)([ Pha_Html.key("p" + Data_Show.show(Data_Show.showInt)(i)), Pha_Html.fill("url(#soli-peg)"), Pha_Html["class'"]("solitaire-peg")(true), Pha_Html.style(Pha_Html.unittoStr)("transform")(itemStyle(i)) ]);
                      });
                  };
              })(position) ])) ]) ]) ];
          });
      };
      var board = UI_Template.incDecGrid(Game_Solitaire_Model.solitaireGame)(state)([ grid ]);
      return UI_Template.template(Game_Solitaire_Model.solitaireGame)(function (v) {
          return {
              board: board,
              config: config,
              rules: rules,
              winTitle: winTitle,
              customDialog: v.customDialog,
              scoreDialog: scoreDialog
          };
      })(state);
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Solitaire"] = $PS["Game.Solitaire"] || {};
  var exports = $PS["Game.Solitaire"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Unit = $PS["Data.Unit"];
  var Game = $PS["Game"];
  var Game_Core = $PS["Game.Core"];
  var Game_Solitaire_Model = $PS["Game.Solitaire.Model"];
  var Game_Solitaire_View = $PS["Game.Solitaire.View"];
  var Pha_Lens = $PS["Pha.Lens"];
  var Run = $PS["Run"];                
  var State = function (x) {
      return x;
  };
  var state = Game_Solitaire_Model.istate;
  var _iso = function (dictProfunctor) {
      return Data_Lens_Iso.iso(function (v) {
          return v;
      })(State)(dictProfunctor);
  };
  var cgame = new Game.CGame(Pha_Lens.actionOver(function (dictStrong) {
      return _iso(dictStrong.Profunctor0());
  })(Game_Core.init(Game_Solitaire_Model.solitaireGame)), function (v) {
      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
  }, function (lens) {
      return function (v) {
          return Pha_Lens.viewOver(function (dictStrong) {
              var $9 = lens(dictStrong);
              var $10 = _iso(dictStrong.Profunctor0());
              return function ($11) {
                  return $9($10($11));
              };
          })(Game_Solitaire_View.view(v));
      };
  });
  exports["state"] = state;
  exports["cgame"] = cgame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Tiling.Model"] = $PS["Game.Tiling.Model"] || {};
  var exports = $PS["Game.Tiling.Model"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Index = $PS["Data.Lens.Index"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Wander = $PS["Data.Lens.Internal.Wander"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Game_Common = $PS["Game.Common"];
  var Game_Core = $PS["Game.Core"];
  var Lib_Random = $PS["Lib.Random"];
  var Lib_Util = $PS["Lib.Util"];
  var Pha_Action = $PS["Pha.Action"];
  var Run = $PS["Run"];                
  var Type1 = (function () {
      function Type1() {

      };
      Type1.value = new Type1();
      return Type1;
  })();
  var Type2 = (function () {
      function Type2() {

      };
      Type2.value = new Type2();
      return Type2;
  })();
  var Type3 = (function () {
      function Type3() {

      };
      Type3.value = new Type3();
      return Type3;
  })();
  var CustomTile = (function () {
      function CustomTile() {

      };
      CustomTile.value = new CustomTile();
      return CustomTile;
  })();
  var Ext = function (x) {
      return x;
  };
  var translate = function (v) {
      return Data_Functor.map(Data_Functor.functorArray)(function (v1) {
          return {
              row: v1.row + v.row | 0,
              col: v1.col + v.col | 0
          };
      });
  };
  var sinks = function (state) {
      return Data_Array.catMaybes(Data_Array.mapWithIndex(function (i) {
          return function (v) {
              var $44 = v === (-1 | 0);
              if ($44) {
                  return new Data_Maybe.Just(i);
              };
              return Data_Maybe.Nothing.value;
          };
      })(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget))));
  };
  var showTileType = new Data_Show.Show(function (v) {
      if (v instanceof Type1) {
          return "beast1";
      };
      if (v instanceof Type2) {
          return "beast2";
      };
      if (v instanceof Type3) {
          return "beast3";
      };
      if (v instanceof CustomTile) {
          return "customize";
      };
      throw new Error("Failed pattern match at Game.Tiling.Model (line 15, column 1 - line 19, column 34): " + [ v.constructor.name ]);
  });
  var rotate90 = Data_Functor.map(Data_Functor.functorArray)(function (v) {
      return {
          row: v.col,
          col: -v.row | 0
      };
  });
  var rotate = function ($copy_v) {
      return function ($copy_t) {
          var $tco_var_v = $copy_v;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v, t) {
              if (v === 0) {
                  $tco_done = true;
                  return t;
              };
              $tco_var_v = v - 1 | 0;
              $copy_t = rotate90(t);
              return;
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v, $copy_t);
          };
          return $tco_result;
      };
  };
  var putSinkA = function (i) {
      return Pha_Action.setState(Data_Lens_Setter.set((function () {
          var $68 = Game_Core["_position"](Data_Profunctor_Strong.strongFn);
          var $69 = Data_Lens_Index.ix(Data_Lens_Index.indexArray)(i)(Data_Lens_Internal_Wander.wanderFunction);
          return function ($70) {
              return $68($69($70));
          };
      })())(-1 | 0));
  };
  var istate = Game_Core.genState([  ])(function (v) {
      return {
          position: v.position,
          history: v.history,
          redoHistory: v.redoHistory,
          dialog: v.dialog,
          turn: v.turn,
          nbRows: 5,
          nbColumns: 5,
          customSize: v.customSize,
          mode: v.mode,
          help: v.help,
          locked: v.locked,
          showWin: v.showWin,
          scores: v.scores,
          pointer: v.pointer
      };
  })({
      rotation: 0,
      tileType: Type1.value,
      tile: [  ],
      nbSinks: 0,
      hoverSquare: Data_Maybe.Nothing.value
  });
  var eqTileType = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Type1 && y instanceof Type1) {
              return true;
          };
          if (x instanceof Type2 && y instanceof Type2) {
              return true;
          };
          if (x instanceof Type3 && y instanceof Type3) {
              return true;
          };
          if (x instanceof CustomTile && y instanceof CustomTile) {
              return true;
          };
          return false;
      };
  });
  var canPutTile = function (state) {
      return Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (index) {
          return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_Array.index(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)))(index))(new Data_Maybe.Just(0));
      });
  };
  var _ext$prime = function (dictStrong) {
      var $71 = Game_Core["_ext"](dictStrong);
      var $72 = Data_Lens_Iso.iso(function (v) {
          return v;
      })(Ext)(dictStrong.Profunctor0());
      return function ($73) {
          return $71($72($73));
      };
  };
  var _hoverSquare = function (dictStrong) {
      var $74 = _ext$prime(dictStrong);
      var $75 = Data_Lens_Lens.lens(function (v) {
          return v.hoverSquare;
      })(function (v) {
          return function (v1) {
              return {
                  hoverSquare: v1,
                  nbSinks: v.nbSinks,
                  rotation: v.rotation,
                  tile: v.tile,
                  tileType: v.tileType
              };
          };
      })(dictStrong);
      return function ($76) {
          return $74($75($76));
      };
  };
  var setHoverSquareA = function (a) {
      return Pha_Action.setState(Data_Lens_Setter.set(_hoverSquare(Data_Profunctor_Strong.strongFn))(a));
  };
  var _nbSinks = function (dictStrong) {
      var $77 = _ext$prime(dictStrong);
      var $78 = Data_Lens_Lens.lens(function (v) {
          return v.nbSinks;
      })(function (v) {
          return function (v1) {
              return {
                  nbSinks: v1,
                  hoverSquare: v.hoverSquare,
                  rotation: v.rotation,
                  tile: v.tile,
                  tileType: v.tileType
              };
          };
      })(dictStrong);
      return function ($79) {
          return $77($78($79));
      };
  };
  var _rotation = function (dictStrong) {
      var $80 = _ext$prime(dictStrong);
      var $81 = Data_Lens_Lens.lens(function (v) {
          return v.rotation;
      })(function (v) {
          return function (v1) {
              return {
                  rotation: v1,
                  hoverSquare: v.hoverSquare,
                  nbSinks: v.nbSinks,
                  tile: v.tile,
                  tileType: v.tileType
              };
          };
      })(dictStrong);
      return function ($82) {
          return $80($81($82));
      };
  };
  var rotateA = Pha_Action.setState(Data_Lens_Setter.over(_rotation(Data_Profunctor_Strong.strongFn))(Data_Semiring.add(Data_Semiring.semiringInt)(1)));
  var onKeyDown = function (v) {
      if (v === " ") {
          return rotateA;
      };
      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
  };
  var _tile = function (dictStrong) {
      var $83 = _ext$prime(dictStrong);
      var $84 = Data_Lens_Lens.lens(function (v) {
          return v.tile;
      })(function (v) {
          return function (v1) {
              return {
                  tile: v1,
                  hoverSquare: v.hoverSquare,
                  nbSinks: v.nbSinks,
                  rotation: v.rotation,
                  tileType: v.tileType
              };
          };
      })(dictStrong);
      return function ($85) {
          return $83($84($85));
      };
  };
  var placeTile = function (state) {
      return function (index) {
          var columns = Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget));
          return Data_Functor.mapFlipped(Data_Functor.functorArray)(translate(Lib_Util.coords(columns)(index))(rotate(Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(Data_Lens_Getter.viewOn(state)(_rotation(Data_Lens_Internal_Forget.strongForget)))(4))(Data_Lens_Getter.viewOn(state)(_tile(Data_Lens_Internal_Forget.strongForget)))))(function (v) {
              var $56 = 0 <= v.col && v.col < columns;
              if ($56) {
                  return (v.row * columns | 0) + v.col | 0;
              };
              return -1 | 0;
          });
      };
  };
  var _tileType = function (dictStrong) {
      var $86 = _ext$prime(dictStrong);
      var $87 = Data_Lens_Lens.lens(function (v) {
          return v.tileType;
      })(function (v) {
          return function (v1) {
              return {
                  tileType: v1,
                  hoverSquare: v.hoverSquare,
                  nbSinks: v.nbSinks,
                  rotation: v.rotation,
                  tile: v.tile
              };
          };
      })(dictStrong);
      return function ($88) {
          return $86($87($88));
      };
  };
  var getTile = function (state) {
      var v = Data_Lens_Getter.viewOn(state)(_tileType(Data_Lens_Internal_Forget.strongForget));
      if (v instanceof Type1) {
          return [ {
              row: 0,
              col: 0
          }, {
              row: 0,
              col: 1
          } ];
      };
      if (v instanceof Type2) {
          return [ {
              row: 0,
              col: 0
          }, {
              row: 0,
              col: 1
          }, {
              row: 0,
              col: -1 | 0
          } ];
      };
      if (v instanceof Type3) {
          return [ {
              row: 0,
              col: 0
          }, {
              row: 0,
              col: 1
          }, {
              row: 1,
              col: 0
          } ];
      };
      if (v instanceof CustomTile) {
          return Data_Lens_Getter.viewOn(state)(_tile(Data_Lens_Internal_Forget.strongForget));
      };
      throw new Error("Failed pattern match at Game.Tiling.Model (line 68, column 17 - line 72, column 31): " + [ v.constructor.name ]);
  };
  var tilingGame = new Game_Core.Game(function (v) {
      return Data_Maybe.Nothing.value;
  }, function (state) {
      return Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Array.replicate(Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget)) * Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget)) | 0)(0));
  }, (function () {
      var $89 = Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (v) {
          return v !== 0;
      });
      var $90 = Data_Lens_Getter.view(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      return function ($91) {
          return $89($90($91));
      };
  })(), function (state) {
      return Control_Applicative.pure(Lib_Random.applicativeRandom)(Data_Lens_Setter.set(_rotation(Data_Profunctor_Strong.strongFn))(0)(Data_Lens_Setter.set(_tile(Data_Profunctor_Strong.strongFn))(getTile(state))(state)));
  }, function (state) {
      return function (index) {
          var tilePos = placeTile(state)(index);
          var pos = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
          var $60 = canPutTile(state)(tilePos);
          if ($60) {
              var m = Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Ord.max(Data_Ord.ordInt))(0)(pos) + 1 | 0;
              return Data_Maybe.Just.create(Data_Array.updateAtIndices(Data_Foldable.foldableArray)(Data_Functor.mapFlipped(Data_Functor.functorArray)(tilePos)(function (v) {
                  return new Data_Tuple.Tuple(v, m);
              }))(pos));
          };
          var $61 = Data_Ord.greaterThan(Data_Maybe.ordMaybe(Data_Ord.ordInt))(Data_Array.index(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)))(index))(new Data_Maybe.Just(0));
          if ($61) {
              return Data_Maybe.Just.create(Data_Functor.mapFlipped(Data_Functor.functorArray)(pos)(function (x) {
                  var $62 = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(new Data_Maybe.Just(x))(Data_Array.index(pos)(index));
                  if ($62) {
                      return 0;
                  };
                  return x;
              }));
          };
          return Data_Maybe.Nothing.value;
      };
  }, Data_Function["const"](new Game_Core.SizeLimit(3, 3, 10, 10)), function (st) {
      return new Data_Tuple.Tuple(st, true);
  });
  var clickOnCellA = function (a) {
      return Control_Bind.bind(Run.bindRun)(Pha_Action.getState)(function (v) {
          var $64 = Data_Array.length(sinks(v)) < Data_Lens_Getter.viewOn(v)(_nbSinks(Data_Lens_Internal_Forget.strongForget));
          if ($64) {
              return putSinkA(a);
          };
          return Game_Core.playA(tilingGame)(a);
      });
  };
  var flipTileA = function (index) {
      return Game_Core.newGame(tilingGame)(Data_Lens_Setter.over((function () {
          var $92 = _tile(Data_Profunctor_Strong.strongFn);
          var $93 = Game_Common["_isoCustom"](Data_Profunctor.profunctorFn);
          var $94 = Data_Lens_Index.ix(Data_Lens_Index.indexArray)(index)(Data_Lens_Internal_Wander.wanderFunction);
          return function ($95) {
              return $92($93($94($95)));
          };
      })())(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean)));
  };
  var inConflict = function (state) {
      var v = Data_Lens_Getter.viewOn(state)(_hoverSquare(Data_Lens_Internal_Forget.strongForget));
      if (v instanceof Data_Maybe.Nothing) {
          return false;
      };
      if (v instanceof Data_Maybe.Just) {
          return Data_Eq.notEq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_Array.index(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)))(v.value0))(new Data_Maybe.Just(0)) || !Game_Core.canPlay(tilingGame)(state)(v.value0);
      };
      throw new Error("Failed pattern match at Game.Tiling.Model (line 93, column 20 - line 95, column 77): " + [ v.constructor.name ]);
  };
  var setNbSinksA = Game_Core["newGame'"](tilingGame)(Data_Lens_Setter.set(_nbSinks(Data_Profunctor_Strong.strongFn)));
  var setTileA = function (ttype) {
      return Game_Core.newGame(tilingGame)((function () {
          var $96 = Data_Lens_Setter.set(_tileType(Data_Profunctor_Strong.strongFn))(ttype);
          var $97 = (function () {
              var $67 = Data_Eq.eq(eqTileType)(ttype)(CustomTile.value);
              if ($67) {
                  return Data_Lens_Setter.set(Game_Core["_dialog"](Data_Profunctor_Strong.strongFn))(Game_Core.CustomDialog.value);
              };
              return Control_Category.identity(Control_Category.categoryFn);
          })();
          return function ($98) {
              return $96($97($98));
          };
      })());
  };
  exports["Type1"] = Type1;
  exports["Type2"] = Type2;
  exports["Type3"] = Type3;
  exports["CustomTile"] = CustomTile;
  exports["istate"] = istate;
  exports["_rotation"] = _rotation;
  exports["_tile"] = _tile;
  exports["_tileType"] = _tileType;
  exports["_nbSinks"] = _nbSinks;
  exports["sinks"] = sinks;
  exports["inConflict"] = inConflict;
  exports["setNbSinksA"] = setNbSinksA;
  exports["setTileA"] = setTileA;
  exports["clickOnCellA"] = clickOnCellA;
  exports["rotateA"] = rotateA;
  exports["setHoverSquareA"] = setHoverSquareA;
  exports["onKeyDown"] = onKeyDown;
  exports["flipTileA"] = flipTileA;
  exports["eqTileType"] = eqTileType;
  exports["showTileType"] = showTileType;
  exports["tilingGame"] = tilingGame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Tiling.View"] = $PS["Game.Tiling.View"] || {};
  var exports = $PS["Game.Tiling.View"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Common = $PS["Game.Common"];
  var Game_Core = $PS["Game.Core"];
  var Game_Effs = $PS["Game.Effs"];
  var Game_Tiling_Model = $PS["Game.Tiling.Model"];
  var Lib_Util = $PS["Lib.Util"];
  var Pha = $PS["Pha"];
  var Pha_Html = $PS["Pha.Html"];
  var Run = $PS["Run"];
  var UI_Icon = $PS["UI.Icon"];
  var UI_Icons = $PS["UI.Icons"];
  var UI_Template = $PS["UI.Template"];                
  var square = function (v) {
      return function (props) {
          return Pha_Html.g(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html["class'"]("tiling-darken")(v.isDark), Pha_Html.transform(Pha_Html.translate(Pha_Html.unitInt)(Pha_Html.unitInt)(50 * v.col | 0)(50 * v.row | 0)) ])(props))([ Pha_Html.rect(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(0.0)(0.0)(50.0)(50.0)([ Pha_Html.key("conc"), Pha_Html.fill("url(#concrete)") ]), Pha.ifN(v.hasBlock)(function (v1) {
              return Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(0.0)(0.0)(50.0)(50.0)("#tile2")([ Pha_Html.key("tile") ]);
          }), Pha.ifN(v.hasSink)(function (v1) {
              return Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(0.0)(0.0)(50.0)(50.0)("#sink")([ Pha_Html.key("sink") ]);
          }) ]);
      };
  };
  var view = function (state) {
      var tileCursor = function (pp) {
          return Pha_Html.g(UI_Template.svgCursorStyle(pp))([ Pha_Html.g([ Pha_Html["class'"]("tiling-cursor")(true), Pha_Html.style(Pha_Html.unittoStr)("transform")("rotate(" + (Data_Show.show(Data_Show.showInt)(90 * Data_Lens_Getter.viewOn(state)(Game_Tiling_Model["_rotation"](Data_Lens_Internal_Forget.strongForget)) | 0) + "deg)")) ])(Data_Functor.mapFlipped(Data_Functor.functorArray)(Data_Lens_Getter.viewOn(state)(Game_Tiling_Model["_tile"](Data_Lens_Internal_Forget.strongForget)))(function (v) {
              return Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(50.0 * Data_Int.toNumber(v.col) - 25.0)(50.0 * Data_Int.toNumber(v.row) - 25.0)(50.0)(50.0)("#tile2")([ Pha_Html.attr(Pha_Html.unittoStr)("pointer-events")("none"), Pha_Html.attr(Pha_Html.unittoStr)("opacity")((function () {
                  var $22 = Game_Tiling_Model.inConflict(state);
                  if ($22) {
                      return "0.3";
                  };
                  return "0.8";
              })()) ]);
          })) ]);
      };
      var sinkCursor = function (pp) {
          return Pha_Html.use(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(-25.0)(-25.0)(50.0)(50.0)("#sink")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html.attr(Pha_Html.unittoStr)("pointer-events")("none") ])(UI_Template.svgCursorStyle(pp)));
      };
      var rules = [ Pha.text("blah blah") ];
      var rows = Data_Lens_Getter.viewOn(state)(Game_Core["_nbRows"](Data_Lens_Internal_Forget.strongForget));
      var position = Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget));
      var customDialog = function (v) {
          return UI_Template.dialog("Personnalise ta tuile")([ Pha_Html["div'"]([ Pha_Html["class'"]("tiling-customtile-grid-container")(true) ])([ Pha_Html["div'"]([ Pha_Html["class'"]("tiling-grid")(true) ])([ Pha_Html.svg([ Pha_Html.viewBox(0)(0)(250)(250) ])(Data_Array.mapWithIndex(function (index) {
              return function (hasBlock) {
                  var v1 = Lib_Util.coords(5)(index);
                  return square({
                      hasBlock: hasBlock,
                      row: v1.row,
                      col: v1.col,
                      hasSink: false,
                      isDark: false
                  })([ Pha_Html.key(Data_Show.show(Data_Show.showInt)(index)), Pha_Html.click(Game_Tiling_Model.flipTileA(index)) ]);
              };
          })(Data_Lens_Getter.viewOn(state)((function () {
              var $35 = Game_Tiling_Model["_tile"](Data_Lens_Internal_Forget.strongForget);
              var $36 = Game_Common["_isoCustom"](Data_Lens_Internal_Forget.profunctorForget);
              return function ($37) {
                  return $35($36($37));
              };
          })()))) ]) ]) ]);
      };
      var config = UI_Template.card("Carrelage")([ UI_Icons.iconSizesGroup(Game_Tiling_Model.tilingGame)(state)([ new Data_Tuple.Tuple(4, 5), new Data_Tuple.Tuple(5, 5), new Data_Tuple.Tuple(5, 6), new Data_Tuple.Tuple(7, 7) ])(true), UI_Icons.iconSelectGroup(Game_Tiling_Model.showTileType)(Game_Tiling_Model.eqTileType)(state)("Motif du pav\xe9")([ Game_Tiling_Model.Type1.value, Game_Tiling_Model.Type2.value, Game_Tiling_Model.Type3.value, Game_Tiling_Model.CustomTile.value ])(Data_Lens_Getter.viewOn(state)(Game_Tiling_Model["_tileType"](Data_Lens_Internal_Forget.strongForget)))(Game_Tiling_Model.setTileA)(function (t) {
          return function (v) {
              return {
                  icon: new UI_Icon.IconSymbol("#" + Data_Show.show(Game_Tiling_Model.showTileType)(t)),
                  selected: v.selected,
                  tooltip: v.tooltip,
                  round: v.round,
                  large: v.large,
                  hidden: v.hidden,
                  disabled: v.disabled,
                  style: v.style
              };
          };
      }), UI_Icons.iconSelectGroup(Data_Show.showInt)(Data_Eq.eqInt)(state)("Nombre d'\xe9viers")([ 0, 1, 2 ])(Data_Lens_Getter.viewOn(state)(Game_Tiling_Model["_nbSinks"](Data_Lens_Internal_Forget.strongForget)))(Game_Tiling_Model.setNbSinksA)(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn))), UI_Icons.icongroup("Options")([ UI_Icons.ihelp(state), UI_Icons.ireset(state), UI_Icons.irules(state) ]) ]);
      var columns = Data_Lens_Getter.viewOn(state)(Game_Core["_nbColumns"](Data_Lens_Internal_Forget.strongForget));
      var border = function (i) {
          return function (di) {
              return Data_Eq.notEq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_Array.index(position)(i))(Data_Array.index(position)(i + di | 0));
          };
      };
      var grid = Pha_Html["div'"](Data_Semigroup.append(Data_Semigroup.semigroupArray)(UI_Template.gridStyle(rows)(columns)(5))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(UI_Template.trackPointer)([ Pha_Html["class'"]("ui-board")(true), Pha_Html.contextmenu(Control_Apply.applySecond(Run.applyRun)(Game_Effs.preventDefault)(Game_Tiling_Model.rotateA)) ])))([ Pha_Html.svg([ Pha_Html.viewBox(0)(0)(50 * columns | 0)(50 * rows | 0) ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Array.mapWithIndex(function (index) {
          return function (pos) {
              var v = Lib_Util.coords(columns)(index);
              return square({
                  isDark: Data_Lens_Getter.viewOn(state)(Game_Core["_help"](Data_Lens_Internal_Forget.strongForget)) && Data_Int.even(v.row + v.col | 0),
                  hasBlock: pos > 0,
                  hasSink: pos === (-1 | 0),
                  row: v.row,
                  col: v.col
              })([ Pha_Html.click(Game_Tiling_Model.clickOnCellA(index)), Pha_Html.pointerenter(Game_Tiling_Model.setHoverSquareA(new Data_Maybe.Just(index))), Pha_Html.pointerleave(Game_Tiling_Model.setHoverSquareA(Data_Maybe.Nothing.value)) ]);
          };
      })(position))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Array.mapWithIndex(function (index) {
          return function (pos) {
              var v = Lib_Util.coords(columns)(index);
              return Pha_Html.g([ Pha_Html.transform(Pha_Html.translate(Pha_Html.unitInt)(Pha_Html.unitInt)(50 * v.col | 0)(50 * v.row | 0)) ])([ Pha.ifN(pos > 0 && border(index)(-1 | 0))(function (v1) {
                  return Pha_Html.line(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(0.0)(0.0)(0.0)(50.0)([ Pha_Html.stroke("#000"), Pha_Html.strokeWidth("2") ]);
              }), Pha.ifN(pos > 0 && border(index)(1))(function (v1) {
                  return Pha_Html.line(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(50.0)(0.0)(50.0)(50.0)([ Pha_Html.stroke("#000"), Pha_Html.strokeWidth("2") ]);
              }), Pha.ifN(pos > 0 && border(index)(-columns | 0))(function (v1) {
                  return Pha_Html.line(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(0.0)(0.0)(50.0)(0.0)([ Pha_Html.stroke("#000"), Pha_Html.strokeWidth("2") ]);
              }), Pha.ifN(pos > 0 && border(index)(columns))(function (v1) {
                  return Pha_Html.line(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(Pha_Html.unitNumber)(0.0)(50.0)(50.0)(50.0)([ Pha_Html.stroke("#000"), Pha_Html.strokeWidth("2") ]);
              }) ]);
          };
      })(position))([ Pha.maybeN(Data_Functor.map(Data_Maybe.functorMaybe)((function () {
          var $34 = Data_Array.length(Game_Tiling_Model.sinks(state)) < Data_Lens_Getter.viewOn(state)(Game_Tiling_Model["_nbSinks"](Data_Lens_Internal_Forget.strongForget));
          if ($34) {
              return sinkCursor;
          };
          return tileCursor;
      })())(Data_Lens_Getter.viewOn(state)(Game_Core["_pointer"](Data_Lens_Internal_Forget.strongForget)))) ]))) ]);
      var board = UI_Template.incDecGrid(Game_Tiling_Model.tilingGame)(state)([ grid ]);
      return UI_Template.template(Game_Tiling_Model.tilingGame)(function (v) {
          return {
              board: board,
              config: config,
              rules: rules,
              winTitle: "GAGN\xc9",
              customDialog: customDialog,
              scoreDialog: v.scoreDialog
          };
      })(state);
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Tiling"] = $PS["Game.Tiling"] || {};
  var exports = $PS["Game.Tiling"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Game = $PS["Game"];
  var Game_Core = $PS["Game.Core"];
  var Game_Tiling_Model = $PS["Game.Tiling.Model"];
  var Game_Tiling_View = $PS["Game.Tiling.View"];
  var Pha_Lens = $PS["Pha.Lens"];                
  var State = function (x) {
      return x;
  };
  var state = Game_Tiling_Model.istate;
  var _iso = function (dictProfunctor) {
      return Data_Lens_Iso.iso(function (v) {
          return v;
      })(State)(dictProfunctor);
  };
  var cgame = new Game.CGame(Pha_Lens.actionOver(function (dictStrong) {
      return _iso(dictStrong.Profunctor0());
  })(Game_Core.init(Game_Tiling_Model.tilingGame)), function (a) {
      return Pha_Lens.actionOver(function (dictStrong) {
          return _iso(dictStrong.Profunctor0());
      })(Game_Tiling_Model.onKeyDown(a));
  }, function (lens) {
      return function (v) {
          return Pha_Lens.viewOver(function (dictStrong) {
              var $9 = lens(dictStrong);
              var $10 = _iso(dictStrong.Profunctor0());
              return function ($11) {
                  return $9($10($11));
              };
          })(Game_Tiling_View.view(v));
      };
  });
  exports["state"] = state;
  exports["cgame"] = cgame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Tricolor.Model"] = $PS["Game.Tricolor.Model"] || {};
  var exports = $PS["Game.Tricolor.Model"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Game_Core = $PS["Game.Core"];
  var Lib_Random = $PS["Lib.Random"];
  var Lib_Util = $PS["Lib.Util"];
  var Pha_Action = $PS["Pha.Action"];                
  var Ext = function (x) {
      return x;
  };
  var istate = Game_Core.genState([  ])(Control_Category.identity(Control_Category.categoryFn))({
      size: 5,
      nbColors: 2,
      range: 1,
      hoverCell: Data_Maybe.Nothing.value
  });
  var _ext$prime = function (dictStrong) {
      var $20 = Game_Core["_ext"](dictStrong);
      var $21 = Data_Lens_Iso.iso(function (v) {
          return v;
      })(Ext)(dictStrong.Profunctor0());
      return function ($22) {
          return $20($21($22));
      };
  };
  var _hoverCell = function (dictStrong) {
      var $23 = _ext$prime(dictStrong);
      var $24 = Data_Lens_Lens.lens(function (v) {
          return v.hoverCell;
      })(function (v) {
          return function (v1) {
              return {
                  hoverCell: v1,
                  nbColors: v.nbColors,
                  range: v.range,
                  size: v.size
              };
          };
      })(dictStrong);
      return function ($25) {
          return $23($24($25));
      };
  };
  var setHoverCellA = function (i) {
      return Pha_Action.setState(Data_Lens_Setter.set(_hoverCell(Data_Profunctor_Strong.strongFn))(i));
  };
  var _nbColors = function (dictStrong) {
      var $26 = _ext$prime(dictStrong);
      var $27 = Data_Lens_Lens.lens(function (v) {
          return v.nbColors;
      })(function (v) {
          return function (v1) {
              return {
                  nbColors: v1,
                  hoverCell: v.hoverCell,
                  range: v.range,
                  size: v.size
              };
          };
      })(dictStrong);
      return function ($28) {
          return $26($27($28));
      };
  };
  var _range = function (dictStrong) {
      var $29 = _ext$prime(dictStrong);
      var $30 = Data_Lens_Lens.lens(function (v) {
          return v.range;
      })(function (v) {
          return function (v1) {
              return {
                  range: v1,
                  hoverCell: v.hoverCell,
                  nbColors: v.nbColors,
                  size: v.size
              };
          };
      })(dictStrong);
      return function ($31) {
          return $29($30($31));
      };
  };
  var _size = function (dictStrong) {
      var $32 = _ext$prime(dictStrong);
      var $33 = Data_Lens_Lens.lens(function (v) {
          return v.size;
      })(function (v) {
          return function (v1) {
              return {
                  size: v1,
                  hoverCell: v.hoverCell,
                  nbColors: v.nbColors,
                  range: v.range
              };
          };
      })(dictStrong);
      return function ($34) {
          return $32($33($34));
      };
  };
  var inRange = function (state) {
      return function (i) {
          return function (i$prime) {
              var diff = Lib_Util.abs(i - i$prime | 0);
              return Data_Ord.min(Data_Ord.ordInt)(diff)(Data_Lens_Getter.viewOn(state)(_size(Data_Lens_Internal_Forget.strongForget)) - diff | 0) <= Data_Lens_Getter.viewOn(state)(_range(Data_Lens_Internal_Forget.strongForget));
          };
      };
  };
  var tricolorGame = new Game_Core.Game(Data_Function["const"](Data_Maybe.Nothing.value), function (state) {
      return Data_Traversable.sequence(Data_Traversable.traversableArray)(Lib_Random.applicativeRandom)(Data_Array.replicate(Data_Lens_Getter.viewOn(state)(_size(Data_Lens_Internal_Forget.strongForget)))(Lib_Random.randomInt(Data_Lens_Getter.viewOn(state)(_nbColors(Data_Lens_Internal_Forget.strongForget)))));
  }, function (state) {
      return Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(Data_Eq.eqInt)(0))(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget)));
  }, Control_Applicative.pure(Lib_Random.applicativeRandom), function (state) {
      return function (i) {
          return Data_Maybe.Just.create(Data_Array.mapWithIndex(function (i$prime) {
              return function (color) {
                  var $19 = inRange(state)(i)(i$prime);
                  if ($19) {
                      return Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(color + 1 | 0)(Data_Lens_Getter.viewOn(state)(_nbColors(Data_Lens_Internal_Forget.strongForget)));
                  };
                  return color;
              };
          })(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget))));
      };
  }, Game_Core.defaultSizeLimit, function (st) {
      return new Data_Tuple.Tuple(st, true);
  });
  var setNbColorsA = Game_Core["newGame'"](tricolorGame)(Data_Lens_Setter.set(_nbColors(Data_Profunctor_Strong.strongFn)));
  var setRangeA = Game_Core["newGame'"](tricolorGame)(Data_Lens_Setter.set(_range(Data_Profunctor_Strong.strongFn)));
  var setSizeA = Game_Core["newGame'"](tricolorGame)(Data_Lens_Setter.set(_size(Data_Profunctor_Strong.strongFn)));
  exports["_size"] = _size;
  exports["_nbColors"] = _nbColors;
  exports["_range"] = _range;
  exports["_hoverCell"] = _hoverCell;
  exports["istate"] = istate;
  exports["inRange"] = inRange;
  exports["setSizeA"] = setSizeA;
  exports["setNbColorsA"] = setNbColorsA;
  exports["setRangeA"] = setRangeA;
  exports["setHoverCellA"] = setHoverCellA;
  exports["tricolorGame"] = tricolorGame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Tricolor.View"] = $PS["Game.Tricolor.View"] || {};
  var exports = $PS["Game.Tricolor.View"];
  var Control_Category = $PS["Control.Category"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Game_Core = $PS["Game.Core"];
  var Game_Tricolor_Model = $PS["Game.Tricolor.Model"];
  var $$Math = $PS["Math"];
  var Pha = $PS["Pha"];
  var Pha_Html = $PS["Pha.Html"];
  var UI_Icons = $PS["UI.Icons"];
  var UI_Template = $PS["UI.Template"];                
  var translateCell = function (i) {
      return function (size) {
          var y = 0.45 + 0.35 * $$Math.sin((Data_Int.toNumber(i) * 2.0 * $$Math.pi) / Data_Int.toNumber(size));
          var x = 0.5 + 0.35 * $$Math.cos((Data_Int.toNumber(i) * 2.0 * $$Math.pi) / Data_Int.toNumber(size));
          return Pha_Html.translate(Pha_Html.unitPc)(Pha_Html.unitPc)(Pha_Html.pc(x))(Pha_Html.pc(y));
      };
  };
  var colors = [ "green", "yellow", "red", "magenta", "blue" ];
  var view = function (state) {
      var size = Data_Lens_Getter.viewOn(state)(Game_Tricolor_Model["_size"](Data_Lens_Internal_Forget.strongForget));
      var rules = [ Pha.text("blah blah blah blah") ];
      var nbColors = Data_Lens_Getter.viewOn(state)(Game_Tricolor_Model["_nbColors"](Data_Lens_Internal_Forget.strongForget));
      var levelFinished = Game_Core.isLevelFinished(Game_Tricolor_Model.tricolorGame)(state);
      var config = UI_Template.card("Feux tricolores")([ UI_Icons.iconSelectGroup(Data_Show.showInt)(Data_Eq.eqInt)(state)("Nombre de lumi\xe8res")([ 4, 5, 6, 7, 8 ])(size)(Game_Tricolor_Model.setSizeA)(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn))), UI_Icons.iconSelectGroup(Data_Show.showInt)(Data_Eq.eqInt)(state)("Nombre de couleurs")([ 2, 3, 4, 5 ])(nbColors)(Game_Tricolor_Model.setNbColorsA)(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn))), UI_Icons.iconSelectGroup(Data_Show.showInt)(Data_Eq.eqInt)(state)("Port\xe9e")([ 1, 2, 3 ])(Data_Lens_Getter.viewOn(state)(Game_Tricolor_Model["_range"](Data_Lens_Internal_Forget.strongForget)))(Game_Tricolor_Model.setRangeA)(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn))), UI_Icons.icongroup("Options")(Data_Functor.mapFlipped(Data_Functor.functorArray)([ UI_Icons.iundo, UI_Icons.iredo, UI_Icons.ireset, UI_Icons.irules ])(function (x) {
          return x(state);
      })) ]);
      var board = Pha_Html["div'"]([ Pha_Html["class'"]("ui-board tricolor-board")(true) ])([ Pha_Html.svg([ Pha_Html.viewBox(0)(0)(100)(100) ])(Data_Array.concat([ Data_Array.mapWithIndex(function (i) {
          return function (color) {
              return Pha_Html.circle(0.0)(0.0)(7.5)([ Pha_Html["class'"]("tricolor-cell")(true), Pha_Html["class'"]("finished")(levelFinished), Pha_Html.stroke((function () {
                  var $1 = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqBoolean))(Data_Functor.map(Data_Maybe.functorMaybe)(Game_Tricolor_Model.inRange(state)(i))(Data_Lens_Getter.viewOn(state)(Game_Tricolor_Model["_hoverCell"](Data_Lens_Internal_Forget.strongForget))))(new Data_Maybe.Just(true));
                  if ($1) {
                      return "lightgreen";
                  };
                  return "black";
              })()), Pha_Html.key("b" + Data_Show.show(Data_Show.showInt)(i)), Pha_Html.style(Pha_Html.unittoStr)("fill")((function () {
                  if (levelFinished) {
                      return "";
                  };
                  return Data_Maybe.fromMaybe("")(Data_Array.index(colors)(color));
              })()), Pha_Html.style(Pha_Html.unittoStr)("transform")(translateCell(i)(size)), Pha_Html.click(Game_Core.playA(Game_Tricolor_Model.tricolorGame)(i)), Pha_Html.pointerenter(Game_Tricolor_Model.setHoverCellA(new Data_Maybe.Just(i))), Pha_Html.pointerleave(Game_Tricolor_Model.setHoverCellA(Data_Maybe.Nothing.value)) ]);
          };
      })(Data_Lens_Getter.viewOn(state)(Game_Core["_position"](Data_Lens_Internal_Forget.strongForget))), Data_Array.concat(Data_Array.mapWithIndex(function (i) {
          return function (color) {
              return [ Pha_Html.circle(95.0 + 15.0 * Data_Int.toNumber(i - nbColors | 0))(95.0)(3.0)([ Pha_Html.key("c" + Data_Show.show(Data_Show.showInt)(i)), Pha_Html.fill(color) ]), Pha_Html["text'"](Pha_Html.unitNumber)(99.0 + 15.0 * Data_Int.toNumber(i - nbColors | 0))(97.0)("\u27a1")([ Pha_Html.key("t" + Data_Show.show(Data_Show.showInt)(i)), Pha_Html.attr(Pha_Html.unittoStr)("font-size")("7") ]) ];
          };
      })(Data_Array.take(nbColors)(colors))), [ Pha_Html.circle(95.0)(95.0)(3.0)([ Pha_Html.key("fc"), Pha_Html.fill("green") ]) ] ])) ]);
      return UI_Template.template(Game_Tricolor_Model.tricolorGame)(function (v) {
          return {
              board: board,
              config: config,
              rules: rules,
              winTitle: v.winTitle,
              customDialog: v.customDialog,
              scoreDialog: v.scoreDialog
          };
      })(state);
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Tricolor"] = $PS["Game.Tricolor"] || {};
  var exports = $PS["Game.Tricolor"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Unit = $PS["Data.Unit"];
  var Game = $PS["Game"];
  var Game_Core = $PS["Game.Core"];
  var Game_Tricolor_Model = $PS["Game.Tricolor.Model"];
  var Game_Tricolor_View = $PS["Game.Tricolor.View"];
  var Pha_Lens = $PS["Pha.Lens"];
  var Run = $PS["Run"];                
  var State = function (x) {
      return x;
  };
  var state = Game_Tricolor_Model.istate;
  var _iso = function (dictProfunctor) {
      return Data_Lens_Iso.iso(function (v) {
          return v;
      })(State)(dictProfunctor);
  };
  var cgame = new Game.CGame(Pha_Lens.actionOver(function (dictStrong) {
      return _iso(dictStrong.Profunctor0());
  })(Game_Core.init(Game_Tricolor_Model.tricolorGame)), function (v) {
      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
  }, function (lens) {
      return function (v) {
          return Pha_Lens.viewOver(function (dictStrong) {
              var $9 = lens(dictStrong);
              var $10 = _iso(dictStrong.Profunctor0());
              return function ($11) {
                  return $9($10($11));
              };
          })(Game_Tricolor_View.view(v));
      };
  });
  exports["state"] = state;
  exports["cgame"] = cgame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Valise.Model"] = $PS["Game.Valise.Model"] || {};
  var exports = $PS["Game.Valise.Model"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Lens_At = $PS["Data.Lens.At"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Lens_Setter = $PS["Data.Lens.Setter"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Game_Effs = $PS["Game.Effs"];
  var Pha_Action = $PS["Pha.Action"];
  var Run = $PS["Run"];                
  var setDragA = function (d) {
      return Pha_Action.setState(function (v) {
          return {
              drag: d,
              help: v.help,
              helpVisible: v.helpVisible,
              isOpen: v.isOpen,
              isSwitchOn: v.isSwitchOn,
              positions: v.positions
          };
      });
  };
  var istate = {
      isOpen: false,
      help: "",
      helpVisible: false,
      drag: Data_Maybe.Nothing.value,
      positions: Data_Map_Internal.empty,
      isSwitchOn: false
  };
  var leaveA = Pha_Action.setState(function (v) {
      return istate;
  });
  var enterA = Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.delay(1500))(function () {
      return Pha_Action.setState(function (v) {
          return {
              isOpen: true,
              drag: v.drag,
              help: v.help,
              helpVisible: v.helpVisible,
              isSwitchOn: v.isSwitchOn,
              positions: v.positions
          };
      });
  });
  var _positions = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.positions;
      })(function (v) {
          return function (v1) {
              return {
                  positions: v1,
                  drag: v.drag,
                  help: v.help,
                  helpVisible: v.helpVisible,
                  isOpen: v.isOpen,
                  isSwitchOn: v.isSwitchOn
              };
          };
      })(dictStrong);
  };
  var moveObjectA = Control_Bind.bind(Run.bindRun)(Pha_Action.getState)(function (v) {
      return Control_Bind.bind(Run.bindRun)(Game_Effs.getPointerPosition)(function (v1) {
          var v2 = new Data_Tuple.Tuple(v.drag, v1);
          if (v2.value0 instanceof Data_Maybe.Just && v2.value1 instanceof Data_Maybe.Just) {
              return Pha_Action.setState(Data_Lens_Setter.set((function () {
                  var $39 = _positions(Data_Profunctor_Strong.strongFn);
                  var $40 = Data_Lens_At.at(Data_Lens_At.atMap(Data_Ord.ordString))(v2.value0.value0.name)(Data_Profunctor_Strong.strongFn);
                  return function ($41) {
                      return $39($40($41));
                  };
              })())(new Data_Maybe.Just({
                  x: v2.value1.value0.x - v2.value0.value0.x,
                  y: v2.value1.value0.y - v2.value0.value0.y
              })));
          };
          return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
      });
  });
  var _isSwitchOn = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.isSwitchOn;
      })(function (v) {
          return function (v1) {
              return {
                  isSwitchOn: v1,
                  drag: v.drag,
                  help: v.help,
                  helpVisible: v.helpVisible,
                  isOpen: v.isOpen,
                  positions: v.positions
              };
          };
      })(dictStrong);
  };
  var toggleSwitchA = Pha_Action.setState(Data_Lens_Setter.over(_isSwitchOn(Data_Profunctor_Strong.strongFn))(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean)));
  var _helpVisible = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.helpVisible;
      })(function (v) {
          return function (v1) {
              return {
                  helpVisible: v1,
                  drag: v.drag,
                  help: v.help,
                  isOpen: v.isOpen,
                  isSwitchOn: v.isSwitchOn,
                  positions: v.positions
              };
          };
      })(dictStrong);
  };
  var _help = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.help;
      })(function (v) {
          return function (v1) {
              return {
                  help: v1,
                  drag: v.drag,
                  helpVisible: v.helpVisible,
                  isOpen: v.isOpen,
                  isSwitchOn: v.isSwitchOn,
                  positions: v.positions
              };
          };
      })(dictStrong);
  };
  var showHelpA = function (help) {
      return Pha_Action.setState((function () {
          var $42 = Data_Lens_Setter.over(_help(Data_Profunctor_Strong.strongFn))((function () {
              var $38 = help === "";
              if ($38) {
                  return Control_Category.identity(Control_Category.categoryFn);
              };
              return Data_Function["const"](help);
          })());
          var $43 = Data_Lens_Setter.set(_helpVisible(Data_Profunctor_Strong.strongFn))(help !== "");
          return function ($44) {
              return $42($43($44));
          };
      })());
  };
  exports["istate"] = istate;
  exports["_positions"] = _positions;
  exports["showHelpA"] = showHelpA;
  exports["toggleSwitchA"] = toggleSwitchA;
  exports["enterA"] = enterA;
  exports["leaveA"] = leaveA;
  exports["setDragA"] = setDragA;
  exports["moveObjectA"] = moveObjectA;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Valise.View"] = $PS["Game.Valise.View"] || {};
  var exports = $PS["Game.Valise.View"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lens_At = $PS["Data.Lens.At"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Game_Valise_Model = $PS["Game.Valise.Model"];
  var Pha = $PS["Pha"];
  var Pha_Html = $PS["Pha.Html"];
  var Run = $PS["Run"];                
  var valise = function (state) {
      var object = function (v) {
          return function (x$prime) {
              return function (y$prime) {
                  return function (w$prime) {
                      return function (h$prime) {
                          return function (props) {
                              return function (children) {
                                  var defaultTranslate = Pha_Html.translate(Pha_Html.unitPc)(Pha_Html.unitPc)(Pha_Html.pc(Data_Int.toNumber(x$prime) / 850.0))(Pha_Html.pc(Data_Int.toNumber(y$prime) / 690.0));
                                  return Pha_Html.g([ Pha_Html.style(Pha_Html.unittoStr)("transform")((function () {
                                      var v1 = new Data_Tuple.Tuple(v.drag, Data_Lens_Getter.viewOn(Data_Lens_Getter.viewOn(state)(Game_Valise_Model["_positions"](Data_Lens_Internal_Forget.strongForget)))(Data_Lens_At.at(Data_Lens_At.atMap(Data_Ord.ordString))(v.symbol)(Data_Lens_Internal_Forget.strongForget)));
                                      if (v1.value0 && v1.value1 instanceof Data_Maybe.Just) {
                                          return Pha_Html.translate(Pha_Html.unitPc)(Pha_Html.unitPc)(Pha_Html.pc(v1.value1.value0.x))(Pha_Html.pc(v1.value1.value0.y));
                                      };
                                      return defaultTranslate;
                                  })()) ])([ Pha_Html.g(props)([ Pha_Html.svg(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html["class'"]("valise-object")(true), Pha_Html.style(Pha_Html.unittoStr)("touch-action")("none"), Pha_Html["class'"]("draggable")(v.drag), Pha_Html.width(Pha_Html.unitInt)(w$prime), Pha_Html.height(Pha_Html.unitInt)(h$prime), Pha_Html.pointerdown((function () {
                                      if (v.drag) {
                                          return Game_Valise_Model.setDragA(new Data_Maybe.Just({
                                              name: v.symbol,
                                              x: Data_Int.toNumber(w$prime) / 1650.0,
                                              y: Data_Int.toNumber(h$prime) / 1380.0
                                          }));
                                      };
                                      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
                                  })()) ])((function () {
                                      var $16 = Data_Maybe.isJust(v.link);
                                      if ($16) {
                                          return [  ];
                                      };
                                      return [ Pha_Html.pointerenter(Game_Valise_Model.showHelpA(v.help)), Pha_Html.pointerleave(Game_Valise_Model.showHelpA("")) ];
                                  })()))([ Pha.h("use")([ Pha_Html.href("#" + v.symbol), Pha_Html["class'"]("valise-symbol")(true) ])([  ]), Pha.maybeN(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(v.link)(function (l) {
                                      return Pha_Html.a([ Pha_Html.href("#" + l) ])([ Pha_Html.rect(Pha_Html.unittoStr)(Pha_Html.unittoStr)(Pha_Html.unittoStr)(Pha_Html.unittoStr)("0")("0")("100%")("100%")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Pha_Html["class'"]("valise-object-link")(true), Pha_Html.fill("transparent"), Pha_Html.pointerenter(Game_Valise_Model.showHelpA(v.help)), Pha_Html.pointerleave(Game_Valise_Model.showHelpA("")) ])(children)) ]);
                                  })) ]) ]) ]);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Pha_Html.svg([ Pha_Html.viewBox(0)(0)(825)(690), Pha_Html.pointermove(Game_Valise_Model.moveObjectA), Pha_Html.pointerup(Game_Valise_Model.setDragA(Data_Maybe.Nothing.value)) ])([ Pha.h("use")([ Pha_Html.href("#valise"), Pha_Html["class'"]("valise-close")(true), Pha_Html.width(Pha_Html.unittoStr)("100%"), Pha_Html.height(Pha_Html.unittoStr)("100%") ])([  ]), Pha_Html.g([ Pha_Html["class'"]("valise-open")(true) ])([ Pha.h("use")([ Pha_Html.href("#openvalise") ])([  ]), object({
          symbol: "switch",
          link: Data_Maybe.Nothing.value,
          help: "",
          drag: false
      })(300)(460)(42)(60)([ Pha_Html.click(Game_Valise_Model.toggleSwitchA), Pha_Html.style(Pha_Html.unittoStr)("transform")((function () {
          if (state.isSwitchOn) {
              return "scale(1,-1) translateY(-8%)";
          };
          return "scale(1,1)";
      })()) ])([  ]), object({
          symbol: "bulboff",
          link: Data_Maybe.Nothing.value,
          help: "Trouve un moyen d'allumer l'ampoule",
          drag: false
      })(477)(280)(48)(48)([  ])([ Pha_Html.style(Pha_Html.unittoStr)("pointer-events")("all") ]), object({
          symbol: "bulbon",
          link: new Data_Maybe.Just("noirblanc"),
          help: "Jeu: tour noir, tout blanc",
          drag: false
      })(477)(280)(48)(48)([ Pha_Html.attr(Pha_Html.unittoStr)("transition")("opacity 0.5s"), Pha_Html.attr(Pha_Html.unittoStr)("opacity")((function () {
          if (state.isSwitchOn) {
              return "1";
          };
          return "0";
      })()), Pha_Html.style(Pha_Html.unittoStr)("pointer-events")((function () {
          if (state.isSwitchOn) {
              return "all";
          };
          return "none";
      })()) ])([  ]), object({
          symbol: "frog2",
          link: new Data_Maybe.Just("frog"),
          help: "Jeu: la grenouille",
          drag: false
      })(549)(320)(40)(40)([ Pha_Html.fill("#bcd35f") ])([ Pha_Html.x(Pha_Html.unittoStr)("10%"), Pha_Html.y(Pha_Html.unittoStr)("20%"), Pha_Html.width(Pha_Html.unittoStr)("80%"), Pha_Html.height(Pha_Html.unittoStr)("80%") ]), object({
          symbol: "flowerpot",
          link: Data_Maybe.Nothing.value,
          help: "Quelque chose se cache derri\xe8re ce pot",
          drag: true
      })(533)(300)(64)(64)([  ])([  ]), object({
          symbol: "hanoibot",
          link: new Data_Maybe.Just("solitaire"),
          help: "Jeu: solitaire",
          drag: false
      })(500)(430)(75)(51)([  ])([ Pha_Html.x(Pha_Html.unittoStr)("30%"), Pha_Html.y(Pha_Html.unittoStr)("20%"), Pha_Html.width(Pha_Html.unittoStr)("40%"), Pha_Html.height(Pha_Html.unittoStr)("40%") ]), object({
          symbol: "hanoitop",
          link: Data_Maybe.Nothing.value,
          help: "Quelque chose se cache sous cette tour",
          drag: true
      })(507)(409)(60)(57)([  ])([  ]), object({
          symbol: "knight",
          link: new Data_Maybe.Just("queens"),
          help: "Jeu: les 8 reines",
          drag: false
      })(461)(380)(24)(48)([ Pha_Html.transform("rotate(40)") ])([  ]), object({
          symbol: "pen",
          link: new Data_Maybe.Just("dessin"),
          help: "Jeu: dessin",
          drag: false
      })(610)(400)(60)(60)([  ])([  ]), object({
          symbol: "stack",
          link: new Data_Maybe.Just("jetons"),
          help: "Jeu: jetons",
          drag: false
      })(350)(500)(50)(50)([  ])([  ]), object({
          symbol: "wheel",
          link: new Data_Maybe.Just("roue"),
          help: "Jeu: roue des couleurs",
          drag: false
      })(400)(205)(50)(50)([ Pha_Html.transform("scale(1,0.8)") ])([  ]), object({
          symbol: "card",
          link: new Data_Maybe.Just("nim"),
          help: "Jeu: Poker Nim",
          drag: false
      })(450)(130)(40)(50)([ Pha_Html.transform("rotate(30)") ])([  ]), object({
          symbol: "tile",
          link: new Data_Maybe.Just("tiling"),
          help: "Jeu: carrelage",
          drag: false
      })(280)(400)(120)(60)([  ])([  ]), object({
          symbol: "tricolor2",
          link: new Data_Maybe.Just("baseball"),
          help: "Jeu: baseball multicolore",
          drag: false
      })(350)(330)(90)(60)([  ])([  ]), object({
          symbol: "traffic",
          link: new Data_Maybe.Just("tricolor"),
          help: "Jeu: feu tricolore",
          drag: false
      })(250)(280)(64)(64)([  ])([  ]), object({
          symbol: "race",
          link: new Data_Maybe.Just("paths"),
          help: "Jeu: chemins",
          drag: false
      })(450)(445)(64)(64)([ Pha_Html.transform("rotate(40)") ])([  ]), object({
          symbol: "paw",
          link: new Data_Maybe.Just("labete"),
          help: "Jeu: la b\xeate",
          drag: false
      })(300)(180)(40)(40)([ Pha_Html.transform("rotate(30)"), Pha_Html.attr(Pha_Html.unittoStr)("opacity")("0.5") ])([  ]), object({
          symbol: "quiet",
          link: new Data_Maybe.Just("sansmot"),
          help: "Jeu: preuve sans mot",
          drag: false
      })(180)(130)(50)(50)([  ])([  ]), object({
          symbol: "chocolate",
          link: new Data_Maybe.Just("chocolat"),
          help: "Jeu: chocolat",
          drag: false
      })(200)(200)(60)(60)([ Pha_Html.transform("rotate(40)") ])([  ]) ]) ]);
  };
  var view = function (state) {
      return Pha_Html["div'"]([ Pha_Html["class'"]("ui-flex-center valise-main-container")(true), Pha_Html["class'"]("open")(state.isOpen) ])([ Pha_Html["div'"]([  ])([ Pha_Html["div'"]([ Pha_Html["class'"]("valise-logo")(true) ])([ Pha_Html.svguse("#logo")([  ]) ]), Pha_Html["div'"]([ Pha_Html["class'"]("valise-container")(true) ])([ valise(state), Pha_Html["div'"]([ Pha_Html["class'"]("valise-help")(true), Pha_Html["class'"]("visible")(state.helpVisible && state.help !== "") ])([ Pha.text(state.help) ]) ]) ]) ]);
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Game.Valise"] = $PS["Game.Valise"] || {};
  var exports = $PS["Game.Valise"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Unit = $PS["Data.Unit"];
  var Game = $PS["Game"];
  var Game_Valise_Model = $PS["Game.Valise.Model"];
  var Game_Valise_View = $PS["Game.Valise.View"];
  var Pha_Lens = $PS["Pha.Lens"];
  var Run = $PS["Run"];                
  var State = function (x) {
      return x;
  };
  var state = Game_Valise_Model.istate;
  var _iso = function (dictProfunctor) {
      return Data_Lens_Iso.iso(function (v) {
          return v;
      })(State)(dictProfunctor);
  };
  var cgame = new Game.CGame(Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit), function (v) {
      return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
  }, function (lens) {
      return function (v) {
          return Pha_Lens.viewOver(function (dictStrong) {
              var $8 = lens(dictStrong);
              var $9 = _iso(dictStrong.Profunctor0());
              return function ($10) {
                  return $8($9($10));
              };
          })(Game_Valise_View.view(v));
      };
  });
  exports["_iso"] = _iso;
  exports["state"] = state;
  exports["cgame"] = cgame;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.5
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Game = $PS["Game"];
  var Game_Baseball = $PS["Game.Baseball"];
  var Game_Chocolat = $PS["Game.Chocolat"];
  var Game_Dessin = $PS["Game.Dessin"];
  var Game_Effs = $PS["Game.Effs"];
  var Game_Frog = $PS["Game.Frog"];
  var Game_Jetons = $PS["Game.Jetons"];
  var Game_Labete = $PS["Game.Labete"];
  var Game_Nim = $PS["Game.Nim"];
  var Game_Noirblanc = $PS["Game.Noirblanc"];
  var Game_Paths = $PS["Game.Paths"];
  var Game_Queens = $PS["Game.Queens"];
  var Game_Roue = $PS["Game.Roue"];
  var Game_Sansmot = $PS["Game.Sansmot"];
  var Game_Solitaire = $PS["Game.Solitaire"];
  var Game_Tiling = $PS["Game.Tiling"];
  var Game_Tricolor = $PS["Game.Tricolor"];
  var Game_Valise = $PS["Game.Valise"];
  var Game_Valise_Model = $PS["Game.Valise.Model"];
  var Pha = $PS["Pha"];
  var Pha_Action = $PS["Pha.Action"];
  var Pha_Event = $PS["Pha.Event"];
  var Pha_Html = $PS["Pha.Html"];
  var Pha_Lens = $PS["Pha.Lens"];
  var Run = $PS["Run"];                
  var state = {
      baseball: Game_Baseball.state,
      chocolat: Game_Chocolat.state,
      dessin: Game_Dessin.state,
      frog: Game_Frog.state,
      jetons: Game_Jetons.state,
      labete: Game_Labete.state,
      nim: Game_Nim.state,
      noirblanc: Game_Noirblanc.state,
      paths: Game_Paths.state,
      queens: Game_Queens.state,
      roue: Game_Roue.state,
      sansmot: Game_Sansmot.state,
      solitaire: Game_Solitaire.state,
      tiling: Game_Tiling.state,
      tricolor: Game_Tricolor.state,
      valise: Game_Valise.state,
      location: "",
      anim: true
  };
  var extractLocation = function (url) {
      return function (defaultValue) {
          return Data_Maybe.maybe(defaultValue)(function (i) {
              return Data_String_CodePoints.drop(i + 1 | 0)(url);
          })(Data_String_CodePoints.indexOf("#")(url));
      };
  };
  var _valise = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.valise;
      })(function (v) {
          return function (v1) {
              return {
                  valise: v1,
                  anim: v.anim,
                  baseball: v.baseball,
                  chocolat: v.chocolat,
                  dessin: v.dessin,
                  frog: v.frog,
                  jetons: v.jetons,
                  labete: v.labete,
                  location: v.location,
                  nim: v.nim,
                  noirblanc: v.noirblanc,
                  paths: v.paths,
                  queens: v.queens,
                  roue: v.roue,
                  sansmot: v.sansmot,
                  solitaire: v.solitaire,
                  tiling: v.tiling,
                  tricolor: v.tricolor
              };
          };
      })(dictStrong);
  };
  var hashChange = Control_Bind.bind(Run.bindRun)(Game_Effs.getLocation)(function (v) {
      var location = extractLocation(v.hash)("valise");
      var $112 = location === "valise" || location === "";
      if ($112) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.setState(function (v1) {
              return {
                  location: location,
                  anim: true,
                  baseball: v1.baseball,
                  chocolat: v1.chocolat,
                  dessin: v1.dessin,
                  frog: v1.frog,
                  jetons: v1.jetons,
                  labete: v1.labete,
                  nim: v1.nim,
                  noirblanc: v1.noirblanc,
                  paths: v1.paths,
                  queens: v1.queens,
                  roue: v1.roue,
                  sansmot: v1.sansmot,
                  solitaire: v1.solitaire,
                  tiling: v1.tiling,
                  tricolor: v1.tricolor,
                  valise: v1.valise
              };
          }))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.delay(100))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.setState(function (v1) {
                      return {
                          anim: false,
                          baseball: v1.baseball,
                          chocolat: v1.chocolat,
                          dessin: v1.dessin,
                          frog: v1.frog,
                          jetons: v1.jetons,
                          labete: v1.labete,
                          location: v1.location,
                          nim: v1.nim,
                          noirblanc: v1.noirblanc,
                          paths: v1.paths,
                          queens: v1.queens,
                          roue: v1.roue,
                          sansmot: v1.sansmot,
                          solitaire: v1.solitaire,
                          tiling: v1.tiling,
                          tricolor: v1.tricolor,
                          valise: v1.valise
                      };
                  }))(function () {
                      return Pha_Lens.actionOver(function (dictStrong) {
                          var $118 = _valise(dictStrong);
                          var $119 = Game_Valise["_iso"](dictStrong.Profunctor0());
                          return function ($120) {
                              return $118($119($120));
                          };
                      })(Game_Valise_Model.enterA);
                  });
              });
          });
      };
      return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Lens.actionOver(function (dictStrong) {
          var $121 = _valise(dictStrong);
          var $122 = Game_Valise["_iso"](dictStrong.Profunctor0());
          return function ($123) {
              return $121($122($123));
          };
      })(Game_Valise_Model.leaveA))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.setState(function (v1) {
              return {
                  location: location,
                  anim: true,
                  baseball: v1.baseball,
                  chocolat: v1.chocolat,
                  dessin: v1.dessin,
                  frog: v1.frog,
                  jetons: v1.jetons,
                  labete: v1.labete,
                  nim: v1.nim,
                  noirblanc: v1.noirblanc,
                  paths: v1.paths,
                  queens: v1.queens,
                  roue: v1.roue,
                  sansmot: v1.sansmot,
                  solitaire: v1.solitaire,
                  tiling: v1.tiling,
                  tricolor: v1.tricolor,
                  valise: v1.valise
              };
          }))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Action.delay(100))(function () {
                  return Pha_Action.setState(function (v1) {
                      return {
                          anim: false,
                          location: v1.location,
                          baseball: v1.baseball,
                          chocolat: v1.chocolat,
                          dessin: v1.dessin,
                          frog: v1.frog,
                          jetons: v1.jetons,
                          labete: v1.labete,
                          nim: v1.nim,
                          noirblanc: v1.noirblanc,
                          paths: v1.paths,
                          queens: v1.queens,
                          roue: v1.roue,
                          sansmot: v1.sansmot,
                          solitaire: v1.solitaire,
                          tiling: v1.tiling,
                          tricolor: v1.tricolor,
                          valise: v1.valise
                      };
                  });
              });
          });
      });
  });
  var _tricolor = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.tricolor;
      })(function (v) {
          return function (v1) {
              return {
                  tricolor: v1,
                  anim: v.anim,
                  baseball: v.baseball,
                  chocolat: v.chocolat,
                  dessin: v.dessin,
                  frog: v.frog,
                  jetons: v.jetons,
                  labete: v.labete,
                  location: v.location,
                  nim: v.nim,
                  noirblanc: v.noirblanc,
                  paths: v.paths,
                  queens: v.queens,
                  roue: v.roue,
                  sansmot: v.sansmot,
                  solitaire: v.solitaire,
                  tiling: v.tiling,
                  valise: v.valise
              };
          };
      })(dictStrong);
  };
  var _tiling = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.tiling;
      })(function (v) {
          return function (v1) {
              return {
                  tiling: v1,
                  anim: v.anim,
                  baseball: v.baseball,
                  chocolat: v.chocolat,
                  dessin: v.dessin,
                  frog: v.frog,
                  jetons: v.jetons,
                  labete: v.labete,
                  location: v.location,
                  nim: v.nim,
                  noirblanc: v.noirblanc,
                  paths: v.paths,
                  queens: v.queens,
                  roue: v.roue,
                  sansmot: v.sansmot,
                  solitaire: v.solitaire,
                  tricolor: v.tricolor,
                  valise: v.valise
              };
          };
      })(dictStrong);
  };
  var _solitaire = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.solitaire;
      })(function (v) {
          return function (v1) {
              return {
                  solitaire: v1,
                  anim: v.anim,
                  baseball: v.baseball,
                  chocolat: v.chocolat,
                  dessin: v.dessin,
                  frog: v.frog,
                  jetons: v.jetons,
                  labete: v.labete,
                  location: v.location,
                  nim: v.nim,
                  noirblanc: v.noirblanc,
                  paths: v.paths,
                  queens: v.queens,
                  roue: v.roue,
                  sansmot: v.sansmot,
                  tiling: v.tiling,
                  tricolor: v.tricolor,
                  valise: v.valise
              };
          };
      })(dictStrong);
  };
  var _sansmot = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.sansmot;
      })(function (v) {
          return function (v1) {
              return {
                  sansmot: v1,
                  anim: v.anim,
                  baseball: v.baseball,
                  chocolat: v.chocolat,
                  dessin: v.dessin,
                  frog: v.frog,
                  jetons: v.jetons,
                  labete: v.labete,
                  location: v.location,
                  nim: v.nim,
                  noirblanc: v.noirblanc,
                  paths: v.paths,
                  queens: v.queens,
                  roue: v.roue,
                  solitaire: v.solitaire,
                  tiling: v.tiling,
                  tricolor: v.tricolor,
                  valise: v.valise
              };
          };
      })(dictStrong);
  };
  var _roue = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.roue;
      })(function (v) {
          return function (v1) {
              return {
                  roue: v1,
                  anim: v.anim,
                  baseball: v.baseball,
                  chocolat: v.chocolat,
                  dessin: v.dessin,
                  frog: v.frog,
                  jetons: v.jetons,
                  labete: v.labete,
                  location: v.location,
                  nim: v.nim,
                  noirblanc: v.noirblanc,
                  paths: v.paths,
                  queens: v.queens,
                  sansmot: v.sansmot,
                  solitaire: v.solitaire,
                  tiling: v.tiling,
                  tricolor: v.tricolor,
                  valise: v.valise
              };
          };
      })(dictStrong);
  };
  var _queens = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.queens;
      })(function (v) {
          return function (v1) {
              return {
                  queens: v1,
                  anim: v.anim,
                  baseball: v.baseball,
                  chocolat: v.chocolat,
                  dessin: v.dessin,
                  frog: v.frog,
                  jetons: v.jetons,
                  labete: v.labete,
                  location: v.location,
                  nim: v.nim,
                  noirblanc: v.noirblanc,
                  paths: v.paths,
                  roue: v.roue,
                  sansmot: v.sansmot,
                  solitaire: v.solitaire,
                  tiling: v.tiling,
                  tricolor: v.tricolor,
                  valise: v.valise
              };
          };
      })(dictStrong);
  };
  var _paths = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.paths;
      })(function (v) {
          return function (v1) {
              return {
                  paths: v1,
                  anim: v.anim,
                  baseball: v.baseball,
                  chocolat: v.chocolat,
                  dessin: v.dessin,
                  frog: v.frog,
                  jetons: v.jetons,
                  labete: v.labete,
                  location: v.location,
                  nim: v.nim,
                  noirblanc: v.noirblanc,
                  queens: v.queens,
                  roue: v.roue,
                  sansmot: v.sansmot,
                  solitaire: v.solitaire,
                  tiling: v.tiling,
                  tricolor: v.tricolor,
                  valise: v.valise
              };
          };
      })(dictStrong);
  };
  var _noirblanc = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.noirblanc;
      })(function (v) {
          return function (v1) {
              return {
                  noirblanc: v1,
                  anim: v.anim,
                  baseball: v.baseball,
                  chocolat: v.chocolat,
                  dessin: v.dessin,
                  frog: v.frog,
                  jetons: v.jetons,
                  labete: v.labete,
                  location: v.location,
                  nim: v.nim,
                  paths: v.paths,
                  queens: v.queens,
                  roue: v.roue,
                  sansmot: v.sansmot,
                  solitaire: v.solitaire,
                  tiling: v.tiling,
                  tricolor: v.tricolor,
                  valise: v.valise
              };
          };
      })(dictStrong);
  };
  var _nim = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.nim;
      })(function (v) {
          return function (v1) {
              return {
                  nim: v1,
                  anim: v.anim,
                  baseball: v.baseball,
                  chocolat: v.chocolat,
                  dessin: v.dessin,
                  frog: v.frog,
                  jetons: v.jetons,
                  labete: v.labete,
                  location: v.location,
                  noirblanc: v.noirblanc,
                  paths: v.paths,
                  queens: v.queens,
                  roue: v.roue,
                  sansmot: v.sansmot,
                  solitaire: v.solitaire,
                  tiling: v.tiling,
                  tricolor: v.tricolor,
                  valise: v.valise
              };
          };
      })(dictStrong);
  };
  var _labete = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.labete;
      })(function (v) {
          return function (v1) {
              return {
                  labete: v1,
                  anim: v.anim,
                  baseball: v.baseball,
                  chocolat: v.chocolat,
                  dessin: v.dessin,
                  frog: v.frog,
                  jetons: v.jetons,
                  location: v.location,
                  nim: v.nim,
                  noirblanc: v.noirblanc,
                  paths: v.paths,
                  queens: v.queens,
                  roue: v.roue,
                  sansmot: v.sansmot,
                  solitaire: v.solitaire,
                  tiling: v.tiling,
                  tricolor: v.tricolor,
                  valise: v.valise
              };
          };
      })(dictStrong);
  };
  var _jetons = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.jetons;
      })(function (v) {
          return function (v1) {
              return {
                  jetons: v1,
                  anim: v.anim,
                  baseball: v.baseball,
                  chocolat: v.chocolat,
                  dessin: v.dessin,
                  frog: v.frog,
                  labete: v.labete,
                  location: v.location,
                  nim: v.nim,
                  noirblanc: v.noirblanc,
                  paths: v.paths,
                  queens: v.queens,
                  roue: v.roue,
                  sansmot: v.sansmot,
                  solitaire: v.solitaire,
                  tiling: v.tiling,
                  tricolor: v.tricolor,
                  valise: v.valise
              };
          };
      })(dictStrong);
  };
  var _frog = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.frog;
      })(function (v) {
          return function (v1) {
              return {
                  frog: v1,
                  anim: v.anim,
                  baseball: v.baseball,
                  chocolat: v.chocolat,
                  dessin: v.dessin,
                  jetons: v.jetons,
                  labete: v.labete,
                  location: v.location,
                  nim: v.nim,
                  noirblanc: v.noirblanc,
                  paths: v.paths,
                  queens: v.queens,
                  roue: v.roue,
                  sansmot: v.sansmot,
                  solitaire: v.solitaire,
                  tiling: v.tiling,
                  tricolor: v.tricolor,
                  valise: v.valise
              };
          };
      })(dictStrong);
  };
  var _dessin = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.dessin;
      })(function (v) {
          return function (v1) {
              return {
                  dessin: v1,
                  anim: v.anim,
                  baseball: v.baseball,
                  chocolat: v.chocolat,
                  frog: v.frog,
                  jetons: v.jetons,
                  labete: v.labete,
                  location: v.location,
                  nim: v.nim,
                  noirblanc: v.noirblanc,
                  paths: v.paths,
                  queens: v.queens,
                  roue: v.roue,
                  sansmot: v.sansmot,
                  solitaire: v.solitaire,
                  tiling: v.tiling,
                  tricolor: v.tricolor,
                  valise: v.valise
              };
          };
      })(dictStrong);
  };
  var _chocolat = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.chocolat;
      })(function (v) {
          return function (v1) {
              return {
                  chocolat: v1,
                  anim: v.anim,
                  baseball: v.baseball,
                  dessin: v.dessin,
                  frog: v.frog,
                  jetons: v.jetons,
                  labete: v.labete,
                  location: v.location,
                  nim: v.nim,
                  noirblanc: v.noirblanc,
                  paths: v.paths,
                  queens: v.queens,
                  roue: v.roue,
                  sansmot: v.sansmot,
                  solitaire: v.solitaire,
                  tiling: v.tiling,
                  tricolor: v.tricolor,
                  valise: v.valise
              };
          };
      })(dictStrong);
  };
  var _baseball = function (dictStrong) {
      return Data_Lens_Lens.lens(function (v) {
          return v.baseball;
      })(function (v) {
          return function (v1) {
              return {
                  baseball: v1,
                  anim: v.anim,
                  chocolat: v.chocolat,
                  dessin: v.dessin,
                  frog: v.frog,
                  jetons: v.jetons,
                  labete: v.labete,
                  location: v.location,
                  nim: v.nim,
                  noirblanc: v.noirblanc,
                  paths: v.paths,
                  queens: v.queens,
                  roue: v.roue,
                  sansmot: v.sansmot,
                  solitaire: v.solitaire,
                  tiling: v.tiling,
                  tricolor: v.tricolor,
                  valise: v.valise
              };
          };
      })(dictStrong);
  };
  var init = Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Lens.actionOver(function (dictStrong) {
      return _baseball(dictStrong);
  })(Game.init(Game_Baseball.cgame)))(function () {
      return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Lens.actionOver(function (dictStrong) {
          return _chocolat(dictStrong);
      })(Game.init(Game_Chocolat.cgame)))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Lens.actionOver(function (dictStrong) {
              return _dessin(dictStrong);
          })(Game.init(Game_Dessin.cgame)))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Lens.actionOver(function (dictStrong) {
                  return _frog(dictStrong);
              })(Game.init(Game_Frog.cgame)))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Lens.actionOver(function (dictStrong) {
                      return _jetons(dictStrong);
                  })(Game.init(Game_Jetons.cgame)))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Lens.actionOver(function (dictStrong) {
                          return _labete(dictStrong);
                      })(Game.init(Game_Labete.cgame)))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Lens.actionOver(function (dictStrong) {
                              return _nim(dictStrong);
                          })(Game.init(Game_Nim.cgame)))(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Lens.actionOver(function (dictStrong) {
                                  return _noirblanc(dictStrong);
                              })(Game.init(Game_Noirblanc.cgame)))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Lens.actionOver(function (dictStrong) {
                                      return _paths(dictStrong);
                                  })(Game.init(Game_Paths.cgame)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Lens.actionOver(function (dictStrong) {
                                          return _queens(dictStrong);
                                      })(Game.init(Game_Queens.cgame)))(function () {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Lens.actionOver(function (dictStrong) {
                                              return _roue(dictStrong);
                                          })(Game.init(Game_Roue.cgame)))(function () {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Lens.actionOver(function (dictStrong) {
                                                  return _sansmot(dictStrong);
                                              })(Game.init(Game_Sansmot.cgame)))(function () {
                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Lens.actionOver(function (dictStrong) {
                                                      return _solitaire(dictStrong);
                                                  })(Game.init(Game_Solitaire.cgame)))(function () {
                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Lens.actionOver(function (dictStrong) {
                                                          return _tiling(dictStrong);
                                                      })(Game.init(Game_Tiling.cgame)))(function () {
                                                          return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Lens.actionOver(function (dictStrong) {
                                                              return _tricolor(dictStrong);
                                                          })(Game.init(Game_Tricolor.cgame)))(function () {
                                                              return Control_Bind.discard(Control_Bind.discardUnit)(Run.bindRun)(Pha_Lens.actionOver(function (dictStrong) {
                                                                  return _valise(dictStrong);
                                                              })(Game.init(Game_Valise.cgame)))(function () {
                                                                  return hashChange;
                                                              });
                                                          });
                                                      });
                                                  });
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              });
          });
      });
  });
  var sliceFn = function (st) {
      return function (fn) {
          if (st.location === "baseball") {
              return fn(Game_Baseball.cgame)(function (dictStrong) {
                  return _baseball(dictStrong);
              });
          };
          if (st.location === "chocolat") {
              return fn(Game_Chocolat.cgame)(function (dictStrong) {
                  return _chocolat(dictStrong);
              });
          };
          if (st.location === "dessin") {
              return fn(Game_Dessin.cgame)(function (dictStrong) {
                  return _dessin(dictStrong);
              });
          };
          if (st.location === "frog") {
              return fn(Game_Frog.cgame)(function (dictStrong) {
                  return _frog(dictStrong);
              });
          };
          if (st.location === "jetons") {
              return fn(Game_Jetons.cgame)(function (dictStrong) {
                  return _jetons(dictStrong);
              });
          };
          if (st.location === "labete") {
              return fn(Game_Labete.cgame)(function (dictStrong) {
                  return _labete(dictStrong);
              });
          };
          if (st.location === "nim") {
              return fn(Game_Nim.cgame)(function (dictStrong) {
                  return _nim(dictStrong);
              });
          };
          if (st.location === "noirblanc") {
              return fn(Game_Noirblanc.cgame)(function (dictStrong) {
                  return _noirblanc(dictStrong);
              });
          };
          if (st.location === "paths") {
              return fn(Game_Paths.cgame)(function (dictStrong) {
                  return _paths(dictStrong);
              });
          };
          if (st.location === "roue") {
              return fn(Game_Roue.cgame)(function (dictStrong) {
                  return _roue(dictStrong);
              });
          };
          if (st.location === "queens") {
              return fn(Game_Queens.cgame)(function (dictStrong) {
                  return _queens(dictStrong);
              });
          };
          if (st.location === "sansmot") {
              return fn(Game_Sansmot.cgame)(function (dictStrong) {
                  return _sansmot(dictStrong);
              });
          };
          if (st.location === "solitaire") {
              return fn(Game_Solitaire.cgame)(function (dictStrong) {
                  return _solitaire(dictStrong);
              });
          };
          if (st.location === "tiling") {
              return fn(Game_Tiling.cgame)(function (dictStrong) {
                  return _tiling(dictStrong);
              });
          };
          if (st.location === "tricolor") {
              return fn(Game_Tricolor.cgame)(function (dictStrong) {
                  return _tricolor(dictStrong);
              });
          };
          return fn(Game_Valise.cgame)(function (dictStrong) {
              return _valise(dictStrong);
          });
      };
  };
  var onKeyDown = Control_Bind.bind(Run.bindRun)(Pha_Action.getEvent)(function (v) {
      return Control_Bind.bind(Run.bindRun)(Pha_Action.getState)(function (v1) {
          var v2 = Pha_Event.key(v);
          if (v2 instanceof Data_Maybe.Nothing) {
              return Control_Applicative.pure(Run.applicativeRun)(Data_Unit.unit);
          };
          if (v2 instanceof Data_Maybe.Just) {
              return sliceFn(v1)(function (dictCGame) {
                  return function (lens) {
                      return Pha_Lens.actionOver(function (dictStrong) {
                          return lens(dictStrong);
                      })(Game.onKeyDown(dictCGame)(v2.value0));
                  };
              });
          };
          throw new Error("Failed pattern match at Main (line 165, column 5 - line 167, column 70): " + [ v2.constructor.name ]);
      });
  });
  var viewGame = function (st) {
      return sliceFn(st)(function (dictCGame) {
          return function (lens) {
              return Game.view(dictCGame)(function (dictStrong) {
                  return lens(dictStrong);
              })(Data_Lens_Getter.viewOn(st)(lens(Data_Lens_Internal_Forget.strongForget)));
          };
      });
  };
  var view = function (st) {
      return Pha_Html["div'"]([ Pha_Html.key(st.location), Pha_Html["class'"]("main-main-container")(true), Pha_Html["class'"]("valise")(st.location === "valise"), Pha_Html["class'"]("appear")(st.anim) ])([ Pha.ifN(st.location !== "valise")(function (v) {
          return Pha_Html.a([ Pha_Html["class'"]("main-minivalise-link")(true), Pha_Html.href("#valise") ])([ Pha_Html.svguse("#valise")([  ]) ]);
      }), viewGame(st) ]);
  };
  var main = Pha.app({
      state: state,
      view: view,
      init: init,
      node: "root",
      events: [ new Data_Tuple.Tuple("keydown", onKeyDown), new Data_Tuple.Tuple("hashchange", hashChange) ],
      effects: Game_Effs.interpretEffects
  });
  exports["extractLocation"] = extractLocation;
  exports["_baseball"] = _baseball;
  exports["_chocolat"] = _chocolat;
  exports["_dessin"] = _dessin;
  exports["_frog"] = _frog;
  exports["_jetons"] = _jetons;
  exports["_labete"] = _labete;
  exports["_nim"] = _nim;
  exports["_noirblanc"] = _noirblanc;
  exports["_paths"] = _paths;
  exports["_queens"] = _queens;
  exports["_roue"] = _roue;
  exports["_sansmot"] = _sansmot;
  exports["_solitaire"] = _solitaire;
  exports["_tiling"] = _tiling;
  exports["_tricolor"] = _tricolor;
  exports["_valise"] = _valise;
  exports["hashChange"] = hashChange;
  exports["init"] = init;
  exports["sliceFn"] = sliceFn;
  exports["onKeyDown"] = onKeyDown;
  exports["view"] = view;
  exports["viewGame"] = viewGame;
  exports["state"] = state;
  exports["main"] = main;
})(PS);
PS["Main"].main();